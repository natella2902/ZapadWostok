/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
@import url("https://fonts.googleapis.com/css?family=Alegreya+Sans:300,400,500,700,800&display=swap&subset=cyrillic");

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -0.125rem;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/** VARIABLES
===================================*/
/** RESET AND LAYOUT
===================================*/
.bx-wrapper {
  position: relative;
  margin-bottom: 3.75rem;
  padding: 0;
  *zoom: 1;
  touch-action: pan-y;
}

.bx-wrapper img {
  max-width: 100%;
  display: block;
}

.bxslider {
  margin: 0;
  padding: 0;
  /*fix flickering when used background-image instead of <img> (on Chrome)*/
  -webkit-perspective: 1000;
}

ul.bxslider {
  list-style: none;
}

.bx-viewport {
  /* fix other elements on the page moving (in Chrome) */
  -webkit-transform: translateZ(0);
}

/** THEME
===================================*/
.bx-wrapper {
  box-shadow: 0 0 0.3125rem #ccc;
  border: 0.3125rem solid #fff;
  background: #fff;
}

.bx-wrapper .bx-pager,
.bx-wrapper .bx-controls-auto {
  position: absolute;
  bottom: -1.875rem;
  width: 100%;
}

/* LOADER */
.bx-wrapper .bx-loading {
  min-height: 3.125rem;
  background: url("images/bx_loader.gif") center center no-repeat #ffffff;
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2000;
}

/* PAGER */
.bx-wrapper .bx-pager {
  text-align: center;
  font-size: .85em;
  font-family: Arial;
  font-weight: bold;
  color: #666;
  padding-top: 1.25rem;
}

.bx-wrapper .bx-pager.bx-default-pager a {
  background: #666;
  text-indent: -624.9375rem;
  display: block;
  width: 0.625rem;
  height: 0.625rem;
  margin: 0 0.3125rem;
  outline: 0;
  border-radius: 0.3125rem;
}

.bx-wrapper .bx-pager.bx-default-pager a:hover,
.bx-wrapper .bx-pager.bx-default-pager a.active,
.bx-wrapper .bx-pager.bx-default-pager a:focus {
  background: #000;
}

.bx-wrapper .bx-pager-item,
.bx-wrapper .bx-controls-auto .bx-controls-auto-item {
  display: inline-block;
  vertical-align: bottom;
  *zoom: 1;
  *display: inline;
}

.bx-wrapper .bx-pager-item {
  font-size: 0;
  line-height: 0;
}

/* DIRECTION CONTROLS (NEXT / PREV) */
.bx-wrapper .bx-prev {
  left: 0.625rem;
  background: url("images/controls.png") no-repeat 0 -2rem;
}

.bx-wrapper .bx-prev:hover,
.bx-wrapper .bx-prev:focus {
  background-position: 0 0;
}

.bx-wrapper .bx-next {
  right: 0.625rem;
  background: url("images/controls.png") no-repeat -2.6875rem -2rem;
}

.bx-wrapper .bx-next:hover,
.bx-wrapper .bx-next:focus {
  background-position: -2.6875rem 0;
}

.bx-wrapper .bx-controls-direction a {
  position: absolute;
  top: 50%;
  margin-top: -1rem;
  outline: 0;
  width: 2rem;
  height: 2rem;
  text-indent: -624.9375rem;
  z-index: 9999;
}

.bx-wrapper .bx-controls-direction a.disabled {
  display: none;
}

/* AUTO CONTROLS (START / STOP) */
.bx-wrapper .bx-controls-auto {
  text-align: center;
}

.bx-wrapper .bx-controls-auto .bx-start {
  display: block;
  text-indent: -624.9375rem;
  width: 0.625rem;
  height: 0.6875rem;
  outline: 0;
  background: url("images/controls.png") -5.375rem -0.6875rem no-repeat;
  margin: 0 0.1875rem;
}

.bx-wrapper .bx-controls-auto .bx-start:hover,
.bx-wrapper .bx-controls-auto .bx-start.active,
.bx-wrapper .bx-controls-auto .bx-start:focus {
  background-position: -5.375rem 0;
}

.bx-wrapper .bx-controls-auto .bx-stop {
  display: block;
  text-indent: -624.9375rem;
  width: 0.5625rem;
  height: 0.6875rem;
  outline: 0;
  background: url("images/controls.png") -5.375rem -2.75rem no-repeat;
  margin: 0 0.1875rem;
}

.bx-wrapper .bx-controls-auto .bx-stop:hover,
.bx-wrapper .bx-controls-auto .bx-stop.active,
.bx-wrapper .bx-controls-auto .bx-stop:focus {
  background-position: -5.375rem -2.0625rem;
}

/* PAGER WITH AUTO-CONTROLS HYBRID LAYOUT */
.bx-wrapper .bx-controls.bx-has-controls-auto.bx-has-pager .bx-pager {
  text-align: left;
  width: 80%;
}

.bx-wrapper .bx-controls.bx-has-controls-auto.bx-has-pager .bx-controls-auto {
  right: 0;
  width: 2.1875rem;
}

/* IMAGE CAPTIONS */
.bx-wrapper .bx-caption {
  position: absolute;
  bottom: 0;
  left: 0;
  background: #666;
  background: rgba(80, 80, 80, 0.75);
  width: 100%;
}

.bx-wrapper .bx-caption span {
  color: #fff;
  font-family: Arial;
  display: block;
  font-size: .85em;
  padding: 0.625rem;
}

/*@function rem($px) {
    @return $px / 1rem + 0rem; 
}
*/
html {
  font-size: 1rem;
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  font-weight: normal;
  font-family: 'Roboto Condensed', sans-serif;
  line-height: 1.42;
  font-size: 1rem;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  position: relative;
}

.wrapper {
  position: relative;
  width: 100%;
  /*max-width: 58.75rem + 1.25rem; */
  display: flex;
  flex-direction: column;
  align-items: center;
}

.maincontent {
  flex: 1;
  height: 100%;
  width: 100%;
  transition: transform 1s;
  position: relative;
}

* {
  box-sizing: border-box;
}

ul,
picture,
p {
  padding: 0;
  margin: 0;
}

ul li {
  list-style: none;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

a {
  display: block;
  text-decoration: none;
  color: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  font-weight: normal;
}

p {
  font-size: 0.875rem;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.title {
  font-size: 3rem;
  font-weight: bold;
  text-transform: uppercase;
  text-align: center;
  color: inherit;
}

.section {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  min-height: 15.625rem;
  position: relative;
  width: 100%;
}

@media screen and (max-width: 480px) {
  .section {
    min-height: initial;
  }
}

.container {
  /*  max-width: 58.75rem; */
  width: 95%;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: center;
  position: relative;
}

@media screen and (max-width: 480px) {
  .container {
    height: initial;
  }
}

* {
  box-sizing: border-box;
}

.title {
  text-transform: uppercase;
  font-weight: bold;
  text-align: center;
  font-size: 1rem;
  color: inherit;
}

.subtitle {
  font-size: 1rem;
  font-weight: bold;
  color: #777b8e;
  text-align: center;
  margin-bottom: 0.625rem;
}

p,
li {
  color: #6a6a6a;
}

address {
  font-style: normal;
}

.vacancy-btn {
  background-color: #fff;
  border: 1px solid transparent;
  border-right: 1px solid #eceef3;
  padding: 0.625rem 1.25rem;
  text-align: center;
  min-height: 4.0625rem;
}

.vacancy-btn--active {
  background-color: #eceef3;
  border-top: 0.25rem solid #d1454d;
  color: #d1454d;
}

.arrow-btn {
  background-color: #fff;
  border: 1px solid transparent;
  padding: 0.3125rem 0.3125rem;
  text-align: center;
  color: #d1454d;
  <<<<<<< HEAD=======<<<<<<< HEAD>>>>>>>99cfa65dca6d12e29bf2abafd264badabb70681b height: 1.875rem;
  width: 3.125rem;
}

.arrow-btn__icon {
  width: 2.125rem;
  height: 4rem;
  fill: transparent;
  stroke: red;
  fill-rule: nonzero;
}

<<<<<<< HEAD==============
}

height: 1.875rem;
width: 3.125rem;
}

.arrow-btn__icon {
  width: 2.125rem;
  height: 4rem;
  fill: transparent;
  stroke: red;
  fill-rule: nonzero;
}

>>>>>>>4c5a02a5e537ce8b9694ddbbb882bf63c7688038>>>>>>>99cfa65dca6d12e29bf2abafd264badabb70681b .btn {
  padding: 1.25rem 2.5rem;
  box-shadow: 1px 0.125rem 0.3125rem 1px rgba(0, 0, 0, 0.25);
  text-transform: uppercase;
  font-size: 0.75rem;
  font-weight: 700;
  letter-spacing: 0rem;
  color: #ffffff;
}

.circle-btn {
  border: 1px solid #c52228;
  border-radius: 50%;
  height: 0.8125rem;
  width: 0.75rem;
  background: #fff;
}

.circle-btn--active {
  background: #c52228;
}

footer {
  min-height: 40.625rem;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: space-between;
  position: relative;
  color: #fff;
  font-size: 0.75rem;
  padding: 0.9375rem 0.3125rem;
}

footer__container {
  height: 100%;
}

footer a {
  color: #fff;
}

footer a:active {
  color: #d1454d;
}

footer::before {
  content: "";
  background: rgba(74, 95, 122, 0.7);
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  position: absolute;
  z-index: -5;
}

footer::after {
  content: "";
  background: url("../../pictures/footer-bg.png");
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover;
  opacity: 1;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  position: absolute;
  z-index: -10;
}

.entrepreneur {
  flex: 1;
}

.contacts {
  margin-bottom: 0.9375rem;
  display: flex;
}

.contacts__address,
.contacts__phone,
.contacts__email,
.contacts__schedule {
  display: flex;
  margin-bottom: 1.5625rem;
}

.contacts__content {
  flex: 4;
  margin-right: 1.25rem;
}

.contacts__soc {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.phone__img,
.email__img {
  height: 1.5625rem;
  width: 1.5625rem;
  min-width: 1.5625rem;
  min-height: 1.5625rem;
  margin-right: 0.5rem;
  border-radius: 50%;
  background-color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
}

.address__img {
  height: 1.5625rem;
  width: 1.5625rem;
  min-width: 1.5625rem;
  min-height: 1.5625rem;
  margin-right: 0.5rem;
  border-radius: 50%;
  background-color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
}

.address__icon {
  display: flex;
  align-items: center;
  justify-content: center;
}

.schedule__img {
  height: 1.5625rem;
  width: 1.5625rem;
  min-width: 1.5625rem;
  min-height: 1.5625rem;
  margin-right: 0.5rem;
  border-radius: 50%;
  background-color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
}

.schedule__content {
  width: 100%;
}

.schedule__list {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.schedule__item {
  display: flex;
}

.schedule__day {
  width: 25%;
}

.entrepreneur {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.entrepreneur__img {
  display: flex;
  justify-content: center;
  margin-bottom: 0.6875rem;
}

.entrepreneur__desc {
  font-size: 1rem;
  max-width: 18.75rem;
}

.entrepreneur__desc span {
  font-weight: bold;
}

.entrepreneur__id,
.entrepreneur__desc,
.entrepreneur__address,
.entrepreneur__phone {
  margin-bottom: 1.25rem;
}

.id__list,
.details__list {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.soc__list {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.875rem;
}

.entrepreneur__img {
  height: 2.25rem;
  width: 2.25rem;
  min-width: 2.25rem;
  min-height: 2.25rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #fff;
  border-radius: 50%;
  position: relative;
}

.phone__content p,
.phone__content li,
.schedule__list p,
.schedule__list li,
.id__list p,
.id__list li,
.address__list p,
.address__list li,
.details__list p,
.details__list li,
.entrepreneur__details p,
.entrepreneur__details li {
  color: #fff;
  font-size: 0.875rem;
}

.address__content,
.email__link,
.phone__link {
  font-size: 0.875rem;
}

.soc__icon {
  width: 1.0625rem;
  height: 1.0625rem;
  fill: transparent;
  stroke: white;
  fill-rule: evenodd;
}

.soc__icon--vk {
  fill: white;
  stroke: transparent;
  stroke-width: 1px;
}

.contacts__icon {
  width: 1.0625rem;
  height: 1.0625rem;
  fill: transparent;
  stroke: red;
  fill-rule: evenodd;
}

.soc__link {
  display: flex;
  justify-content: center;
  align-items: flex-start;
}

.trade-img {
  width: 1.25rem;
  height: 1.25rem;
}

@media screen and (max-width: 480px) {
  .container__splash {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    background-color: #f6f9fb;
    position: relative;
  }

  .container__splash::after {
    content: "";
    background-image: url("./pictures/ball2.png");
    background-repeat: no-repeat;
    display: block;
    width: 5rem;
    height: 5rem;
    position: absolute;
    bottom: 15%;
    left: 0%;
  }

  .splash__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.9375rem;
  }

  .splash__desc {
    display: flex;
    flex-direction: column;
    width: 70%;
    position: relative;
  }

  .splash__desc::after {
    content: "";
    background-image: url("./pictures/ball1.png");
    display: block;
    width: 6.25rem;
    height: 6.25rem;
    position: absolute;
    top: -10%;
    right: -10%;
  }

  .splash__content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  .splash__huge {
    color: #ffffff;
    font-size: 4.9375rem;
    font-weight: 400;
    text-transform: uppercase;
  }

  .splash__big {
    text-shadow: 0 0 2rem rgba(119, 123, 142, 0.16);
    color: #ffffff;
    font-size: 1.5625rem;
    font-weight: 400;
    align-self: flex-end;
  }

  .logo__img {
    width: 6.8125rem;
    height: 4.375rem;
  }

  .splash__logo {
    margin: 1.1875rem 0 1rem;
  }

  .logo__pic {
    width: 100%;
    height: 100%;
  }

  .splash__name {
    color: #777b8e;
    font-size: 1.25rem;
    font-weight: 700;
    text-align: center;
  }

  .splash__text {
    color: #a3a5af;
    font-size: 0.9375rem;
    font-weight: 700;
    line-height: 1.25rem;
    text-align: center;
  }
}

.popup {
  display: flex;
  background: url("./pictures/bg1.png") no-repeat center;
  -o-object-fit: cover;
  object-fit: cover;
}

.menu__list {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  height: 100%;
}

.menu__item {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 0.75rem 0;
  border-right: 0.3125rem solid transparent;
  transition: .3s;
  color: white;
  background-color: #718094;
}

.menu__item:hover {
  color: #fa454b;
  border-right: 0.3125rem solid #fa454b;
}

.menu__img {
  width: 2.875rem;
  height: 2.75rem;
  margin: 0.9375rem 5rem;
}

.menu__pic {
  width: 100%;
  height: 100%;
}

.menu__title {
  margin: 0.9375rem 0;
}

.menu__link {
  font-size: 0.8125rem;
  font-weight: 300;
  cursor: pointer;
}

.menu__link:hover {
  color: inherit;
}

.advantages {
  justify-content: center;
}

.advantages__list {
  display: flex;
  flex-direction: column;
  height: 100vh;
  justify-content: space-around;
  align-items: center;
  padding: 1.5625rem 0;
}

.advantage__item {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.advantage__img {
  width: 1.375rem;
  height: 1.375rem;
  position: relative;
  margin: 1.25rem 0;
}

.advantage__img:before {
  content: "";
  display: block;
  width: 1.875rem;
  height: 1.875rem;
  border: 1px solid #f6f6f6;
  transform: skew(45deg, -45deg);
  position: absolute;
  left: -20%;
  top: -20%;
}

.advantage__pic {
  width: 100%;
  height: 100%;
  display: block;
}

.advantage__title {
  color: #c52228;
  font-size: 0.75rem;
  font-weight: bold;
  margin: 0.625rem 0 1.25rem;
  position: relative;
}

.advantage__title::after {
  content: "";
  display: block;
  width: 2.5rem;
  height: 1px;
  background-color: #f6f6f6;
  position: absolute;
  left: 38%;
  bottom: -70%;
}

.advantage__text {
  font-size: 0.75rem;
  font-weight: bold;
  color: #999999;
  text-align: center;
  max-width: 13.125rem;
}

.main-menu {
  background: #57687f;
}

.main-menuLeft {
  width: 60%;
  height: 100vh;
  background-color: #eceef3;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 1.25rem 0;
  position: relative;
}

.main-menuLeft::after {
  content: "";
  display: block;
  width: 2.5rem;
  height: 2.5rem;
  background: url(./pictures/cross.png) no-repeat;
  position: absolute;
  right: -2.4375rem;
  top: 5%;
}

.main-menu__list {
  display: flex;
  flex-direction: column;
}

.main-menu__item {
  display: flex;
  margin: 2.5rem 0rem;
  border-right: 0.25rem solid transparent;
}

.main-menu__item:hover {
  background-color: #dadee6;
  border-right: 0.25rem solid red;
}

.main-menu__img {
  margin: 0 1.25rem;
}

.main-menu__text {
  color: #777b8e;
  font-size: 0.875rem;
  font-weight: 400;
  display: flex;
  align-items: center;
}

.main-menu__pic {
  width: 1.875rem;
  height: 1.875rem;
  fill: transparent;
  stroke: red;
  fill-rule: nonzero;
  transition: 0.3s;
}

.main-menu__pic:hover {
  stroke: red;
}

/*.socials {
    width: 100%;
    margin-bottom: 0.9375rem;
    display: flex;
    flex-direction: column;
    align-items: center;
}

*/
.socials__title {
  font-family: 'gothampro', sans-serif;
  font-size: 0.875rem;
  font-weight: bold;
  line-height: 3.375rem;
  margin-bottom: -0.625rem;
}

.socials__list {
  display: flex;
  justify-content: space-around;
}

.socials__item {
  margin-right: 1.25rem;
  width: 1.4375rem;
  height: 1.4375rem;
}

.socials__item:last-child {
  margin-right: 0;
}

.socials__pic {
  width: 1.5625rem;
  height: 1.5625rem;
  fill: transparent;
  stroke: #3e4858;
  fill-rule: nonzero;
  transition: 1s;
}

.socials__pic:hover {
  stroke: red;
}

.hamburger-menu-link {
  vertical-align: middle;
  position: relative;
  height: 1.375rem;
  align-items: center;
  display: none;
}

@media screen and (max-width: 768px) {
  .hamburger-menu-link {
    display: inline-flex;
  }
}

.hamburger-menu-link__bars,
.hamburger-menu-link__bars:before,
.hamburger-menu-link__bars:after {
  background: red;
  width: 1.875rem;
  height: 0.3125rem;
  border-radius: 0.1875rem;
}

.hamburger-menu-link__bars:before,
.hamburger-menu-link__bars:after {
  content: "";
  display: block;
  position: absolute;
}

.hamburger-menu-link__bars:before {
  top: 0;
}

.hamburger-menu-link__bars:after {
  bottom: 0;
}

.about {
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #f6f6f6;
  font-size: 0.875rem;
  color: #6a6a6a;
}

.about__container {
  align-items: center;
  padding: 1.125rem 0rem;
}

.about__moments {
  position: relative;
}

.about__navigation {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-bottom: 0.875rem;
  max-width: 13.5rem;
}

.about__title {
  margin-bottom: 0.625rem;
}

.breadcrumbs {
  width: 100%;
}

.breadcrumbs__list {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.breadcrumbs__item {
  display: flex;
  justify-content: space-between;
}

.breadcrumbs__divider {
  margin-left: 0.3125rem;
  margin-right: 0.3125rem;
}

.breadcrumbs__link {
  text-transform: uppercase;
  color: #999999;
}

.breadcrumbs__link--active,
.breadcrumbs__link:active {
  color: #e74c3c;
}

.moments__item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 1rem;
}

.moments__desc {
  flex: 4;
}

.moments__desc span {
  color: #e74c3c;
}

.moments__date {
  flex: 1;
  color: #e74c3c;
  font-weight: bold;
  margin-right: 1.25rem;
  padding: 0.625rem;
  text-align: center;
  border: 1px dashed #e74c3c;
  position: relative;
  min-width: 5.9375rem;
  background-color: #f6f6f6;
}

.about__moments:before {
  content: "";
  display: block;
  z-index: 0;
  width: 1px;
  height: 85%;
  position: absolute;
  top: 7%;
  left: 11%;
  border-left: 1px dashed #e74c3c;
}

.process {
  font-size: 0.875rem;
  background-color: #525a6a;
  background: url("./pictures/process-bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  color: #fff;
}

.process__title {
  margin-bottom: 1.25rem;
}

.process__container {
  padding: 1.125rem 0rem;
}

.plan__list {
  display: flex;
  flex-direction: column;
}

.plan__row {
  color: #fff;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  margin-bottom: 1.875rem;
}

.plan__row:last-child {
  margin-bottom: 0;
}

.plan__item {
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-right: 1.25rem;
  max-width: 7.5rem;
}

.plan__img {
  width: 4.6875rem;
  height: 4.6875rem;
  margin-bottom: 0.3125rem;
}

.plan__img-pic {
  width: 4.6875rem;
  height: 4.6875rem;
  fill: transparent;
  stroke: red;
  fill-rule: nonzero;
  transition: 0.3s;
  margin-right: 10%;
}

.geo {
  background-color: #c62228;
  color: #fff;
}

.geo__container {
  justify-content: space-between;
  align-items: center;
}

.geo__map {
  background-color: #525a6a;
  flex: 1;
  width: 100%;
  min-height: 10.625rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.geo__facts {
  padding-top: 0.625rem;
  min-height: 9.375rem;
  flex: 1;
  width: 100%;
  background-color: #c62228;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
}

.geo__facts--bottom {
  padding-top: 0rem;
  padding-bottom: 1.625rem;
  align-items: flex-end;
}

.geo__item {
  flex: 1;
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
  text-align: center;
}

.geo__item--bottom {
  justify-content: flex-start;
  margin-bottom: 0.625rem;
}

.geo__item--bottom .geo__bottom-img {
  background-color: #525a6a;
  width: 4.375rem;
  height: 4.375rem;
  transform: rotate(45deg);
  position: absolute;
  bottom: 80%;
}

.geo__item--bottom .geo__desc {
  margin-top: -0.9375rem;
}

.geo__number {
  font-size: 2.5rem;
  margin-bottom: 0.3125rem;
  position: relative;
}

.geo__number:after {
  content: "";
  display: block;
  width: 20%;
  position: absolute;
  border: 1px solid rgba(255, 255, 255, 0.5);
  left: 40%;
}

.geo__desc {
  font-size: 1.25rem;
  margin-bottom: -0.9375rem;
}

.geo__desc p {
  color: #fff;
}

.geo__img {
  background-color: #525a6a;
  width: 4.375rem;
  height: 4.375rem;
  transform: rotate(45deg);
  position: absolute;
  top: 80%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.geo__border {
  width: 85%;
  height: 85%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.geo__icon-pic {
  width: 4.6875rem;
  height: 4.6875rem;
  fill: transparent;
  stroke: white;
  fill-rule: evenodd;
  transition: 0.3s;
  transform: rotate(-45deg);
  margin-left: -3%;
}

.career {
  padding: 0.625rem 0rem;
  font-size: 0.875rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.career__info p {
  color: #6c6c6c;
}

.career__info a {
  display: inline-block;
  color: #d1454d;
}

.career__title {
  color: #777b8e;
  margin-bottom: 0.5625rem;
}

.vacancies {
  padding: 0.625rem 0rem;
  font-size: 0.875rem;
  color: #6c6c6c;
}

.vacancies__container {
  justify-content: flex-start;
  align-items: center;
}

.vacancies__slider {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  flex: 1;
}

.vacancies__title {
  color: #777b8e;
  width: 30%;
  position: relative;
}

.vacancies__title:before {
  content: "";
  display: block;
  position: absolute;
  z-index: 0;
  height: 1px;
  width: 100%;
  top: 50%;
  left: -100%;
  background-color: gray;
}

.vacancies__title:after {
  content: "";
  display: block;
  position: absolute;
  z-index: 0;
  height: 1px;
  width: 100%;
  top: 50%;
  left: 100%;
  background-color: gray;
}

.vacancies__item {
  background-color: #eceef3;
  padding: 1.25rem 1.875rem;
}

.vacancies__btns {
  display: flex;
  align-items: stretch;
  justify-content: space-between;
  color: #6c6c6c;
}

.vacancies__btns .vacancy-btn {
  color: inherit;
  flex: 1;
}

.vacancies__duties,
.vacancies__require,
.vacancies__conditions,
.vacancies__address {
  margin-bottom: 0.3125rem;
}

.slider__btns {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  min-height: 1.875rem;
}

.label {
  text-transform: uppercase;
  color: #d1454d;
  border-bottom: 1px solid rgba(153, 153, 153, 0.7);
  padding: 0.3125rem 0rem;
  margin-bottom: 0;
}

.pos-materials,
.container {
  flex-direction: column;
}

.pos__img {
  background: url("./pictures/posma.jpg");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 20rem;
  width: 100%;
  margin-bottom: 0.625rem;
}

.pos__list {
  display: flex;
}

.pos__item {
  width: 45%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.pos__item--pic {
  width: 4.6875rem;
  height: 4.6875rem;
  fill: transparent;
  stroke: #e55358;
  stroke-width: 0.125rem;
  transition: 1s;
}

.pos__item--text {
  color: #6a6a6a;
  font-size: 0.75rem;
  font-weight: 400;
  line-height: 0.9375rem;
  text-align: center;
}

.title__pos {
  color: #777b8e;
  font-size: 1.25rem;
  font-weight: 700;
  text-transform: uppercase;
  margin: 1.25rem 0;
  position: relative;
}

.title__pos::after {
  content: "";
  display: flex;
  width: 0.3125rem;
  height: 1.25rem;
  background-color: #f6444a;
  position: absolute;
  bottom: 0.3125rem;
  right: -0.9375rem;
}

.subtitle__pos {
  color: #c94d3f;
  font-size: 1.125rem;
  font-weight: 400;
  line-height: 1.8125rem;
  text-transform: uppercase;
  text-align: center;
}

.pos__text {
  color: #6a6a6a;
  font-size: 0.75rem;
  font-weight: 400;
  line-height: 1rem;
}

.huge-pos,
.plexiglass-prod,
.sale-point {
  flex-direction: column;
  background-color: #f4f5f9;
}

.huge-pos__img,
.plexiglass-prod__img,
.sale-point__img {
  width: 100%;
  height: 10rem;
  background-color: #989898;
  position: relative;
  display: flex;
  justify-content: center;
}

.huge-pos__img:hover,
.plexiglass-prod__img:hover,
.sale-point__img:hover {
  background-color: #e55358;
}

.huge-pos__img::after,
.plexiglass-prod__img::after,
.sale-point__img::after {
  content: "";
  width: 6.875rem;
  height: 6.875rem;
  background-image: url("./pictures/posma_bg2.png");
  background-repeat: no-repeat;
  background-position: center center;
  border-radius: 50%;
  border: 0.625rem solid #f4f5f9;
  background-color: white;
  position: absolute;
  bottom: -3.75rem;
  left: 35%;
}

.huge-pos__container,
.plexiglass-prod__container,
.sale-point__container {
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
  margin: 5rem 0;
}

.huge-pos__title,
.plexiglass-prod__title,
.sale-point__title {
  color: #ffffff;
  font-size: 1.25rem;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.125rem;
  margin-top: 1.5625rem;
  max-width: 55%;
}

.huge-pos__list,
.plexiglass-prod__list,
.sale-point__list {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 2.5rem;
}

.huge-pos__item,
.plexiglass-prod__item,
.sale-point__item {
  color: #989898;
  font-size: 0.9375rem;
  font-weight: 400;
  line-height: 2;
}

.huge-pos__btn,
.plexiglass-prod__btn,
.sale-point__btn {
  color: #ffffff;
  font-size: 0.8125rem;
  font-weight: 400;
  text-transform: uppercase;
  letter-spacing: 0rem;
  background-color: #989898;
  padding: 0.9375rem 2.1875rem;
}

.huge-pos__btn:hover,
.plexiglass-prod__btn:hover,
.sale-point__btn:hover {
  background-color: #e55358;
}

.huge-pos__img::after {
  background-image: url("./pictures/posma_bg2.png");
}

.sale-point__img::after {
  background-image: url("./pictures/posma_bg3.png");
}

.plexiglass-prod__img::after {
  background-image: url("./pictures/posma_bg4.png");
}

.sales-decoration,
.polystands,
.container {
  flex-direction: column;
}

.sales-decoration__img {
  background: url("./pictures/salesdecor.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 10.4375rem;
  width: 100%;
  margin-bottom: 0.625rem;
}

.sales-decoration__title {
  color: #777b8e;
  font-size: 1rem;
  font-weight: 700;
  margin: 0.9375rem 0;
}

.sales-decoration__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  line-height: 0.9375rem;
  text-align: justify;
  margin-bottom: 1.25rem;
}

.ts-metall,
.ts-mdf,
.ts-display,
.ts-other {
  flex-direction: column;
}

.ts-metall__desc,
.ts-mdf__desc,
.ts-display__desc,
.ts-other__desc {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 1.875rem;
}

.ts-metall__title,
.ts-mdf__title,
.ts-display__title,
.ts-other__title {
  color: #4e4e4e;
  font-size: 1.1875rem;
  font-weight: 400;
  text-align: center;
  margin-top: 1.25rem;
}

.ts-metall__image,
.ts-mdf__image,
.ts-display__image,
.ts-other__image {
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  min-height: 7.5rem;
  width: 7.5rem;
  border-radius: 50%;
  background-color: #d4d7da;
}

.ts-metall__list,
.ts-mdf__list,
.ts-display__list,
.ts-other__list {
  display: flex;
}

.ts-metall__item,
.ts-mdf__item,
.ts-display__item,
.ts-other__item {
  width: 100%;
  height: 21.875rem;
  background-color: #f6f6f6;
  padding: 1.875rem 1.5625rem;
}

.ts-metall__item:last-child,
.ts-metall__item:nth-child(2n),
.ts-mdf__item:last-child,
.ts-mdf__item:nth-child(2n),
.ts-display__item:last-child,
.ts-display__item:nth-child(2n),
.ts-other__item:last-child,
.ts-other__item:nth-child(2n) {
  display: none;
}

.ts-metall__pic,
.ts-mdf__pic,
.ts-display__pic,
.ts-other__pic {
  width: 100%;
  height: 100%;
  display: block;
  -o-object-fit: contain;
  object-fit: contain;
}

.ts-metall__container,
.ts-mdf__container,
.ts-display__container,
.ts-other__container {
  flex-direction: column;
}

.ts-metall__subtitle,
.ts-mdf__subtitle,
.ts-display__subtitle,
.ts-other__subtitle {
  color: #777b8e;
  font-size: 1.125rem;
  font-weight: 700;
  padding: 1.25rem 1.25rem;
  position: relative;
}

.ts-metall__subtitle::after,
.ts-mdf__subtitle::after,
.ts-display__subtitle::after,
.ts-other__subtitle::after {
  content: "";
  display: flex;
  width: 0.3125rem;
  height: 2.1875rem;
  background-color: #f6444a;
  position: absolute;
  bottom: 0.9375rem;
  left: 0;
}

.ts-metall__text,
.ts-mdf__text,
.ts-display__text,
.ts-other__text {
  text-align: justify;
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
}

.ts-metall__desc {
  margin-top: 0;
}

.ts-metall__image {
  background-image: url("./pictures/ts1.png");
}

.ts-mdf__image {
  background-image: url("./pictures/ts2.png");
}

.ts-display__image {
  background-image: url("./pictures/ts3.png");
}

.ts-other__image {
  background-image: url("./pictures/ts4.png");
}

.polystands__title {
  color: #777b8e;
  font-size: 1rem;
  font-weight: 700;
  padding: 1.25rem 0 0.625rem;
}

.polystands__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  margin-bottom: 0.9375rem;
  text-align: justify;
}

.polystands__list {
  display: flex;
}

.polystands__item {
  width: 100%;
  height: 20.625rem;
  background-color: #f6f6f6;
  padding: 1.875rem 1.5625rem;
}

.polystands__item:nth-child(1n) {
  display: none;
}

.polystands__item:first-child {
  display: flex;
}

.dispenser {
  overflow: hidden;
}

.dispenser__container {
  justify-content: space-between;
}

.dispenser__title {
  color: #777b8e;
  font-size: 1rem;
  font-weight: 700;
  padding: 1.25rem 0 0;
}

.dispenser__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  text-align: justify;
}

.dispenser__subtitle {
  color: #777b8e;
  font-size: 1rem;
  font-weight: 700;
  text-align: center;
}

.dispenser__image {
  background-image: url("./pictures/dispenser.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 13.5625rem;
  width: 14.1875rem;
  margin: 1.5625rem;
  align-self: center;
  position: relative;
}

.dispenser__image::after {
  content: "";
  display: flex;
  position: absolute;
  width: 17.5rem;
  height: 17.5rem;
  border: 0.125rem solid #fd3b3e;
  border-radius: 50%;
  top: -20%;
  left: -10%;
}

.dispenser__desc {
  width: 85%;
}

.dispenser__list {
  display: flex;
  flex-direction: column;
}

.dispenser__item {
  display: flex;
  align-items: center;
}

.dispenser__img {
  margin: 0.9375rem;
}

.dispenser__pic {
  width: 1.875rem;
  height: 1.875rem;
  fill: transparent;
  stroke: #e55358;
  stroke-width: 0.1875rem;
  transition: 1s;
}

.dividers {
  flex-direction: column;
  background-color: #f6f6f6;
  justify-content: space-between;
}

.dividers__title {
  color: #777b8e;
  font-size: 1rem;
  font-weight: 700;
  margin: 0.625rem 0;
}

.dividers__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  margin-bottom: 0.625rem;
  text-align: justify;
}

.dividers__img {
  background-image: url("./pictures/dividers1.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 10rem;
  width: 100%;
  margin: 1.5625rem;
  align-self: center;
  position: relative;
}

.dividers__img::after {
  content: "";
  display: flex;
  position: absolute;
  background-image: url("./pictures/dividers2.png");
  background-size: contain;
  width: 13.75rem;
  height: 13.75rem;
  top: -10%;
  left: -3%;
}

.priceholders {
  justify-content: center;
  background-color: #eceef3;
}

.priceholders__container {
  width: 100%;
  background-color: white;
}

.priceholders__image {
  background-image: url("./pictures/price_hold1.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  height: 12.5rem;
  width: 100%;
}

.priceholders__item {
  display: flex;
  flex-direction: column;
}

.priceholders__img {
  width: 9.375rem;
  height: 9.375rem;
  border: 0.125rem solid #c3242a;
  border-radius: 50%;
  overflow: hidden;
}

.priceholders__pic {
  width: 100%;
  height: 100%;
}

.priceholders__title {
  color: #777b8e;
  font-size: 1rem;
  font-weight: 700;
  margin: 0.625rem 0;
}

.priceholders__subtitle {
  color: #4e4e4e;
  font-size: 1rem;
  font-weight: 400;
  text-align: center;
  margin-top: 0.625rem;
}

.wobble {
  flex-direction: column;
  background-color: #eceef3;
}

.wobble__title {
  background-color: white;
  color: #777b8e;
  font-size: 1rem;
  font-weight: 700;
  padding: 0.625rem 0 0;
}

.wobble__title-wrap {
  background-color: white;
  width: 100%;
}

.wobble__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  margin-bottom: 0.625rem;
  text-align: justify;
}

.mobile {
  flex-direction: column;
  align-items: center;
}

.mobile__title {
  background-color: white;
  color: #777b8e;
  font-size: 1rem;
  font-weight: 700;
  padding: 0.625rem 0;
  position: relative;
}

.mobile__title::after {
  content: "";
  display: flex;
  width: 0.3125rem;
  height: 1.25rem;
  background-color: #f6444a;
  position: absolute;
  top: 0.5rem;
  right: -0.625rem;
}

.mobile__subtitle {
  font-size: 0.75rem;
  font-weight: 400;
  color: #c52a30;
  text-transform: uppercase;
}

.mobile__image {
  background-image: url("./pictures/mobile.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  height: 21.25rem;
  width: 14.375rem;
}

.mobile__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  margin-bottom: 0.625rem;
  text-align: justify;
}

.drives {
  background-color: #eceef3;
}

.drives__title {
  background-color: white;
  color: #777b8e;
  font-size: 1rem;
  font-weight: 700;
  padding: 0.625rem 0;
}

.drives__pic {
  width: 100%;
  height: 100%;
}

.drives__list {
  display: flex;
  justify-content: space-evenly;
}

.drives__item {
  width: 6.25rem;
  height: 6.25rem;
  border: 1px solid #c3242a;
  border-radius: 50%;
  overflow: hidden;
}

.drives__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  margin-bottom: 0.625rem;
  text-align: justify;
}

.products {
  margin-bottom: 1.25rem;
  padding: 0.625rem 0rem;
}

.products__img {
  background: url("./pictures/craft-bg.png");
  width: 100%;
  min-height: 12.5rem;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
}

.products__title,
.products__subtitle {
  color: #777b8e;
}

.products__intro {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-bottom: 0.625rem;
}

.products__about {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-bottom: 0.625rem;
}

.products__about span {
  text-transform: uppercase;
  font-weight: bold;
}

.products__about p {
  margin-bottom: 0.625rem;
}

.products__about p:last-child {
  margin-bottom: 0rem;
}

.products__coasters {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.coasters__info {
  margin-bottom: 1.875rem;
}

.coasters__info span {
  text-transform: uppercase;
  font-weight: bold;
}

.coasters__info-item {
  list-style: disc;
  margin-left: 0.625rem;
  font-size: 0.875rem;
}

.coasters__info p {
  margin-bottom: 0.625rem;
}

.coasters__info p:last-child {
  margin-bottom: 0rem;
}

.coasters__list {
  font-size: 0.75rem;
}

.coasters__block {
  background-color: #f6f6f6;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 0.625rem 1.875rem;
  margin-bottom: 1.25rem;
}

.coasters__block--light {
  background-color: #fff;
}

.coasters__img {
  width: 15.9375rem;
  height: 15.9375rem;
  background-color: #fff;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid red;
  position: relative;
  margin-bottom: 1.875rem;
}

.coasters__pic {
  width: 80%;
  height: 80%;
}

.coasters__item {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: 0.9375rem;
}

.coasters__item-img {
  width: 2.1875rem;
  height: 2.1875rem;
  min-width: 2.1875rem;
  margin-right: 0.75rem;
}

.coasters__item-img--big {
  width: 2.5rem;
  height: 2.5rem;
}

.coasters__img:before {
  content: "";
  position: absolute;
  height: 0.6875rem;
  width: 0.6875rem;
  background-color: #f6f6f6;
  border: 1px solid red;
  border-radius: 50%;
  bottom: -3%;
  z-index: 5;
}

.coasters__img:after {
  content: "";
  z-index: 0;
  position: absolute;
  display: block;
  height: 1.875rem;
  width: 1px;
  border-left: 1px dashed red;
  bottom: -12%;
}

.coasters__item-icon {
  width: 2.1875rem;
  height: 2.1875rem;
  fill: transparent;
  stroke: red;
  fill-rule: nonzero;
  transition: 0.3s;
}

.coasters__item-icon--big {
  width: 2.5rem;
  height: 2.5rem;
}

.catalog {
  background-color: #eceef3;
  margin-bottom: 1.25rem;
  padding: 0.625rem 0rem;
}

.catalog__list {
  display: flex;
  align-items: flex-end;
  justify-content: center;
}

.catalog__item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  flex: 1;
  margin-right: 1.25rem;
}

.catalog__item:last-child {
  margin-right: 0;
}

.catalog__page {
  margin-bottom: 0.9375rem;
}

.catalog__desc {
  text-align: center;
  color: #777b8e;
  text-transform: uppercase;
  font-size: 0.75rem;
}

.catalog__title {
  color: #777b8e;
}

.catalog__btns {
  display: flex;
  align-items: center;
  justify-content: center;
}

.catalog__img {
  width: 7.5rem;
  height: 7.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 0.625rem;
}

.catalog__img-bg {
  width: 100%;
  height: 100%;
}

.organizers {
  background-color: #eceef3;
  padding: 0.625rem 0rem;
}

.organizers__title {
  color: #777b8e;
}

.organizers__list {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
}

.organizers__item {
  padding: 1.875rem 0.625rem;
  background-color: #fff;
  margin-bottom: 0.9375rem;
  box-shadow: 0rem 0.5625rem 0.6875rem 0rem rgba(119, 123, 142, 0.2);
}

.organizers__img {
  width: 16.25rem;
  min-width: 16.25rem;
  height: 15.625rem;
}

.organizers__bg {
  width: 100%;
  height: 100%;
}

.organizers__group {
  text-align: center;
  color: #777b8e;
  text-transform: uppercase;
  font-size: 0.75rem;
}

.organizers__name {
  text-align: center;
  color: #777b8e;
  text-transform: uppercase;
  font-size: 0.875rem;
}

.pos {
  padding: 0.625rem 0rem;
}

.pos__title {
  color: #777b8e;
}

.pos__subtitle {
  text-transform: uppercase;
  padding: 0rem 0.3125rem;
  position: relative;
  border-left: 1px solid red;
}

.pos__intro {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
}

.pos__img {
  width: 100%;
  min-height: 13.4375rem;
  background: url("./pictures/pos-bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  margin-bottom: 0;
}

.pos__promostands {
  padding: 0.9375rem;
  padding-bottom: 0;
  background-color: #f6f6f6;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.pos__shop-in-shop {
  padding-top: 0.9375rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.pos__offices {
  width: 100%;
  margin-bottom: 1.5625rem;
}

.stand-actions__item {
  font-size: 0.875rem;
}

.promostands__desc {
  margin-bottom: 0.9375rem;
}

.promostands__desc span {
  color: #c32126;
}

.promostands__desc p,
.promostands__desc .promostands__list {
  margin-bottom: 0.625rem;
}

.promostands__img,
.promostands__bg {
  width: 100%;
  max-height: 30rem;
  max-width: 30rem;
}

.promostands__item {
  font-size: 0.875rem;
}

.shop-in-shop__desc {
  margin-bottom: 0.9375rem;
}

.shop-in-shop__desc span {
  color: #c32126;
  text-transform: uppercase;
}

.shop-in-shop__desc p {
  margin-bottom: 0.625rem;
}

.shop-in-shop__img {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-bottom: 1.875rem;
}

.shop-in-shop__main {
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
  background-color: #f6f6f6;
  padding: 0.9375rem;
}

.shop-in-shop__extra {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-top: -0.625rem;
}

.shop-in-shop__extra-img {
  max-width: 6.25rem;
  margin-right: 0.3125rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.shop-in-shop__extra-img:last-child {
  margin-right: 0;
}

.shop-in-shop__bg {
  width: 100%;
  height: 100%;
}

.offices__intro {
  background-image: url("./pictures/office-bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  min-height: 15.3125rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  padding: 0.625rem;
  margin-bottom: 1.25rem;
}

.offices__type {
  font-size: 1.125rem;
  font-weight: bold;
  color: #ffffff;
  text-transform: uppercase;
  text-shadow: 0.125rem 0.125rem 0.125rem rgba(0, 1, 3, 0.75);
}

.offices__type--narrow {
  max-width: 4.6875rem;
}

.offices__slider {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.offices__page {
  margin-bottom: 0.9375rem;
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
}

.offices__list,
.offices__item {
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
}

.offices__item {
  position: relative;
}

.offices__item:before {
  content: "";
  position: absolute;
  z-index: 0;
  width: 100%;
  height: 70%;
  top: 15%;
  background-color: #f6f6f6;
}

.offices__bg {
  z-index: 5;
}

.exhibition {
  padding: 0.625rem 0rem;
}

.exhibition__title {
  color: #777b8e;
}

.exhibition__desc {
  background-color: #f6f6f6;
  padding: 0.9375rem;
}

.exhibition__desc span {
  color: #c32126;
  text-transform: uppercase;
}

.exhibition__desc p {
  margin-bottom: 0.625rem;
}

.exhibition__img {
  width: 100%;
  background-color: #edeef3;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.625rem 0rem;
}

.reception {
  padding: 0.625rem 0rem;
}

.reception__title {
  color: #777b8e;
}

.reception__intro {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-bottom: 0.625rem;
  width: 100%;
}

.reception__img {
  width: 100%;
  min-height: 10.9375rem;
  background: linear-gradient(90deg, rgba(81, 97, 120, 0.5) 0%, rgba(81, 97, 120, 0.5) 100%), url("./pictures/reception-bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
}

.reception__desc {
  padding: 0.9375rem;
}

.reception__desc span {
  color: #c32126;
  text-transform: uppercase;
}

.reception__desc p,
.reception__desc .reception__list {
  margin-bottom: 0.625rem;
}

.reception__item {
  font-size: 0.875rem;
}

.advert {
  padding: 0.625rem 0rem;
}

.advert__intro {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
}

.advert__img {
  width: 100%;
  min-height: 16.875rem;
  background: url("./pictures/ads-bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
}

.advert__list {
  font-size: 1rem;
  text-align: center;
  color: #6a6a6a;
  line-height: 1.6;
}

.advert__title {
  color: #777b8e;
  margin-bottom: 0.3125rem;
}

.advert__desc {
  padding: 0.9375rem;
}

.advert__desc p {
  margin-bottom: 0.625rem;
}

.advert__img {
  position: relative;
  margin-bottom: 3.75rem;
}

.advert__img:before {
  content: "";
  position: absolute;
  height: 0.6875rem;
  width: 0.6875rem;
  background-color: #f6f6f6;
  border: 1px solid red;
  border-radius: 50%;
  left: 50%;
  bottom: -3%;
  z-index: 5;
}

.advert__img:after {
  content: "";
  z-index: 0;
  position: absolute;
  display: block;
  height: 3.4375rem;
  width: 1px;
  border-left: 1px dashed red;
  left: 51%;
  top: 100%;
}

.advert__nav {
  position: relative;
  padding: 0.625rem 0rem 1.125rem 0rem;
}

.advert__nav:before {
  content: "";
  position: absolute;
  height: 1px;
  width: 0.9375rem;
  background-color: #f6f6f6;
  border-top: 1px solid red;
  left: 49%;
  top: -1%;
  z-index: 5;
}

.roof {
  margin-bottom: 0.625rem;
}

.roof__intro {
  background-image: url("./pictures/roof-bg.png");
  min-height: 16.875rem;
  width: 100%;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  padding: 1rem;
}

.roof__title {
  text-align: center;
  color: #ffffff;
  font-size: 1.5rem;
  font-weight: bold;
  text-transform: uppercase;
  margin-bottom: 0;
  max-width: 9.6875rem;
}

.roof__desc {
  padding: 0.9375rem;
  background-color: #eceef3;
}

.roof__desc span {
  color: #c32126;
  text-transform: uppercase;
}

.roof__desc p {
  margin-bottom: 0.625rem;
}

.roof__slider {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
}

.roof__page {
  margin-bottom: 0.4375rem;
}

.roof__page,
.roof__list,
.roof__item {
  width: 100%;
  display: flex;
  justify-content: center;
}

.roof__bg {
  width: 100%;
  max-width: 30rem;
}

.signboards {
  margin-bottom: 0.625rem;
}

.signboards__title {
  color: #777b8e;
}

.signboards__img {
  width: 100%;
  min-height: 16.875rem;
  background: url("./pictures/panel-bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
}

.signboards__intro {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
}

.signboards__desc {
  background-color: #edeef3;
  padding: 0.8125rem;
}

.signboards__desc p {
  margin-bottom: 0.625rem;
}

.signboards__desc span {
  color: #c32126;
  text-transform: uppercase;
}

.signboards__examples,
.signboards__list {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  position: relative;
}

.signboards__list {
  padding: 0.625rem 0rem;
}

.signboards__examples:before {
  content: "";
  position: absolute;
  z-index: 0;
  width: 60%;
  height: 100%;
  left: 20%;
  background-color: #f6f6f6;
}

.signboards__item {
  margin-bottom: 0.9375rem;
}

.light__panels {
  margin-bottom: 0.9375rem;
}

.panels__title {
  color: #777b8e;
}

.panels__intro {
  padding: 0.9375rem;
}

.panels__intro span {
  color: #c32126;
  text-transform: uppercase;
}

.panels__intro p {
  margin-bottom: 0.625rem;
}

.panels__info {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: 0.3125rem;
}

.panels__info:after {
  content: "";
  position: absolute;
  z-index: 0;
  width: 100%;
  height: 80%;
  top: 10%;
  background-color: #f6f6f6;
}

.panels__img {
  z-index: 5;
}

.panels__examples {
  display: flex;
  justify-content: center;
  align-items: flex-start;
}

.panels__examples-bg {
  width: 100%;
  max-width: 30rem;
}

.letters__intro {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: 0.625rem;
}

.letters__subtitle {
  color: #777b8e;
  text-transform: uppercase;
  padding: 0rem 0.3125rem;
  border-left: 1px solid red;
}

.letters__img {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: 0.3125rem;
  width: 100%;
}

.letters__img:after {
  content: "";
  position: absolute;
  z-index: 0;
  width: 100%;
  height: 80%;
  top: 10%;
  background-color: #eceef3;
}

.letters__bg {
  z-index: 5;
}

.letters__desc {
  padding: 0.9375rem;
}

.letters__desc span {
  text-transform: uppercase;
  color: #c32126;
}

.neon {
  margin-bottom: 0.9375rem;
}

.neon__title {
  color: #777b8e;
}

.neon__container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.neon__intro {
  background-color: #eceef3;
  padding: 0.9375rem;
}

.neon__intro span {
  color: #c32126;
  text-transform: uppercase;
}

.neon__img {
  min-height: 16.5625rem;
  width: 100%;
  background: linear-gradient(90deg, rgba(81, 97, 120, 0.5) 0%, rgba(81, 97, 120, 0.5) 100%), url("./pictures/neon-bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
}

.stele {
  padding: 1.25rem 0rem;
}

.stele__title {
  color: #777b8e;
}

.stele__intro {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: 3.125rem;
}

.stele__desc span {
  color: #c32126;
  text-transform: uppercase;
}

.auto {
  padding: 0.9375rem 0rem;
  background-color: #eceef3;
}

.auto__title {
  color: #777b8e;
}

.auto__intro {
  margin-bottom: 1.5625rem;
}

.auto__intro p {
  margin-bottom: 0.625rem;
}

.auto__intro span {
  color: #c32126;
  text-transform: uppercase;
}

.container__auto {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
}

.design {
  padding: 0.625rem 0rem;
}

.design__title {
  color: #777b8e;
}

.design__subtitle {
  color: #c41f25;
  text-transform: uppercase;
  font-weight: normal;
}

.design__img {
  background: url("./pictures/design-bg.png");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 15rem;
  width: 100%;
  margin-bottom: 0.625rem;
}

.design__intro {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: 0.9375rem;
}

.design__types {
  padding: 0rem 0.9375rem;
}

.design__item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: 1.25rem;
  position: relative;
}

.design__info {
  display: flex;
  justify-content: center;
  align-self: center;
  width: 100%;
}

.design__desc {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.design__icon {
  max-width: 8.125rem;
  margin-right: 0.625rem;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  position: relative;
  background: #fff;
  z-index: 10;
  width: 7.5rem;
  height: 7.5rem;
}

.design__icon-svg {
  width: 7.5rem;
  height: 7.5rem;
  fill: transparent;
  stroke: #c41f25;
  fill-rule: nonzero;
  margin-left: -3%;
  z-index: 10;
}

.design__icon--right {
  margin-right: 0;
  margin-left: 0.625rem;
}

.design__icon--right:before {
  content: "";
  position: absolute;
  width: 69%;
  height: 73%;
  top: 21%;
  left: 7%;
  background-color: #f6f6f6;
  z-index: 0;
}

.design__icon--right:after {
  content: "";
  color: #fff;
  font-size: 1rem;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  transform: rotate(45deg);
  width: 1.875rem;
  height: 1.875rem;
  top: 6%;
  left: 68%;
  background-color: #c41f25;
  z-index: 10;
}

.design__icon--left:before {
  content: "";
  position: absolute;
  width: 69%;
  height: 73%;
  top: 21%;
  left: 22%;
  background-color: #f6f6f6;
  z-index: 0;
}

.design__icon--left:after {
  content: "";
  color: #fff;
  font-size: 1rem;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  transform: rotate(45deg);
  width: 1.875rem;
  height: 1.875rem;
  top: 6%;
  left: 6%;
  background-color: #c41f25;
  z-index: 10;
}

.design__list {
  font-size: 0.875rem;
}

.design__about {
  padding: 0.9375rem;
}

.print {
  padding: 0.625rem 0rem;
}

.print__title {
  color: #777b8e;
  margin-bottom: 0.625rem;
}

.print__bg {
  background-image: url("./pictures/polygraphy-bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  min-height: 12.5rem;
  width: 100%;
}

.print__intro {
  width: 100%;
  margin-bottom: 0.625rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
}

.print__desc {
  padding: 0.9375rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
}

.print__desc p {
  margin-bottom: 0.625rem;
}

.print__machine {
  background-color: #eceef3;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.5rem 0rem;
  position: relative;
  margin-bottom: 3.125rem;
}

.print__machine:before {
  content: "";
  position: absolute;
  height: 0.6875rem;
  width: 0.6875rem;
  background-color: #f6f6f6;
  border: 1px solid red;
  border-radius: 50%;
  left: 50%;
  bottom: -3%;
  z-index: 5;
}

.print__machine:after {
  content: "";
  z-index: 0;
  position: absolute;
  display: block;
  height: 3rem;
  width: 1px;
  border-left: 1px dashed red;
  left: 51%;
  top: 100%;
}

.print__types {
  position: relative;
  padding: 0.9375rem;
  background-color: #f6f6f6;
}

.print__types:before {
  content: "";
  position: absolute;
  height: 1px;
  width: 0.9375rem;
  background-color: #f6f6f6;
  border-top: 1px solid red;
  left: 49%;
  top: 0;
  z-index: 5;
}

.print__types p {
  margin-bottom: 1.25rem;
}

.print__types p:last-child {
  margin-bottom: 0;
}

.print__types span {
  text-transform: uppercase;
  color: #c3242a;
}

.silk {
  padding: 0.625rem 0rem;
}

.silk__title {
  color: #777b8e;
}

.silk__intro {
  min-height: 20.5rem;
  width: 100%;
}

.silk__images {
  background: linear-gradient(90deg, rgba(81, 97, 120, 0.5) 0%, rgba(81, 97, 120, 0.5) 100%), url("./pictures/silk.png");
  height: 60%;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  min-height: 13.4375rem;
  width: 100%;
  position: relative;
  display: flex;
  align-items: flex-end;
  justify-content: center;
}

.silk__examples {
  display: flex;
  position: absolute;
  bottom: -30%;
}

.silk__examples-bg {
  margin-right: 1.25rem;
}

.silk__examples-bg:last-child {
  margin-right: 0;
}

.silk__desc {
  background-color: #eceef3;
  padding: 0.9375rem;
}

.silk__desc span {
  text-transform: uppercase;
  color: #c3242a;
}

.silk__desc p {
  margin-bottom: 0.625rem;
}

.silk__desc p:last-child {
  margin-bottom: 0rem;
}

.embossing {
  padding: 0.625rem 0rem;
}

.embossing__title {
  color: #777b8e;
}

.embossing__intro {
  min-height: 20.5rem;
  width: 100%;
}

.embossing__images {
  background: linear-gradient(90deg, rgba(81, 97, 120, 0.5) 0%, rgba(81, 97, 120, 0.5) 100%), url("./pictures/embossing-bg.png");
  height: 60%;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  min-height: 13.4375rem;
  width: 100%;
  position: relative;
  display: flex;
  align-items: flex-end;
  justify-content: center;
}

.embossing__examples {
  display: flex;
  position: absolute;
  bottom: -30%;
}

.embossing__examples-bg {
  margin-right: 1.25rem;
}

.embossing__examples-bg:last-child {
  margin-right: 0;
}

.embossing__desc {
  padding: 0.9375rem;
}

.embossing__desc span {
  text-transform: uppercase;
  color: #c3242a;
}

.embossing__desc .embossing__type {
  color: #4e4e4e;
  text-transform: initial;
  font-weight: bold;
}

.embossing__desc p {
  margin-bottom: 0.625rem;
}

.embossing__desc p:last-child {
  margin-bottom: 0rem;
}

.embossing__item {
  margin-bottom: 0.625rem;
}

.embossing__item:last-child {
  margin-bottom: 0rem;
}

.embroidery {
  padding: 0.625rem 0rem;
}

.embroidery__intro {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  width: 100%;
}

.embroidery__intro:before {
  content: "";
  position: absolute;
  width: 100%;
  height: 60%;
  background-color: #f6f6f6;
  left: 0%;
  top: 20%;
  z-index: 0;
}

.embroidery__img {
  z-index: 10;
}

.embroidery__desc {
  display: flex;
  align-items: flex-start;
  flex-direction: column;
  justify-content: flex-start;
  padding: 0.9375rem;
}

.embroidery__desc p {
  margin-bottom: 1.25rem;
}

.embroidery__desc p:last-child {
  margin-bottom: 0;
}

.embroidery__desc span {
  text-transform: uppercase;
  color: #c3242a;
}

.embroidery__title {
  color: #777b8e;
  padding: 0rem 0.3125rem;
  font-size: 1.1875rem;
  position: relative;
}

.embroidery__title:before {
  content: "";
  position: absolute;
  width: 1px;
  height: 100%;
  left: 0%;
  top: 0%;
  background-color: #c3242a;
}

.engraving {
  padding: 0.625rem 0rem;
}

.engraving__title {
  color: #FFF;
  text-shadow: 0rem 0.125rem 0.125rem rgba(0, 2, 4, 0.75);
}

.engraving__intro {
  background: linear-gradient(90deg, rgba(81, 97, 120, 0.5) 0%, rgba(81, 97, 120, 0.5) 100%), url("./pictures/engraving-bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  display: flex;
  align-self: flex-start;
  justify-content: center;
  min-height: 14.375rem;
  width: 100%;
  padding: 1.25rem;
}

.engraving__desc {
  background-color: #eceef3;
  padding: 0.9375rem;
}

.engraving__desc span {
  text-transform: uppercase;
  color: #c3242a;
}

.engraving__desc p {
  margin-bottom: 0.625rem;
}

.engraving__desc p:last-child {
  margin-bottom: 0rem;
}

.thermo {
  padding: 0.625rem 0rem;
}

.thermo__title {
  color: #FFF;
  text-shadow: 0rem 0.125rem 0.125rem rgba(0, 2, 4, 0.75);
}

.thermo__intro {
  background: url("./pictures/thermo-bg.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  display: flex;
  align-self: flex-start;
  justify-content: center;
  min-height: 14.375rem;
  width: 100%;
  padding: 1.25rem;
}

.thermo__desc {
  background-color: #eceef3;
  padding: 0.9375rem;
}

.thermo__desc span {
  text-transform: uppercase;
  color: #c3242a;
}

.thermo__desc p {
  margin-bottom: 0.625rem;
}

.thermo__desc p:last-child {
  margin-bottom: 0rem;
}

.souvenir {
  flex-direction: column;
}

.souvenir__picture {
  display: flex;
  width: 100%;
  min-height: 13.75rem;
  margin-top: 1.875rem;
  margin-bottom: 3.125rem;
  position: relative;
}

.souvenir__image1 {
  background-image: url("./pictures/souv__bg3.png");
  background-position: center right;
  background-repeat: no-repeat;
  background-size: cover;
  width: 50%;
  opacity: 0.5;
}

.souvenir__image2 {
  width: 50%;
  background-color: #e9ebed;
  position: relative;
}

.souvenir__image2::after {
  content: "";
  background-image: url("./pictures/souv__bg1.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  display: flex;
  position: absolute;
  width: 9.375rem;
  height: 12.5rem;
  top: 0;
  left: 30%;
  z-index: 5;
}

.souvenir__image2::before {
  content: "";
  background-image: url("./pictures/souv__bg2.png");
  background-repeat: no-repeat;
  display: flex;
  position: absolute;
  background-size: contain;
  width: 8.125rem;
  height: 10.625rem;
  top: 20%;
  left: -20%;
  z-index: 10;
}

.souvenir__list {
  display: flex;
  justify-content: space-between;
  position: absolute;
  z-index: 10;
  top: 90%;
  left: 10%;
}

.souvenir__item {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 0.9375rem;
  position: relative;
}

.souvenir__item::before {
  content: "";
  display: block;
  width: 3.125rem;
  height: 3.125rem;
  border-radius: 50%;
  background-color: #f6444a;
  position: absolute;
  top: -0.125rem;
  left: -0.25rem;
  z-index: -1;
}

.souvenir__icon {
  width: 2.5rem;
  height: 2.5rem;
  fill: transparent;
  stroke: white;
  stroke-width: 0.1875rem;
}

.souvenir__desc {
  color: #6a6a6a;
  font-size: 0.9375rem;
  font-weight: 400;
  line-height: 1.5625rem;
}

.souvenir__title {
  color: #777b8e;
  font-size: 1rem;
  font-weight: 700;
  padding: 1.25rem 0 0;
  position: relative;
}

.souvenir__title::after {
  content: "";
  display: flex;
  width: 0.125rem;
  height: 1.25rem;
  background-color: #ef7175;
  position: absolute;
  top: 50%;
  left: 25%;
}

.souvenir__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  text-align: justify;
  margin-bottom: 0.625rem;
}

.symbols {
  background-color: white;
}

.symbols__image {
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  width: 100%;
  min-height: 15.625rem;
  background: linear-gradient(90deg, rgba(116, 128, 145, 0.5) 0%, rgba(116, 128, 145, 0.5) 100%), url("./pictures/symbol_bg.png");
  display: flex;
  align-items: center;
  justify-content: center;
}

.symbols__title {
  text-shadow: 1px 1px 1px rgba(0, 1, 3, 0.75);
  color: #ffffff;
  font-size: 1.4375rem;
  font-weight: 700;
}

.symbols__container {
  margin: 0.9375rem 0;
}

.symbols__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  text-align: justify;
  margin-bottom: 0.625rem;
}

.symbols__list {
  display: flex;
  width: 100%;
  height: 14.375rem;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0.5) 100%);
}

.symbols__item {
  width: 100%;
  height: 14.375rem;
  padding: 0.625rem 0;
}

.symbols__item:nth-child(1n) {
  display: none;
}

.symbols__item:first-child {
  display: flex;
}

.symbols__pic {
  width: 100%;
  height: 100%;
  display: block;
  -o-object-fit: contain;
  object-fit: contain;
  -o-object-position: center center;
  object-position: center center;
}

.watch__title {
  color: #777b8e;
  font-size: 1rem;
  font-weight: 700;
  padding: 1.25rem 0 0.625rem;
}

.watch__subtitle {
  font-size: 0.75rem;
  font-weight: 400;
  color: #c52228;
  text-transform: uppercase;
}

.watch__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  margin-bottom: 0.9375rem;
  text-align: justify;
}

.watch__img {
  background-image: url("./pictures/watch_bg.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  width: 100%;
  height: 10rem;
  background-color: #f6f6f6;
}

.promo-form__image {
  background-image: url("./pictures/promo_bg.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  width: 100%;
  height: 13.125rem;
  margin: 0.9375rem 0;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  justify-content: center;
}

.promo-form__title {
  color: #ffffff;
  font-size: 1rem;
  font-weight: 700;
  margin-right: 1.25rem;
}

.promo-form__subtitle {
  font-size: 0.75rem;
  font-weight: 400;
  color: #c52228;
  text-transform: uppercase;
}

.promo-form__subtitle2 {
  color: #6a6a6a;
  font-size: 0.75rem;
  font-weight: 700;
  text-transform: uppercase;
  margin: 1.25rem 0 0.625rem;
}

.promo-form__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  margin-bottom: 0.625rem;
  text-align: justify;
}

.promo-form__list {
  display: flex;
  width: 100%;
  height: 7.5rem;
  background-color: #f6f6f6;
}

.promo-form__item {
  width: 100%;
  height: 100%;
}

.promo-form__item:nth-child(1n) {
  display: none;
}

.promo-form__item:first-child {
  display: flex;
}

.promo-form__pic {
  width: 100%;
  height: 100%;
  display: block;
  -o-object-fit: contain;
  object-fit: contain;
  -o-object-position: center center;
  object-position: center center;
}

.horeca__img {
  background: linear-gradient(90deg, rgba(138, 157, 181, 0.5) 0%, rgba(138, 157, 181, 0.5) 100%), url("./pictures/horeca_bg.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  width: 100%;
  height: 16.875rem;
  margin: 0.9375rem 0;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  justify-content: center;
}

.horeca__title {
  text-shadow: 1px 1px 1px rgba(0, 1, 3, 0.75);
  color: #ffffff;
  font-size: 1rem;
  font-weight: 700;
  text-transform: uppercase;
  margin-right: 1.875rem;
  position: relative;
}

.horeca__title::after {
  content: "";
  display: flex;
  width: 0.3125rem;
  height: 1.5625rem;
  background-color: #f6444a;
  position: absolute;
  bottom: 20%;
  right: -8%;
}

.horeca__list {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  margin-right: 1.875rem;
}

.horeca__item {
  color: #f6f6f6;
  font-size: 1rem;
  font-weight: 400;
  text-transform: uppercase;
  position: relative;
}

.horeca__item::after {
  content: "";
  display: flex;
  width: 0.625rem;
  height: 0.625rem;
  border-radius: 50%;
  background-color: #f6444a;
  position: absolute;
  bottom: 0.3125rem;
  right: -0.9375rem;
}

.horeca__subtitle {
  font-size: 0.75rem;
  font-weight: 400;
  color: #c52228;
  text-transform: uppercase;
}

.horeca__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  margin-bottom: 0.9375rem;
  text-align: justify;
}

.press-prod {
  background-color: #edeef3;
}

.press-prod__img {
  background: url("./pictures/press_bg.png");
  background-position: center right;
  background-repeat: no-repeat;
  background-size: auto;
  width: 100%;
  height: 18.75rem;
}

.press-prod__subtitle {
  font-size: 0.75rem;
  font-weight: 400;
  color: #c52228;
  text-transform: uppercase;
}

.press-prod__text {
  color: #4e4e4e;
  font-size: 0.75rem;
  font-weight: 400;
  margin-bottom: 0.9375rem;
  text-align: justify;
}

.press-prod__container {
  padding: 1.25rem 0;
}

.circle__img {
  background: url("./pictures/circle.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  width: 100%;
  height: 18.75rem;
  position: relative;
  margin: 1.25rem;
}

.circle__img::after {
  content: "";
  display: block;
  width: 20rem;
  height: 20rem;
  border: 1px solid #ef7175;
  border-radius: 50%;
  position: absolute;
  top: -0.625rem;
  left: 15%;
}

.circle__list {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.circle__item {
  display: flex;
  align-items: center;
  color: #6a6a6a;
  font-size: 1.1875rem;
  font-weight: 400;
  letter-spacing: -0rem;
  margin: 0.9375rem 0;
  <<<<<<< HEAD=======<<<<<<< HEAD>>>>>>>99cfa65dca6d12e29bf2abafd264badabb70681b position: relative;
}

.circle__item::after {
  content: "";
  display: flex;
  width: 0.625rem;
  height: 0.625rem;
  border: 1px solid #ef7175;
  border-radius: 50%;
  position: absolute;
  top: 0.375rem;
  right: -1.25rem;
}

<<<<<<< HEAD=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vcm1hbGl6ZS5jc3MiLCJtYWluLm1pbi5jc3MiLCJtYWluLnNjc3MiLCJqcXVlcnkuYnhzbGlkZXIuY3NzIiwiYmFzZS9taXhpbnMuc2NzcyIsImJhc2UvbGF5b3V0LnNjc3MiLCJiYXNlL2J0bnMuc2NzcyIsImJsb2Nrcy9mb290ZXIuc2NzcyIsImJsb2Nrcy9zcGxhc2guc2NzcyIsImJsb2Nrcy9wb3B1cC5zY3NzIiwiYmxvY2tzL2FkdmFudGFnZXMuc2NzcyIsImJsb2Nrcy9tYWluLW1lbnUuc2NzcyIsImJsb2Nrcy9zb2NpYWxzLnNjc3MiLCJibG9ja3MvaGFtYnVyZ2VyLW1lbnUuc2NzcyIsImFib3V0L2Fib3V0LnNjc3MiLCJhYm91dC9wcm9jZXNzLnNjc3MiLCJhYm91dC9nZW8uc2NzcyIsImFib3V0L2NhcmVlci5zY3NzIiwiYWJvdXQvdmFjYW5jaWVzLnNjc3MiLCJwb3NtYS9wb3NtYS5zY3NzIiwic2FsZXMtZGVjb3JhdGlvbi9zYWxlcy1kZWNvcmF0aW9uLnNjc3MiLCJwcm9kdWN0cy9wcm9kdWN0cy5zY3NzIiwicHJvZHVjdHMvY2F0YWxvZy5zY3NzIiwicHJvZHVjdHMvb3JnYW5pemVycy5zY3NzIiwic3RhbmRzL3Bvcy5zY3NzIiwic3RhbmRzL2V4aGliaXRpb24uc2NzcyIsInN0YW5kcy9yZWNlcHRpb24uc2NzcyIsImFkcy9hZHMuc2NzcyIsImFkcy9yb29mLnNjc3MiLCJhZHMvc2lnbmJvYXJkcy5zY3NzIiwiYWRzL2xpZ2h0LnNjc3MiLCJhZHMvbmVvbi5zY3NzIiwiYWRzL3N0ZWxlLnNjc3MiLCJhZHMvYXV0by5zY3NzIiwiZGVzaWduL2Rlc2lnbi5zY3NzIiwicHJpbnQvcHJpbnQuc2NzcyIsInByaW50L3NpbGsuc2NzcyIsInByaW50L2VtYm9zc2luZy5zY3NzIiwicHJpbnQvZW1icm9pZGVyeS5zY3NzIiwicHJpbnQvZW5ncmF2aW5nLnNjc3MiLCJwcmludC90aGVybW8uc2NzcyIsInNvdXZlbmlycy9zb3V2ZW5pcnMuc2Nz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RXpCO0lBQ0UsMENBQTBDO0lBQzFDLGlDQUFpQztJQUNqQyw0QkFBNEI7SUFDNUIscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxnQkFDRCxFQUFBO0VBRUQ7SUFDRSxrQkFBZTtJQUNmLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QseUJBQXlCLEVBQUE7RUFHM0I7SUFDRSxjQUFjO0lBQ2Qsa0JBQWU7SUFDZixnQkFBZ0I7SUFDaEIsd0JBQW1CO0lBQ25CLG1CQUFtQixFQUFBO0VBR3JCO0lBQ0Usa0JBQ0QsRUFBQTs7QUFNRDtFQUVFLHdDQUF3QztFQUN4QyxrQ0FBa0M7RUFDbEMsNEJBQTRCO0VBQzVCLHdCQUF3QjtFQUN4QixXQUFXO0VBQ1gsZ0JBQWE7RUFDYixrQkFBa0I7RUFDbEIsZUFjRCxFQUFBO0VBdkJBO0lBWUcsV0FBVztJQUNYLGNBQWM7SUFDZCxZQUFZO0lBQ1osYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGNBQVU7SUFDVixTQUFTLEVBQUE7O0FBS2I7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLHFCQUFxQixFQUFBOztBQUl2QjtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsY0FBYztFQUNkLG9CQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLHFCQUFnQjtFQUNoQixtQkFBYztFQUNkLGtCQUFrQixFQUFBO0VBUm5CO0lBV0csV0FBVztJQUNYLGFBQWE7SUFFYixlQUFXO0lBQ1gsZ0JBQVk7SUFDWix5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixhQUFRO0lBQ1IsZUFFRCxFQUFBIiwiZmlsZSI6Im1haW4ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cbkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUFsZWdyZXlhK1NhbnM6MzAwLDQwMCw1MDAsNzAwLDgwMCZkaXNwbGF5PXN3YXAmc3Vic2V0PWN5cmlsbGljXCIpO1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0wLjEyNXJlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qKiBWQVJJQUJMRVNcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbi8qKiBSRVNFVCBBTkQgTEFZT1VUXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4uYngtd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTogMy43NXJlbTtcbiAgcGFkZGluZzogMDtcbiAgKnpvb206IDE7XG4gIC1tcy10b3VjaC1hY3Rpb246IHBhbi15O1xuICB0b3VjaC1hY3Rpb246IHBhbi15OyB9XG5cbi5ieC13cmFwcGVyIGltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLmJ4c2xpZGVyIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICAvKmZpeCBmbGlja2VyaW5nIHdoZW4gdXNlZCBiYWNrZ3JvdW5kLWltYWdlIGluc3RlYWQgb2YgPGltZz4gKG9uIENocm9tZSkqL1xuICAtd2Via2l0LXBlcnNwZWN0aXZlOiAxMDAwOyB9XG5cbnVsLmJ4c2xpZGVyIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG4uYngtdmlld3BvcnQge1xuICAvKiBmaXggb3RoZXIgZWxlbWVudHMgb24gdGhlIHBhZ2UgbW92aW5nIChpbiBDaHJvbWUpICovXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApOyB9XG5cbi8qKiBUSEVNRVxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuLmJ4LXdyYXBwZXIge1xuICAtbW96LWJveC1zaGFkb3c6IDAgMCAwLjMxMjVyZW0gI2NjYztcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMC4zMTI1cmVtICNjY2M7XG4gIGJveC1zaGFkb3c6IDAgMCAwLjMxMjVyZW0gI2NjYztcbiAgYm9yZGVyOiAwLjMxMjVyZW0gc29saWQgI2ZmZjtcbiAgYmFja2dyb3VuZDogI2ZmZjsgfVxuXG4uYngtd3JhcHBlciAuYngtcGFnZXIsXG4uYngtd3JhcHBlciAuYngtY29udHJvbHMtYXV0byB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtMS44NzVyZW07XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi8qIExPQURFUiAqL1xuLmJ4LXdyYXBwZXIgLmJ4LWxvYWRpbmcge1xuICBtaW4taGVpZ2h0OiAzLjEyNXJlbTtcbiAgYmFja2dyb3VuZDogdXJsKFwiaW1hZ2VzL2J4X2xvYWRlci5naWZcIikgY2VudGVyIGNlbnRlciBuby1yZXBlYXQgI2ZmZmZmZjtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDIwMDA7IH1cblxuLyogUEFHRVIgKi9cbi5ieC13cmFwcGVyIC5ieC1wYWdlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAuODVlbTtcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICM2NjY7XG4gIHBhZGRpbmctdG9wOiAxLjI1cmVtOyB9XG5cbi5ieC13cmFwcGVyIC5ieC1wYWdlci5ieC1kZWZhdWx0LXBhZ2VyIGEge1xuICBiYWNrZ3JvdW5kOiAjNjY2O1xuICB0ZXh0LWluZGVudDogLTYyNC45Mzc1cmVtO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDAuNjI1cmVtO1xuICBoZWlnaHQ6IDAuNjI1cmVtO1xuICBtYXJnaW46IDAgMC4zMTI1cmVtO1xuICBvdXRsaW5lOiAwO1xuICAtbW96LWJvcmRlci1yYWRpdXM6IDAuMzEyNXJlbTtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwLjMxMjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuMzEyNXJlbTsgfVxuXG4uYngtd3JhcHBlciAuYngtcGFnZXIuYngtZGVmYXVsdC1wYWdlciBhOmhvdmVyLFxuLmJ4LXdyYXBwZXIgLmJ4LXBhZ2VyLmJ4LWRlZmF1bHQtcGFnZXIgYS5hY3RpdmUsXG4uYngtd3JhcHBlciAuYngtcGFnZXIuYngtZGVmYXVsdC1wYWdlciBhOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogIzAwMDsgfVxuXG4uYngtd3JhcHBlciAuYngtcGFnZXItaXRlbSxcbi5ieC13cmFwcGVyIC5ieC1jb250cm9scy1hdXRvIC5ieC1jb250cm9scy1hdXRvLWl0ZW0ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4gICp6b29tOiAxO1xuICAqZGlzcGxheTogaW5saW5lOyB9XG5cbi5ieC13cmFwcGVyIC5ieC1wYWdlci1pdGVtIHtcbiAgZm9udC1zaXplOiAwO1xuICBsaW5lLWhlaWdodDogMDsgfVxuXG4vKiBESVJFQ1RJT04gQ09OVFJPTFMgKE5FWFQgLyBQUkVWKSAqL1xuLmJ4LXdyYXBwZXIgLmJ4LXByZXYge1xuICBsZWZ0OiAwLjYyNXJlbTtcbiAgYmFja2dyb3VuZDogdXJsKFwiaW1hZ2VzL2NvbnRyb2xzLnBuZ1wiKSBuby1yZXBlYXQgMCAtMnJlbTsgfVxuXG4uYngtd3JhcHBlciAuYngtcHJldjpob3Zlcixcbi5ieC13cmFwcGVyIC5ieC1wcmV2OmZvY3VzIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwOyB9XG5cbi5ieC13cmFwcGVyIC5ieC1uZXh0IHtcbiAgcmlnaHQ6IDAuNjI1cmVtO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCJpbWFnZXMvY29udHJvbHMucG5nXCIpIG5vLXJlcGVhdCAtMi42ODc1cmVtIC0ycmVtOyB9XG5cbi5ieC13cmFwcGVyIC5ieC1uZXh0OmhvdmVyLFxuLmJ4LXdyYXBwZXIgLmJ4LW5leHQ6Zm9jdXMge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMi42ODc1cmVtIDA7IH1cblxuLmJ4LXdyYXBwZXIgLmJ4LWNvbnRyb2xzLWRpcmVjdGlvbiBhIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbWFyZ2luLXRvcDogLTFyZW07XG4gIG91dGxpbmU6IDA7XG4gIHdpZHRoOiAycmVtO1xuICBoZWlnaHQ6IDJyZW07XG4gIHRleHQtaW5kZW50OiAtNjI0LjkzNzVyZW07XG4gIHotaW5kZXg6IDk5OTk7IH1cblxuLmJ4LXdyYXBwZXIgLmJ4LWNvbnRyb2xzLWRpcmVjdGlvbiBhLmRpc2FibGVkIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBBVVRPIENPTlRST0xTIChTVEFSVCAvIFNUT1ApICovXG4uYngtd3JhcHBlciAuYngtY29udHJvbHMtYXV0byB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uYngtd3JhcHBlciAuYngtY29udHJvbHMtYXV0byAuYngtc3RhcnQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1pbmRlbnQ6IC02MjQuOTM3NXJlbTtcbiAgd2lkdGg6IDAuNjI1cmVtO1xuICBoZWlnaHQ6IDAuNjg3NXJlbTtcbiAgb3V0bGluZTogMDtcbiAgYmFja2dyb3VuZDogdXJsKFwiaW1hZ2VzL2NvbnRyb2xzLnBuZ1wiKSAtNS4zNzVyZW0gLTAuNjg3NXJlbSBuby1yZXBlYXQ7XG4gIG1hcmdpbjogMCAwLjE4NzVyZW07IH1cblxuLmJ4LXdyYXBwZXIgLmJ4LWNvbnRyb2xzLWF1dG8gLmJ4LXN0YXJ0OmhvdmVyLFxuLmJ4LXdyYXBwZXIgLmJ4LWNvbnRyb2xzLWF1dG8gLmJ4LXN0YXJ0LmFjdGl2ZSxcbi5ieC13cmFwcGVyIC5ieC1jb250cm9scy1hdXRvIC5ieC1zdGFydDpmb2N1cyB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC01LjM3NXJlbSAwOyB9XG5cbi5ieC13cmFwcGVyIC5ieC1jb250cm9scy1hdXRvIC5ieC1zdG9wIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtaW5kZW50OiAtNjI0LjkzNzVyZW07XG4gIHdpZHRoOiAwLjU2MjVyZW07XG4gIGhlaWdodDogMC42ODc1cmVtO1xuICBvdXRsaW5lOiAwO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCJpbWFnZXMvY29udHJvbHMucG5nXCIpIC01LjM3NXJlbSAtMi43NXJlbSBuby1yZXBlYXQ7XG4gIG1hcmdpbjogMCAwLjE4NzVyZW07IH1cblxuLmJ4LXdyYXBwZXIgLmJ4LWNvbnRyb2xzLWF1dG8gLmJ4LXN0b3A6aG92ZXIsXG4uYngtd3JhcHBlciAuYngtY29udHJvbHMtYXV0byAuYngtc3RvcC5hY3RpdmUsXG4uYngtd3JhcHBlciAuYngtY29udHJvbHMtYXV0byAuYngtc3RvcDpmb2N1cyB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC01LjM3NXJlbSAtMi4wNjI1cmVtOyB9XG5cbi8qIFBBR0VSIFdJVEggQVVUTy1DT05UUk9MUyBIWUJSSUQgTEFZT1VUICovXG4uYngtd3JhcHBlciAuYngtY29udHJvbHMuYngtaGFzLWNvbnRyb2xzLWF1dG8uYngtaGFzLXBhZ2VyIC5ieC1wYWdlciB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHdpZHRoOiA4MCU7IH1cblxuLmJ4LXdyYXBwZXIgLmJ4LWNvbnRyb2xzLmJ4LWhhcy1jb250cm9scy1hdXRvLmJ4LWhhcy1wYWdlciAuYngtY29udHJvbHMtYXV0byB7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogMi4xODc1cmVtOyB9XG5cbi8qIElNQUdFIENBUFRJT05TICovXG4uYngtd3JhcHBlciAuYngtY2FwdGlvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kOiAjNjY2O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDgwLCA4MCwgODAsIDAuNzUpO1xuICB3aWR0aDogMTAwJTsgfVxuXG4uYngtd3JhcHBlciAuYngtY2FwdGlvbiBzcGFuIHtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogLjg1ZW07XG4gIHBhZGRpbmc6IDAuNjI1cmVtOyB9XG5cbi8qQGZ1bmN0aW9uIHJlbSgkcHgpIHtcclxuICAgIEByZXR1cm4gJHB4IC8gMXJlbSArIDByZW07IFxyXG59XHJcbiovXG5odG1sIHtcbiAgZm9udC1zaXplOiAxcmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDAuODc1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBodG1sIHtcbiAgICAgIGZvbnQtc2l6ZTogMC44MTI1cmVtOyB9IH1cblxuaHRtbCxcbmJvZHkge1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8gQ29uZGVuc2VkJywgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuNDI7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4ud3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIC8qbWF4LXdpZHRoOiA1OC43NXJlbSArIDEuMjVyZW07ICovXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLm1haW5jb250ZW50IHtcbiAgZmxleDogMTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxudWwsXG5waWN0dXJlLFxucCB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDsgfVxuXG51bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbmEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDsgfVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBtYXJnaW4tdG9wOiAwO1xuICBmb250LXdlaWdodDogbm9ybWFsOyB9XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxuLnRpdGxlIHtcbiAgZm9udC1zaXplOiAzcmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogaW5oZXJpdDsgfVxuXG4uc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgbWluLWhlaWdodDogMTUuNjI1cmVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLnNlY3Rpb24ge1xuICAgICAgbWluLWhlaWdodDogaW5pdGlhbDsgfSB9XG5cbi5jb250YWluZXIge1xuICAvKiAgbWF4LXdpZHRoOiA1OC43NXJlbTsgKi9cbiAgd2lkdGg6IDk1JTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogMTAwJTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgaGVpZ2h0OiBpbml0aWFsOyB9IH1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuLnRpdGxlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjb2xvcjogaW5oZXJpdDsgfVxuXG4uc3VidGl0bGUge1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzc3N2I4ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuXG5wIHtcbiAgY29sb3I6IGluaGVyaXQ7IH1cblxuLnZhY2FuY3ktYnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlY2VlZjM7XG4gIHBhZGRpbmc6IDAuNjI1cmVtIDEuMjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWluLWhlaWdodDogNC4wNjI1cmVtOyB9XG4gIC52YWNhbmN5LWJ0bi0tYWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWYzO1xuICAgIGJvcmRlci10b3A6IDAuMjVyZW0gc29saWQgI2QxNDU0ZDtcbiAgICBjb2xvcjogI2QxNDU0ZDsgfVxuXG4uYXJyb3ctYnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIHBhZGRpbmc6IDAuMzEyNXJlbSAwLjMxMjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNkMTQ1NGQ7XG4gIGhlaWdodDogMS44NzVyZW07XG4gIHdpZHRoOiAzLjEyNXJlbTsgfVxuICAuYXJyb3ctYnRuX19pY29uIHtcbiAgICB3aWR0aDogMi4xMjVyZW07XG4gICAgaGVpZ2h0OiA0cmVtO1xuICAgIGZpbGw6IHRyYW5zcGFyZW50O1xuICAgIHN0cm9rZTogcmVkO1xuICAgIGZpbGwtcnVsZTogbm9uemVybzsgfVxuXG4uYnRuIHtcbiAgcGFkZGluZzogMS4yNXJlbSAyLjVyZW07XG4gIGJveC1zaGFkb3c6IDFweCAwLjEyNXJlbSAwLjMxMjVyZW0gMXB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDByZW07XG4gIGNvbG9yOiAjZmZmZmZmOyB9XG5cbmZvb3RlciB7XG4gIGhlaWdodDogMTAwdmg7XG4gIG1pbi1oZWlnaHQ6IDQwLjYyNXJlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWJveC1hbGlnbjogc3BhY2UtYmV0d2VlbjtcbiAgLW1zLWZsZXgtYWxpZ246IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBzcGFjZS1iZXR3ZWVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDAuNzVyZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBmb290ZXIge1xuICAgICAgbWluLWhlaWdodDogaW5pdGlhbDsgfSB9XG4gIGZvb3Rlcl9fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAwLjkzNzVyZW0gMS41NjI1cmVtO1xuICAgIGhlaWdodDogMTAwJTsgfVxuXG5mb290ZXIgYSB7XG4gIGNvbG9yOiAjZmZmOyB9XG5cbmZvb3RlciBhOmFjdGl2ZSB7XG4gIGNvbG9yOiAjZDE0NTRkOyB9XG5cbmZvb3Rlcjo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZDogcmdiYSg3NCwgOTUsIDEyMiwgMC43KTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBib3R0b206IDA7XG4gIHJpZ2h0OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IC01OyB9XG5cbmZvb3Rlcjo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi9waWN0dXJlcy9mb290ZXItYmcucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBvcGFjaXR5OiAxO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogLTEwOyB9XG5cbi5lbnRyZXByZW5ldXIge1xuICAtd2Via2l0LWJveC1mbGV4OiAxO1xuICAtbXMtZmxleDogMTtcbiAgZmxleDogMTsgfVxuXG4uY29udGFjdHMge1xuICBtYXJnaW4tYm90dG9tOiAwLjkzNzVyZW07XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4uY29udGFjdHNfX2FkZHJlc3MsXG4uY29udGFjdHNfX3Bob25lLFxuLmNvbnRhY3RzX19lbWFpbCxcbi5jb250YWN0c19fc2NoZWR1bGUge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1ib3R0b206IDEuNTYyNXJlbTsgfVxuXG4uY29udGFjdHNfX2NvbnRlbnQge1xuICAtd2Via2l0LWJveC1mbGV4OiAzO1xuICAtbXMtZmxleDogMztcbiAgZmxleDogMztcbiAgbWFyZ2luLXJpZ2h0OiAxLjI1cmVtOyB9XG5cbi5jb250YWN0c19fc29jaWFscyB7XG4gIC13ZWJraXQtYm94LWZsZXg6IDE7XG4gIC1tcy1mbGV4OiAxO1xuICBmbGV4OiAxO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG4ucGhvbmVfX2ltZyxcbi5lbWFpbF9faW1nIHtcbiAgaGVpZ2h0OiAxLjU2MjVyZW07XG4gIHdpZHRoOiAxLjU2MjVyZW07XG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi5hZGRyZXNzX19pbWcge1xuICBoZWlnaHQ6IDEuNTYyNXJlbTtcbiAgd2lkdGg6IDEuODc1cmVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4uc2NoZWR1bGVfX2ltZyB7XG4gIGhlaWdodDogMS41NjI1cmVtO1xuICB3aWR0aDogMS44NzVyZW07XG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi5zY2hlZHVsZV9fY29udGVudCB7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5zY2hlZHVsZV9fbGlzdCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTsgfVxuXG4uc2NoZWR1bGVfX2l0ZW0ge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7IH1cblxuLnNjaGVkdWxlX19kYXkge1xuICB3aWR0aDogMjUlOyB9XG5cbi5lbnRyZXByZW5ldXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLmVudHJlcHJlbmV1cl9faW1nIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDAuNjg3NXJlbTsgfVxuXG4uZW50cmVwcmVuZXVyX19kZXNjIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBtYXgtd2lkdGg6IDE4Ljc1cmVtOyB9XG5cbi5lbnRyZXByZW5ldXJfX2Rlc2Mgc3BhbiB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi5lbnRyZXByZW5ldXJfX2lkLFxuLmVudHJlcHJlbmV1cl9fZGVzYyxcbi5lbnRyZXByZW5ldXJfX2FkZHJlc3MsXG4uZW50cmVwcmVuZXVyX19waG9uZSB7XG4gIG1hcmdpbi1ib3R0b206IDEuMjVyZW07IH1cblxuLmlkX19saXN0LFxuLmRldGFpbHNfX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5zb2NpYWxzX19saXN0IHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4uZW50cmVwcmVuZXVyX19pbWcge1xuICBoZWlnaHQ6IDIuMjVyZW07XG4gIHdpZHRoOiAyLjI1cmVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLmNvbnRhaW5lcl9fc3BsYXNoIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY5ZmI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5jb250YWluZXJfX3NwbGFzaDo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy9iYWxsMi5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogNXJlbTtcbiAgICBoZWlnaHQ6IDVyZW07XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMTUlO1xuICAgIGxlZnQ6IDAlOyB9XG4gIC5zcGxhc2hfX2hlYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAwLjkzNzVyZW07IH1cbiAgLnNwbGFzaF9fZGVzYyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHdpZHRoOiA3MCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5zcGxhc2hfX2Rlc2M6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvYmFsbDEucG5nXCIpO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA2LjI1cmVtO1xuICAgIGhlaWdodDogNi4yNXJlbTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAtMTAlO1xuICAgIHJpZ2h0OiAtMTAlOyB9XG4gIC5zcGxhc2hfX2NvbnRlbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5zcGxhc2hfX2h1Z2Uge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGZvbnQtc2l6ZTogNC45Mzc1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAuc3BsYXNoX19iaWcge1xuICAgIHRleHQtc2hhZG93OiAwIDAgMnJlbSByZ2JhKDExOSwgMTIzLCAxNDIsIDAuMTYpO1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGZvbnQtc2l6ZTogMS41NjI1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7IH1cbiAgLmxvZ29fX2ltZyB7XG4gICAgd2lkdGg6IDYuODEyNXJlbTtcbiAgICBoZWlnaHQ6IDQuMzc1cmVtOyB9XG4gIC5zcGxhc2hfX2xvZ28ge1xuICAgIG1hcmdpbjogMS4xODc1cmVtIDAgMXJlbTsgfVxuICAubG9nb19fcGljIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgLnNwbGFzaF9fbmFtZSB7XG4gICAgY29sb3I6ICM3NzdiOGU7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5zcGxhc2hfX3RleHQge1xuICAgIGNvbG9yOiAjYTNhNWFmO1xuICAgIGZvbnQtc2l6ZTogMC45Mzc1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjVyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cblxuLnBvcHVwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi9waWN0dXJlcy9iZzEucG5nXCIpIG5vLXJlcGVhdCBjZW50ZXI7XG4gIG9iamVjdC1maXQ6IGNvdmVyOyB9XG5cbi5tZW51X19saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuLm1lbnVfX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMC43NXJlbSAwO1xuICBib3JkZXItcmlnaHQ6IDAuMzEyNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgdHJhbnNpdGlvbjogLjNzO1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3MTgwOTQ7IH1cbiAgLm1lbnVfX2l0ZW06aG92ZXIge1xuICAgIGNvbG9yOiAjZmE0NTRiO1xuICAgIGJvcmRlci1yaWdodDogMC4zMTI1cmVtIHNvbGlkICNmYTQ1NGI7IH1cblxuLm1lbnVfX2ltZyB7XG4gIHdpZHRoOiAyLjg3NXJlbTtcbiAgaGVpZ2h0OiAyLjc1cmVtO1xuICBtYXJnaW46IDAuOTM3NXJlbSA1cmVtOyB9XG5cbi5tZW51X19waWMge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlOyB9XG5cbi5tZW51X190aXRsZSB7XG4gIG1hcmdpbjogMC45Mzc1cmVtIDA7IH1cblxuLm1lbnVfX2xpbmsge1xuICBmb250LXNpemU6IDAuODEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5tZW51X19saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogaW5oZXJpdDsgfVxuXG4uYWR2YW50YWdlcyB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi5hZHZhbnRhZ2VzX19saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEuNTYyNXJlbSAwOyB9XG5cbi5hZHZhbnRhZ2VfX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4uYWR2YW50YWdlX19pbWcge1xuICB3aWR0aDogMS4zNzVyZW07XG4gIGhlaWdodDogMS4zNzVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAxLjI1cmVtIDA7IH1cbiAgLmFkdmFudGFnZV9faW1nOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMS44NzVyZW07XG4gICAgaGVpZ2h0OiAxLjg3NXJlbTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZjZmNmY2O1xuICAgIHRyYW5zZm9ybTogc2tldyg0NWRlZywgLTQ1ZGVnKTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTIwJTtcbiAgICB0b3A6IC0yMCU7IH1cblxuLmFkdmFudGFnZV9fcGljIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLmFkdmFudGFnZV9fdGl0bGUge1xuICBjb2xvcjogI2M1MjIyODtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbWFyZ2luOiAwLjYyNXJlbSAwIDEuMjVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuYWR2YW50YWdlX190aXRsZTo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDIuNXJlbTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAzOCU7XG4gICAgYm90dG9tOiAtNzAlOyB9XG5cbi5hZHZhbnRhZ2VfX3RleHQge1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzk5OTk5OTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXgtd2lkdGg6IDEzLjEyNXJlbTsgfVxuXG4ubWFpbi1tZW51IHtcbiAgYmFja2dyb3VuZDogIzU3Njg3ZjsgfVxuXG4ubWFpbi1tZW51TGVmdCB7XG4gIHdpZHRoOiA2MCU7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZjM7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgcGFkZGluZzogMS4yNXJlbSAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLm1haW4tbWVudUxlZnQ6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAyLjVyZW07XG4gICAgaGVpZ2h0OiAyLjVyZW07XG4gICAgYmFja2dyb3VuZDogdXJsKC4vcGljdHVyZXMvY3Jvc3MucG5nKSBuby1yZXBlYXQ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAtMi40Mzc1cmVtO1xuICAgIHRvcDogNSU7IH1cblxuLm1haW4tbWVudV9fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cblxuLm1haW4tbWVudV9faXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbjogMi41cmVtIDByZW07XG4gIGJvcmRlci1yaWdodDogMC4yNXJlbSBzb2xpZCB0cmFuc3BhcmVudDsgfVxuICAubWFpbi1tZW51X19pdGVtOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGFkZWU2O1xuICAgIGJvcmRlci1yaWdodDogMC4yNXJlbSBzb2xpZCByZWQ7IH1cblxuLm1haW4tbWVudV9faW1nIHtcbiAgbWFyZ2luOiAwIDEuMjVyZW07IH1cblxuLm1haW4tbWVudV9fdGV4dCB7XG4gIGNvbG9yOiAjNzc3YjhlO1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5tYWluLW1lbnVfX3BpYyB7XG4gIHdpZHRoOiAxLjg3NXJlbTtcbiAgaGVpZ2h0OiAxLjg3NXJlbTtcbiAgZmlsbDogdHJhbnNwYXJlbnQ7XG4gIHN0cm9rZTogcmVkO1xuICBmaWxsLXJ1bGU6IG5vbnplcm87XG4gIHRyYW5zaXRpb246IDAuM3M7IH1cbiAgLm1haW4tbWVudV9fcGljOmhvdmVyIHtcbiAgICBzdHJva2U6IHJlZDsgfVxuXG4vKi5zb2NpYWxzIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMC45Mzc1cmVtO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4qL1xuLnNvY2lhbHNfX3RpdGxlIHtcbiAgZm9udC1mYW1pbHk6ICdnb3RoYW1wcm8nLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGluZS1oZWlnaHQ6IDMuMzc1cmVtO1xuICBtYXJnaW4tYm90dG9tOiAtMC42MjVyZW07IH1cblxuLnNvY2lhbHNfX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsgfVxuXG4uc29jaWFsc19faXRlbSB7XG4gIG1hcmdpbi1yaWdodDogMS4yNXJlbTtcbiAgd2lkdGg6IDEuNDM3NXJlbTtcbiAgaGVpZ2h0OiAxLjQzNzVyZW07IH1cbiAgLnNvY2lhbHNfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG5cbi5zb2NpYWxzX19waWMge1xuICB3aWR0aDogMS41NjI1cmVtO1xuICBoZWlnaHQ6IDEuNTYyNXJlbTtcbiAgZmlsbDogdHJhbnNwYXJlbnQ7XG4gIHN0cm9rZTogIzNlNDg1ODtcbiAgZmlsbC1ydWxlOiBub256ZXJvO1xuICB0cmFuc2l0aW9uOiAxczsgfVxuICAuc29jaWFsc19fcGljOmhvdmVyIHtcbiAgICBzdHJva2U6IHJlZDsgfVxuXG4uaGFtYnVyZ2VyLW1lbnUtbGluayB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxLjM3NXJlbTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5oYW1idXJnZXItbWVudS1saW5rIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4OyB9IH1cblxuLmhhbWJ1cmdlci1tZW51LWxpbmtfX2JhcnMsIC5oYW1idXJnZXItbWVudS1saW5rX19iYXJzOmJlZm9yZSwgLmhhbWJ1cmdlci1tZW51LWxpbmtfX2JhcnM6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kOiByZWQ7XG4gIHdpZHRoOiAxLjg3NXJlbTtcbiAgaGVpZ2h0OiAwLjMxMjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuMTg3NXJlbTsgfVxuXG4uaGFtYnVyZ2VyLW1lbnUtbGlua19fYmFyczpiZWZvcmUsIC5oYW1idXJnZXItbWVudS1saW5rX19iYXJzOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTsgfVxuXG4uaGFtYnVyZ2VyLW1lbnUtbGlua19fYmFyczpiZWZvcmUge1xuICB0b3A6IDA7IH1cblxuLmhhbWJ1cmdlci1tZW51LWxpbmtfX2JhcnM6YWZ0ZXIge1xuICBib3R0b206IDA7IH1cblxuLmFib3V0IHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgY29sb3I6ICM2YTZhNmE7IH1cbiAgLmFib3V0X19jb250YWluZXIge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMS4xMjVyZW0gMHJlbTsgfVxuICAuYWJvdXRfX21vbWVudHMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuYWJvdXRfX25hdmlnYXRpb24ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDAuODc1cmVtO1xuICAgIG1heC13aWR0aDogMTMuNXJlbTsgfVxuICAuYWJvdXRfX3RpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuXG4uYnJlYWRjcnVtYnMge1xuICB3aWR0aDogMTAwJTsgfVxuICAuYnJlYWRjcnVtYnNfX2xpc3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5icmVhZGNydW1ic19faXRlbSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgLmJyZWFkY3J1bWJzX19kaXZpZGVyIHtcbiAgICBtYXJnaW4tbGVmdDogMC4zMTI1cmVtO1xuICAgIG1hcmdpbi1yaWdodDogMC4zMTI1cmVtOyB9XG4gIC5icmVhZGNydW1ic19fbGluayB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBjb2xvcjogIzk5OTk5OTsgfVxuXG4uYnJlYWRjcnVtYnNfX2xpbmstLWFjdGl2ZSxcbi5icmVhZGNydW1ic19fbGluazphY3RpdmUge1xuICBjb2xvcjogI2U3NGMzYzsgfVxuXG4ubW9tZW50c19faXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuXG4ubW9tZW50c19fZGVzYyB7XG4gIGZsZXg6IDQ7IH1cbiAgLm1vbWVudHNfX2Rlc2Mgc3BhbiB7XG4gICAgY29sb3I6ICNlNzRjM2M7IH1cblxuLm1vbWVudHNfX2RhdGUge1xuICBmbGV4OiAxO1xuICBjb2xvcjogI2U3NGMzYztcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbi1yaWdodDogMS4yNXJlbTtcbiAgcGFkZGluZzogMC42MjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyOiAxcHggZGFzaGVkICNlNzRjM2M7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWluLXdpZHRoOiA1LjkzNzVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7IH1cblxuLmFib3V0X19tb21lbnRzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB6LWluZGV4OiAwO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDg1JTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDclO1xuICBsZWZ0OiAxMSU7XG4gIGJvcmRlci1sZWZ0OiAxcHggZGFzaGVkICNlNzRjM2M7IH1cblxuLnByb2Nlc3Mge1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICM1MjVhNmE7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uLy4uL3BpY3R1cmVzL3Byb2Nlc3MtYmcucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBjb2xvcjogI2ZmZjsgfVxuICAucHJvY2Vzc19fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDEuMjVyZW07IH1cbiAgLnByb2Nlc3NfX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMS4xMjVyZW0gMHJlbTsgfVxuXG4ucGxhbl9fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cblxuLnBsYW5fX3JvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgbWFyZ2luLWJvdHRvbTogMS44NzVyZW07IH1cbiAgLnBsYW5fX3JvdzpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5wbGFuX19pdGVtIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWFyZ2luLXJpZ2h0OiAxLjI1cmVtO1xuICBtYXgtd2lkdGg6IDcuNXJlbTsgfVxuXG4ucGxhbl9faW1nIHtcbiAgd2lkdGg6IDQuNjg3NXJlbTtcbiAgaGVpZ2h0OiA0LjY4NzVyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuMzEyNXJlbTsgfVxuXG4ucGxhbl9faW1nLXBpYyB7XG4gIHdpZHRoOiA0LjY4NzVyZW07XG4gIGhlaWdodDogNC42ODc1cmVtO1xuICBmaWxsOiB0cmFuc3BhcmVudDtcbiAgc3Ryb2tlOiByZWQ7XG4gIGZpbGwtcnVsZTogbm9uemVybztcbiAgdHJhbnNpdGlvbjogMC4zcztcbiAgbWFyZ2luLXJpZ2h0OiAxMCU7IH1cblxuLmdlbyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjNjIyMjg7XG4gIGNvbG9yOiAjZmZmOyB9XG4gIC5nZW9fX2NvbnRhaW5lciB7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLmdlb19fbWFwIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTI1YTZhO1xuICAgIGZsZXg6IDE7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogMTAuNjI1cmVtO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAuZ2VvX19mYWN0cyB7XG4gICAgcGFkZGluZy10b3A6IDAuNjI1cmVtO1xuICAgIG1pbi1oZWlnaHQ6IDkuMzc1cmVtO1xuICAgIGZsZXg6IDE7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2M2MjIyODtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfVxuICAgIC5nZW9fX2ZhY3RzLS1ib3R0b20ge1xuICAgICAgcGFkZGluZy10b3A6IDByZW07XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMS42MjVyZW07XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cbiAgLmdlb19faXRlbSB7XG4gICAgZmxleDogMTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmdlb19faXRlbS0tYm90dG9tIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07IH1cbiAgICAuZ2VvX19pdGVtLS1ib3R0b20gLmdlb19fYm90dG9tLWltZyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTI1YTZhO1xuICAgICAgd2lkdGg6IDQuMzc1cmVtO1xuICAgICAgaGVpZ2h0OiA0LjM3NXJlbTtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogODAlOyB9XG4gICAgLmdlb19faXRlbS0tYm90dG9tIC5nZW9fX2Rlc2Mge1xuICAgICAgbWFyZ2luLXRvcDogLTAuOTM3NXJlbTsgfVxuICAuZ2VvX19udW1iZXIge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDAuMzEyNXJlbTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuZ2VvX19udW1iZXI6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDIwJTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbiAgICAgIGxlZnQ6IDQwJTsgfVxuICAuZ2VvX19kZXNjIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogLTAuOTM3NXJlbTsgfVxuICAuZ2VvX19pbWcge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM1MjVhNmE7XG4gICAgd2lkdGg6IDQuMzc1cmVtO1xuICAgIGhlaWdodDogNC4zNzVyZW07XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDgwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmdlb19fYm9yZGVyIHtcbiAgICB3aWR0aDogODUlO1xuICAgIGhlaWdodDogODUlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4uZ2VvX19pY29uLXBpYyB7XG4gIHdpZHRoOiA0LjY4NzVyZW07XG4gIGhlaWdodDogNC42ODc1cmVtO1xuICBmaWxsOiB0cmFuc3BhcmVudDtcbiAgc3Ryb2tlOiB3aGl0ZTtcbiAgZmlsbC1ydWxlOiBub256ZXJvO1xuICB0cmFuc2l0aW9uOiAwLjNzO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICBtYXJnaW4tbGVmdDogLTMlOyB9XG5cbi5jYXJlZXIge1xuICBwYWRkaW5nOiAwLjYyNXJlbSAwcmVtO1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5jYXJlZXJfX2luZm8gcCB7XG4gICAgY29sb3I6ICM2YzZjNmM7IH1cbiAgLmNhcmVlcl9faW5mbyBhIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgY29sb3I6ICNkMTQ1NGQ7IH1cbiAgLmNhcmVlcl9fdGl0bGUge1xuICAgIGNvbG9yOiAjNzc3YjhlO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNTYyNXJlbTsgfVxuXG4udmFjYW5jaWVzIHtcbiAgcGFkZGluZzogMC42MjVyZW0gMHJlbTtcbiAgZm9udC1zaXplOiAwLjc1cmVtOyB9XG4gIC52YWNhbmNpZXNfX2NvbnRhaW5lciB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLnZhY2FuY2llc19fc2xpZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGZsZXg6IDE7IH1cbiAgLnZhY2FuY2llc19fdGl0bGUge1xuICAgIGNvbG9yOiAjNzc3YjhlO1xuICAgIHdpZHRoOiAzMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLnZhY2FuY2llc19fdGl0bGU6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHotaW5kZXg6IDA7XG4gICAgICBoZWlnaHQ6IDFweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICBsZWZ0OiAtMTAwJTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7IH1cbiAgICAudmFjYW5jaWVzX190aXRsZTphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB6LWluZGV4OiAwO1xuICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbGVmdDogMTAwJTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7IH1cbiAgLnZhY2FuY2llc19faXRlbSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcbiAgICBwYWRkaW5nOiAxLjI1cmVtIDEuODc1cmVtOyB9XG4gIC52YWNhbmNpZXNfX2J0bnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gICAgLnZhY2FuY2llc19fYnRucyAudmFjYW5jeS1idG4ge1xuICAgICAgZmxleDogMTsgfVxuICAudmFjYW5jaWVzX19kdXRpZXMsIC52YWNhbmNpZXNfX3JlcXVpcmUsIC52YWNhbmNpZXNfX2NvbmRpdGlvbnMsIC52YWNhbmNpZXNfX2FkZHJlc3Mge1xuICAgIG1hcmdpbi1ib3R0b206IDAuMzEyNXJlbTsgfVxuXG4uc2xpZGVyX19idG5zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgbWluLWhlaWdodDogMS44NzVyZW07IH1cblxuLmxhYmVsIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNkMTQ1NGQ7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDE1MywgMTUzLCAxNTMsIDAuNyk7XG4gIHBhZGRpbmc6IDAuMzEyNXJlbSAwcmVtO1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5wb3MtbWF0ZXJpYWxzLCAuY29udGFpbmVyIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG4ucG9zX19pbWcge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuL3BpY3R1cmVzL3Bvc21hLmpwZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgbWluLWhlaWdodDogMjByZW07XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuXG4ucG9zX19saXN0IHtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4ucG9zX19pdGVtIHtcbiAgd2lkdGg6IDQ1JTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4ucG9zX19pdGVtLS1waWMge1xuICB3aWR0aDogNC42ODc1cmVtO1xuICBoZWlnaHQ6IDQuNjg3NXJlbTtcbiAgZmlsbDogdHJhbnNwYXJlbnQ7XG4gIHN0cm9rZTogI2U1NTM1ODtcbiAgc3Ryb2tlLXdpZHRoOiAwLjEyNXJlbTtcbiAgdHJhbnNpdGlvbjogMXM7IH1cblxuLnBvc19faXRlbS0tdGV4dCB7XG4gIGNvbG9yOiAjNmE2YTZhO1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAwLjkzNzVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4udGl0bGVfX3BvcyB7XG4gIGNvbG9yOiAjNzc3YjhlO1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbjogMS4yNXJlbSAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLnRpdGxlX19wb3M6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDAuMzEyNXJlbTtcbiAgICBoZWlnaHQ6IDEuMjVyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2NDQ0YTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAwLjMxMjVyZW07XG4gICAgcmlnaHQ6IC0wLjkzNzVyZW07IH1cblxuLnN1YnRpdGxlX19wb3Mge1xuICBjb2xvcjogI2M5NGQzZjtcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuODEyNXJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5wb3NfX3RleHQge1xuICBjb2xvcjogIzZhNmE2YTtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMXJlbTsgfVxuXG4uaHVnZS1wb3MsIC5wbGV4aWdsYXNzLXByb2QsIC5zYWxlLXBvaW50IHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjVmOTsgfVxuICAuaHVnZS1wb3NfX2ltZywgLnBsZXhpZ2xhc3MtcHJvZF9faW1nLCAuc2FsZS1wb2ludF9faW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwcmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM5ODk4OTg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgICAuaHVnZS1wb3NfX2ltZzpob3ZlciwgLnBsZXhpZ2xhc3MtcHJvZF9faW1nOmhvdmVyLCAuc2FsZS1wb2ludF9faW1nOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlNTUzNTg7IH1cbiAgICAuaHVnZS1wb3NfX2ltZzo6YWZ0ZXIsIC5wbGV4aWdsYXNzLXByb2RfX2ltZzo6YWZ0ZXIsIC5zYWxlLXBvaW50X19pbWc6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICB3aWR0aDogNi44NzVyZW07XG4gICAgICBoZWlnaHQ6IDYuODc1cmVtO1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy9wb3NtYV9iZzIucG5nXCIpO1xuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICBib3JkZXI6IDAuNjI1cmVtIHNvbGlkICNmNGY1Zjk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogLTMuNzVyZW07XG4gICAgICBsZWZ0OiAzNSU7IH1cbiAgLmh1Z2UtcG9zX19jb250YWluZXIsIC5wbGV4aWdsYXNzLXByb2RfX2NvbnRhaW5lciwgLnNhbGUtcG9pbnRfX2NvbnRhaW5lciB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIG1hcmdpbjogNXJlbSAwOyB9XG4gIC5odWdlLXBvc19fdGl0bGUsIC5wbGV4aWdsYXNzLXByb2RfX3RpdGxlLCAuc2FsZS1wb2ludF9fdGl0bGUge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjEyNXJlbTtcbiAgICBtYXJnaW4tdG9wOiAxLjU2MjVyZW07XG4gICAgbWF4LXdpZHRoOiA1NSU7IH1cbiAgLmh1Z2UtcG9zX19saXN0LCAucGxleGlnbGFzcy1wcm9kX19saXN0LCAuc2FsZS1wb2ludF9fbGlzdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMi41cmVtOyB9XG4gIC5odWdlLXBvc19faXRlbSwgLnBsZXhpZ2xhc3MtcHJvZF9faXRlbSwgLnNhbGUtcG9pbnRfX2l0ZW0ge1xuICAgIGNvbG9yOiAjOTg5ODk4O1xuICAgIGZvbnQtc2l6ZTogMC45Mzc1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGluZS1oZWlnaHQ6IDI7IH1cbiAgLmh1Z2UtcG9zX19idG4sIC5wbGV4aWdsYXNzLXByb2RfX2J0biwgLnNhbGUtcG9pbnRfX2J0biB7XG4gICAgY29sb3I6ICNmZmZmZmY7XG4gICAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAwcmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM5ODk4OTg7XG4gICAgcGFkZGluZzogMC45Mzc1cmVtIDIuMTg3NXJlbTsgfVxuICAgIC5odWdlLXBvc19fYnRuOmhvdmVyLCAucGxleGlnbGFzcy1wcm9kX19idG46aG92ZXIsIC5zYWxlLXBvaW50X19idG46aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U1NTM1ODsgfVxuXG4uaHVnZS1wb3NfX2ltZzo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuL3BpY3R1cmVzL3Bvc21hX2JnMi5wbmdcIik7IH1cblxuLnNhbGUtcG9pbnRfX2ltZzo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuL3BpY3R1cmVzL3Bvc21hX2JnMy5wbmdcIik7IH1cblxuLnBsZXhpZ2xhc3MtcHJvZF9faW1nOjphZnRlciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvcG9zbWFfYmc0LnBuZ1wiKTsgfVxuXG4uc2FsZXMtZGVjb3JhdGlvbiwgLnBvbHlzdGFuZHMsIC5jb250YWluZXIge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG5cbi5zYWxlcy1kZWNvcmF0aW9uX19pbWcge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuL3BpY3R1cmVzL3NhbGVzZGVjb3IucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBtaW4taGVpZ2h0OiAxMC40Mzc1cmVtO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07IH1cblxuLnNhbGVzLWRlY29yYXRpb25fX3RpdGxlIHtcbiAgY29sb3I6ICM3NzdiOGU7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbWFyZ2luOiAwLjkzNzVyZW0gMDsgfVxuXG4uc2FsZXMtZGVjb3JhdGlvbl9fdGV4dCB7XG4gIGNvbG9yOiAjNGU0ZTRlO1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAwLjkzNzVyZW07XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gIG1hcmdpbi1ib3R0b206IDEuMjVyZW07IH1cblxuLnRzLW1ldGFsbCwgLnRzLW1kZiwgLnRzLWRpc3BsYXksIC50cy1vdGhlciB7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgLnRzLW1ldGFsbF9fZGVzYywgLnRzLW1kZl9fZGVzYywgLnRzLWRpc3BsYXlfX2Rlc2MsIC50cy1vdGhlcl9fZGVzYyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMS44NzVyZW07IH1cbiAgLnRzLW1ldGFsbF9fdGl0bGUsIC50cy1tZGZfX3RpdGxlLCAudHMtZGlzcGxheV9fdGl0bGUsIC50cy1vdGhlcl9fdGl0bGUge1xuICAgIGNvbG9yOiAjNGU0ZTRlO1xuICAgIGZvbnQtc2l6ZTogMS4xODc1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi10b3A6IDEuMjVyZW07IH1cbiAgLnRzLW1ldGFsbF9faW1hZ2UsIC50cy1tZGZfX2ltYWdlLCAudHMtZGlzcGxheV9faW1hZ2UsIC50cy1vdGhlcl9faW1hZ2Uge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gICAgbWluLWhlaWdodDogNy41cmVtO1xuICAgIHdpZHRoOiA3LjVyZW07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNkNGQ3ZGE7IH1cbiAgLnRzLW1ldGFsbF9fbGlzdCwgLnRzLW1kZl9fbGlzdCwgLnRzLWRpc3BsYXlfX2xpc3QsIC50cy1vdGhlcl9fbGlzdCB7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAudHMtbWV0YWxsX19pdGVtLCAudHMtbWRmX19pdGVtLCAudHMtZGlzcGxheV9faXRlbSwgLnRzLW90aGVyX19pdGVtIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDIxLjg3NXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xuICAgIHBhZGRpbmc6IDEuODc1cmVtIDEuNTYyNXJlbTsgfVxuICAgIC50cy1tZXRhbGxfX2l0ZW06bGFzdC1jaGlsZCwgLnRzLW1ldGFsbF9faXRlbTpudGgtY2hpbGQoMm4pLCAudHMtbWRmX19pdGVtOmxhc3QtY2hpbGQsIC50cy1tZGZfX2l0ZW06bnRoLWNoaWxkKDJuKSwgLnRzLWRpc3BsYXlfX2l0ZW06bGFzdC1jaGlsZCwgLnRzLWRpc3BsYXlfX2l0ZW06bnRoLWNoaWxkKDJuKSwgLnRzLW90aGVyX19pdGVtOmxhc3QtY2hpbGQsIC50cy1vdGhlcl9faXRlbTpudGgtY2hpbGQoMm4pIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLnRzLW1ldGFsbF9fcGljLCAudHMtbWRmX19waWMsIC50cy1kaXNwbGF5X19waWMsIC50cy1vdGhlcl9fcGljIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb2JqZWN0LWZpdDogY29udGFpbjsgfVxuICAudHMtbWV0YWxsX19jb250YWluZXIsIC50cy1tZGZfX2NvbnRhaW5lciwgLnRzLWRpc3BsYXlfX2NvbnRhaW5lciwgLnRzLW90aGVyX19jb250YWluZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgLnRzLW1ldGFsbF9fc3VidGl0bGUsIC50cy1tZGZfX3N1YnRpdGxlLCAudHMtZGlzcGxheV9fc3VidGl0bGUsIC50cy1vdGhlcl9fc3VidGl0bGUge1xuICAgIGNvbG9yOiAjNzc3YjhlO1xuICAgIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBwYWRkaW5nOiAxLjI1cmVtIDEuMjVyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLnRzLW1ldGFsbF9fc3VidGl0bGU6OmFmdGVyLCAudHMtbWRmX19zdWJ0aXRsZTo6YWZ0ZXIsIC50cy1kaXNwbGF5X19zdWJ0aXRsZTo6YWZ0ZXIsIC50cy1vdGhlcl9fc3VidGl0bGU6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgd2lkdGg6IDAuMzEyNXJlbTtcbiAgICAgIGhlaWdodDogMi4xODc1cmVtO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2NDQ0YTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMC45Mzc1cmVtO1xuICAgICAgbGVmdDogMDsgfVxuICAudHMtbWV0YWxsX190ZXh0LCAudHMtbWRmX190ZXh0LCAudHMtZGlzcGxheV9fdGV4dCwgLnRzLW90aGVyX190ZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuICAgIGNvbG9yOiAjNGU0ZTRlO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwOyB9XG5cbi50cy1tZXRhbGxfX2Rlc2Mge1xuICBtYXJnaW4tdG9wOiAwOyB9XG5cbi50cy1tZXRhbGxfX2ltYWdlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy90czEucG5nXCIpOyB9XG5cbi50cy1tZGZfX2ltYWdlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy90czIucG5nXCIpOyB9XG5cbi50cy1kaXNwbGF5X19pbWFnZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvdHMzLnBuZ1wiKTsgfVxuXG4udHMtb3RoZXJfX2ltYWdlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy90czQucG5nXCIpOyB9XG5cbi5wb2x5c3RhbmRzX190aXRsZSB7XG4gIGNvbG9yOiAjNzc3YjhlO1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHBhZGRpbmc6IDEuMjVyZW0gMCAwLjYyNXJlbTsgfVxuXG4ucG9seXN0YW5kc19fdGV4dCB7XG4gIGNvbG9yOiAjNGU0ZTRlO1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG1hcmdpbi1ib3R0b206IDAuOTM3NXJlbTtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTsgfVxuXG4ucG9seXN0YW5kc19fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7IH1cblxuLnBvbHlzdGFuZHNfX2l0ZW0ge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAyMC42MjVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XG4gIHBhZGRpbmc6IDEuODc1cmVtIDEuNTYyNXJlbTsgfVxuICAucG9seXN0YW5kc19faXRlbTpudGgtY2hpbGQoMW4pIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5wb2x5c3RhbmRzX19pdGVtOmZpcnN0LWNoaWxkIHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG5cbi5kaXNwZW5zZXIge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5kaXNwZW5zZXJfX2NvbnRhaW5lciB7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gIC5kaXNwZW5zZXJfX3RpdGxlIHtcbiAgICBjb2xvcjogIzc3N2I4ZTtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBwYWRkaW5nOiAxLjI1cmVtIDAgMDsgfVxuICAuZGlzcGVuc2VyX190ZXh0IHtcbiAgICBjb2xvcjogIzRlNGU0ZTtcbiAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5OyB9XG4gIC5kaXNwZW5zZXJfX3N1YnRpdGxlIHtcbiAgICBjb2xvcjogIzc3N2I4ZTtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmRpc3BlbnNlcl9faW1hZ2Uge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvZGlzcGVuc2VyLnBuZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBtaW4taGVpZ2h0OiAxMy41NjI1cmVtO1xuICAgIHdpZHRoOiAxNC4xODc1cmVtO1xuICAgIG1hcmdpbjogMS41NjI1cmVtO1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuZGlzcGVuc2VyX19pbWFnZTo6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMTcuNXJlbTtcbiAgICAgIGhlaWdodDogMTcuNXJlbTtcbiAgICAgIGJvcmRlcjogMC4xMjVyZW0gc29saWQgI2ZkM2IzZTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIHRvcDogLTIwJTtcbiAgICAgIGxlZnQ6IC0xMCU7IH1cbiAgLmRpc3BlbnNlcl9fZGVzYyB7XG4gICAgd2lkdGg6IDg1JTsgfVxuICAuZGlzcGVuc2VyX19saXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgLmRpc3BlbnNlcl9faXRlbSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5kaXNwZW5zZXJfX2ltZyB7XG4gICAgbWFyZ2luOiAwLjkzNzVyZW07IH1cbiAgLmRpc3BlbnNlcl9fcGljIHtcbiAgICB3aWR0aDogMS44NzVyZW07XG4gICAgaGVpZ2h0OiAxLjg3NXJlbTtcbiAgICBmaWxsOiB0cmFuc3BhcmVudDtcbiAgICBzdHJva2U6ICNlNTUzNTg7XG4gICAgc3Ryb2tlLXdpZHRoOiAwLjE4NzVyZW07XG4gICAgdHJhbnNpdGlvbjogMXM7IH1cblxuLmRpdmlkZXJzIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gIC5kaXZpZGVyc19fdGl0bGUge1xuICAgIGNvbG9yOiAjNzc3YjhlO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIG1hcmdpbjogMC42MjVyZW0gMDsgfVxuICAuZGl2aWRlcnNfX3RleHQge1xuICAgIGNvbG9yOiAjNGU0ZTRlO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtO1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7IH1cbiAgLmRpdmlkZXJzX19pbWcge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvZGl2aWRlcnMxLnBuZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBtaW4taGVpZ2h0OiAxMHJlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IDEuNTYyNXJlbTtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLmRpdmlkZXJzX19pbWc6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy9kaXZpZGVyczIucG5nXCIpO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgd2lkdGg6IDEzLjc1cmVtO1xuICAgICAgaGVpZ2h0OiAxMy43NXJlbTtcbiAgICAgIHRvcDogLTEwJTtcbiAgICAgIGxlZnQ6IC0zJTsgfVxuXG4ucHJpY2Vob2xkZXJzIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZjM7IH1cbiAgLnByaWNlaG9sZGVyc19fY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuICAucHJpY2Vob2xkZXJzX19pbWFnZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy9wcmljZV9ob2xkMS5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICBoZWlnaHQ6IDEyLjVyZW07XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLnByaWNlaG9sZGVyc19faXRlbSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gIC5wcmljZWhvbGRlcnNfX2ltZyB7XG4gICAgd2lkdGg6IDkuMzc1cmVtO1xuICAgIGhlaWdodDogOS4zNzVyZW07XG4gICAgYm9yZGVyOiAwLjEyNXJlbSBzb2xpZCAjYzMyNDJhO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5wcmljZWhvbGRlcnNfX3BpYyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG4gIC5wcmljZWhvbGRlcnNfX3RpdGxlIHtcbiAgICBjb2xvcjogIzc3N2I4ZTtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBtYXJnaW46IDAuNjI1cmVtIDA7IH1cbiAgLnByaWNlaG9sZGVyc19fc3VidGl0bGUge1xuICAgIGNvbG9yOiAjNGU0ZTRlO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiAwLjYyNXJlbTsgfVxuXG4ud29iYmxlIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMzsgfVxuICAud29iYmxlX190aXRsZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgY29sb3I6ICM3NzdiOGU7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgcGFkZGluZzogMC42MjVyZW0gMCAwOyB9XG4gIC53b2JibGVfX3RpdGxlLXdyYXAge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC53b2JibGVfX3RleHQge1xuICAgIGNvbG9yOiAjNGU0ZTRlO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtO1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7IH1cblxuLm1vYmlsZSB7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLm1vYmlsZV9fdGl0bGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGNvbG9yOiAjNzc3YjhlO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIHBhZGRpbmc6IDAuNjI1cmVtIDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLm1vYmlsZV9fdGl0bGU6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgd2lkdGg6IDAuMzEyNXJlbTtcbiAgICAgIGhlaWdodDogMS4yNXJlbTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNjQ0NGE7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDAuNXJlbTtcbiAgICAgIHJpZ2h0OiAtMC42MjVyZW07IH1cbiAgLm1vYmlsZV9fc3VidGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGNvbG9yOiAjYzUyYTMwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgLm1vYmlsZV9faW1hZ2Uge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvbW9iaWxlLnBuZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgIGhlaWdodDogMjEuMjVyZW07XG4gICAgd2lkdGg6IDE0LjM3NXJlbTsgfVxuICAubW9iaWxlX190ZXh0IHtcbiAgICBjb2xvcjogIzRlNGU0ZTtcbiAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5OyB9XG5cbi5kcml2ZXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWYzOyB9XG4gIC5kcml2ZXNfX3RpdGxlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogIzc3N2I4ZTtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBwYWRkaW5nOiAwLjYyNXJlbSAwOyB9XG4gIC5kcml2ZXNfX3BpYyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG4gIC5kcml2ZXNfX2xpc3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7IH1cbiAgLmRyaXZlc19faXRlbSB7XG4gICAgd2lkdGg6IDYuMjVyZW07XG4gICAgaGVpZ2h0OiA2LjI1cmVtO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjMzI0MmE7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLmRyaXZlc19fdGV4dCB7XG4gICAgY29sb3I6ICM0ZTRlNGU7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTsgfVxuXG4ucHJvZHVjdHMge1xuICBtYXJnaW4tYm90dG9tOiAxLjI1cmVtO1xuICBwYWRkaW5nOiAwLjYyNXJlbSAwcmVtOyB9XG4gIC5wcm9kdWN0c19fdGl0bGUge1xuICAgIGNvbG9yOiAjNzc3YjhlOyB9XG4gIC5wcm9kdWN0c19faW50cm8ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gIC5wcm9kdWN0c19fYWJvdXQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gICAgLnByb2R1Y3RzX19hYm91dCBzcGFuIHtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBmb250LXdlaWdodDogYm9sZDsgfVxuICAucHJvZHVjdHNfX2NvYXN0ZXJzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4uY29hc3RlcnNfX2luZm8ge1xuICBtYXJnaW4tYm90dG9tOiAxLjg3NXJlbTsgfVxuICAuY29hc3RlcnNfX2luZm8gc3BhbiB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXdlaWdodDogYm9sZDsgfVxuICAuY29hc3RlcnNfX2luZm8taXRlbSB7XG4gICAgbGlzdC1zdHlsZTogZGlzYzsgfVxuXG4uY29hc3RlcnNfX2Jsb2NrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAwLjYyNXJlbSAxLjg3NXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTsgfVxuXG4uY29hc3RlcnNfX2ltZyB7XG4gIHdpZHRoOiAxNS45Mzc1cmVtO1xuICBoZWlnaHQ6IDE1LjkzNzVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tYm90dG9tOiAxLjg3NXJlbTsgfVxuXG4uY29hc3RlcnNfX3BpYyB7XG4gIHdpZHRoOiA4MCU7XG4gIGhlaWdodDogODAlOyB9XG5cbi5jb2FzdGVyc19faXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMC45Mzc1cmVtOyB9XG4gIC5jb2FzdGVyc19faXRlbS1pbWcge1xuICAgIHdpZHRoOiAyLjE4NzVyZW07XG4gICAgaGVpZ2h0OiAyLjE4NzVyZW07XG4gICAgbWluLXdpZHRoOiAyLjE4NzVyZW07XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjc1cmVtOyB9XG4gICAgLmNvYXN0ZXJzX19pdGVtLWltZy0tYmlnIHtcbiAgICAgIHdpZHRoOiAyLjVyZW07XG4gICAgICBoZWlnaHQ6IDIuNXJlbTsgfVxuXG4uY29hc3RlcnNfX2ltZzpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMC42ODc1cmVtO1xuICB3aWR0aDogMC42ODc1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm90dG9tOiAtMyU7XG4gIHotaW5kZXg6IDU7IH1cblxuLmNvYXN0ZXJzX19pbWc6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICB6LWluZGV4OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDEuODc1cmVtO1xuICB3aWR0aDogMXB4O1xuICBib3JkZXItbGVmdDogMXB4IGRhc2hlZCByZWQ7XG4gIGJvdHRvbTogLTEyJTsgfVxuXG4uY29hc3RlcnNfX2l0ZW0taWNvbiB7XG4gIHdpZHRoOiAyLjE4NzVyZW07XG4gIGhlaWdodDogMi4xODc1cmVtO1xuICBmaWxsOiB0cmFuc3BhcmVudDtcbiAgc3Ryb2tlOiByZWQ7XG4gIGZpbGwtcnVsZTogbm9uemVybztcbiAgdHJhbnNpdGlvbjogMC4zczsgfVxuICAuY29hc3RlcnNfX2l0ZW0taWNvbi0tYmlnIHtcbiAgICB3aWR0aDogMi41cmVtO1xuICAgIGhlaWdodDogMi41cmVtOyB9XG5cbi5jYXRhbG9nIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcbiAgcGFkZGluZzogMC42MjVyZW0gMHJlbTsgfVxuICAuY2F0YWxvZ19fbGlzdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmNhdGFsb2dfX2l0ZW0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBmbGV4OiAxO1xuICAgIG1hcmdpbi1yaWdodDogMS4yNXJlbTsgfVxuICAgIC5jYXRhbG9nX19pdGVtOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG4gIC5jYXRhbG9nX19wYWdlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjkzNzVyZW07IH1cbiAgLmNhdGFsb2dfX2Rlc2Mge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjb2xvcjogIzc3N2I4ZTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTsgfVxuICAuY2F0YWxvZ19fdGl0bGUge1xuICAgIGNvbG9yOiAjNzc3YjhlOyB9XG4gIC5jYXRhbG9nX19idG5zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmNhdGFsb2dfX2ltZyB7XG4gICAgd2lkdGg6IDcuNXJlbTtcbiAgICBoZWlnaHQ6IDcuNXJlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07IH1cbiAgICAuY2F0YWxvZ19faW1nLWJnIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlOyB9XG5cbi5vcmdhbml6ZXJzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcbiAgcGFkZGluZzogMC42MjVyZW0gMHJlbTsgfVxuICAub3JnYW5pemVyc19fdGl0bGUge1xuICAgIGNvbG9yOiAjNzc3YjhlOyB9XG4gIC5vcmdhbml6ZXJzX19saXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cbiAgLm9yZ2FuaXplcnNfX2l0ZW0ge1xuICAgIHBhZGRpbmc6IDEuODc1cmVtIDAuNjI1cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgbWFyZ2luLWJvdHRvbTogMC45Mzc1cmVtO1xuICAgIGJveC1zaGFkb3c6IDByZW0gMC41NjI1cmVtIDAuNjg3NXJlbSAwcmVtIHJnYmEoMTE5LCAxMjMsIDE0MiwgMC4yKTsgfVxuICAub3JnYW5pemVyc19faW1nIHtcbiAgICB3aWR0aDogMTYuMjVyZW07XG4gICAgbWluLXdpZHRoOiAxNi4yNXJlbTtcbiAgICBoZWlnaHQ6IDE1LjYyNXJlbTsgfVxuICAub3JnYW5pemVyc19fYmcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTsgfVxuICAub3JnYW5pemVyc19fZ3JvdXAge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjb2xvcjogIzc3N2I4ZTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTsgfVxuICAub3JnYW5pemVyc19fbmFtZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiAjNzc3YjhlO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAwLjg3NXJlbTsgfVxuXG4ucG9zIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcbiAgcGFkZGluZzogMC42MjVyZW0gMHJlbTsgfVxuICAucG9zX190aXRsZSB7XG4gICAgY29sb3I6ICM3NzdiOGU7IH1cbiAgLnBvc19fc3VidGl0bGUge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgcGFkZGluZzogMHJlbSAwLjMxMjVyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgcmVkOyB9XG4gIC5wb3NfX2ludHJvIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAucG9zX19wcm9tb3N0YW5kcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcbiAgICBwYWRkaW5nLXRvcDogMC45Mzc1cmVtO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5wb3NfX3Nob3AtaW4tc2hvcCB7XG4gICAgcGFkZGluZy10b3A6IDAuOTM3NXJlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjg3NXJlbTsgfVxuICAucG9zX19vZmZpY2VzIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjU2MjVyZW07IH1cblxuLnByb21vc3RhbmRzX19kZXNjIHtcbiAgbWFyZ2luLWJvdHRvbTogMC45Mzc1cmVtOyB9XG4gIC5wcm9tb3N0YW5kc19fZGVzYyBzcGFuIHtcbiAgICBjb2xvcjogI2MzMjEyNjsgfVxuICAucHJvbW9zdGFuZHNfX2Rlc2MgcCxcbiAgLnByb21vc3RhbmRzX19kZXNjIC5wcm9tb3N0YW5kc19fbGlzdCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07IH1cblxuLnNob3AtaW4tc2hvcF9fZGVzYyB7XG4gIG1hcmdpbi1ib3R0b206IDAuOTM3NXJlbTsgfVxuICAuc2hvcC1pbi1zaG9wX19kZXNjIHNwYW4ge1xuICAgIGNvbG9yOiAjYzMyMTI2O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgLnNob3AtaW4tc2hvcF9fZGVzYyBwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuXG4uc2hvcC1pbi1zaG9wX19pbWcge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cblxuLnNob3AtaW4tc2hvcF9fbWFpbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAxMDAlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcbiAgcGFkZGluZzogMC45Mzc1cmVtOyB9XG5cbi5zaG9wLWluLXNob3BfX2V4dHJhIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgbWFyZ2luLXRvcDogLTAuNjI1cmVtOyB9XG4gIC5zaG9wLWluLXNob3BfX2V4dHJhLWltZyB7XG4gICAgbWF4LXdpZHRoOiA2LjI1cmVtO1xuICAgIG1hcmdpbi1yaWdodDogMC4zMTI1cmVtO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAgIC5zaG9wLWluLXNob3BfX2V4dHJhLWltZzpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuXG4uc2hvcC1pbi1zaG9wX19iZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuLm9mZmljZXNfX2ludHJvIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vcGljdHVyZXMvb2ZmaWNlLWJnLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgbWluLWhlaWdodDogMTUuMzEyNXJlbTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBwYWRkaW5nOiAwLjYyNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTsgfVxuXG4ub2ZmaWNlc19fdHlwZSB7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdGV4dC1zaGFkb3c6IDAuMTI1cmVtIDAuMTI1cmVtIDAuMTI1cmVtIHJnYmEoMCwgMSwgMywgMC43NSk7IH1cbiAgLm9mZmljZXNfX3R5cGUtLW5hcnJvdyB7XG4gICAgbWF4LXdpZHRoOiA0LjY4NzVyZW07IH1cblxuLm9mZmljZXNfX3NsaWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi5vZmZpY2VzX19wYWdlIHtcbiAgbWFyZ2luLWJvdHRvbTogMC45Mzc1cmVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTAwJTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLm9mZmljZXNfX2xpc3QsIC5vZmZpY2VzX19pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDEwMCU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5vZmZpY2VzX19pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5vZmZpY2VzX19pdGVtOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDUwJTtcbiAgICB0b3A6IDI1JTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2OyB9XG5cbi5vZmZpY2VzX19iZyB7XG4gIHotaW5kZXg6IDU7IH1cblxuLmV4aGliaXRpb24ge1xuICBwYWRkaW5nOiAwLjYyNXJlbSAwcmVtOyB9XG4gIC5leGhpYml0aW9uX190aXRsZSB7XG4gICAgY29sb3I6ICM3NzdiOGU7IH1cbiAgLmV4aGliaXRpb25fX2Rlc2Mge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XG4gICAgcGFkZGluZzogMS4wNjI1cmVtIDByZW07IH1cbiAgICAuZXhoaWJpdGlvbl9fZGVzYyBzcGFuIHtcbiAgICAgIGNvbG9yOiAjYzMyMTI2O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAgIC5leGhpYml0aW9uX19kZXNjIHAge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07IH1cbiAgLmV4aGliaXRpb25fX2ltZyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWVmMztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgcGFkZGluZzogMC42MjVyZW0gMHJlbTsgfVxuXG4ucmVjZXB0aW9uIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcbiAgcGFkZGluZzogMC42MjVyZW0gMHJlbTsgfVxuICAucmVjZXB0aW9uX190aXRsZSB7XG4gICAgY29sb3I6ICM3NzdiOGU7IH1cbiAgLnJlY2VwdGlvbl9faW50cm8ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gIC5yZWNlcHRpb25fX2ltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogMTAuOTM3NXJlbTtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoODEsIDk3LCAxMjAsIDAuNSkgMCUsIHJnYmEoODEsIDk3LCAxMjAsIDAuNSkgMTAwJSksIHVybChcIi4uLy4uL3BpY3R1cmVzL3JlY2VwdGlvbi1iZy5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7IH1cbiAgLnJlY2VwdGlvbl9fZGVzYyBzcGFuIHtcbiAgICBjb2xvcjogI2MzMjEyNjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIC5yZWNlcHRpb25fX2Rlc2MgcCxcbiAgLnJlY2VwdGlvbl9fZGVzYyAucmVjZXB0aW9uX19saXN0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuXG4uYWR2ZXJ0IHtcbiAgcGFkZGluZzogMC42MjVyZW0gMHJlbTsgfVxuICAuYWR2ZXJ0X19pbnRybyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG4gIC5hZHZlcnRfX2xpc3Qge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICM2YTZhNmE7XG4gICAgbGluZS1oZWlnaHQ6IDEuNjsgfVxuICAuYWR2ZXJ0X190aXRsZSB7XG4gICAgY29sb3I6ICM3NzdiOGU7XG4gICAgbWFyZ2luLWJvdHRvbTogMC4zMTI1cmVtOyB9XG4gIC5hZHZlcnRfX2Rlc2MgcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07IH1cbiAgLmFkdmVydF9faW1nIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luLWJvdHRvbTogMy43NXJlbTsgfVxuICAgIC5hZHZlcnRfX2ltZzpiZWZvcmUge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGhlaWdodDogMC42ODc1cmVtO1xuICAgICAgd2lkdGg6IDAuNjg3NXJlbTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICBib3R0b206IC0zJTtcbiAgICAgIHotaW5kZXg6IDU7IH1cbiAgICAuYWR2ZXJ0X19pbWc6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHotaW5kZXg6IDA7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGhlaWdodDogMy40Mzc1cmVtO1xuICAgICAgd2lkdGg6IDFweDtcbiAgICAgIGJvcmRlci1sZWZ0OiAxcHggZGFzaGVkIHJlZDtcbiAgICAgIGxlZnQ6IDUxJTtcbiAgICAgIHRvcDogMTAwJTsgfVxuICAuYWR2ZXJ0X19uYXYge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAwLjYyNXJlbSAwcmVtIDEuMTI1cmVtIDByZW07IH1cbiAgICAuYWR2ZXJ0X19uYXY6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBoZWlnaHQ6IDFweDtcbiAgICAgIHdpZHRoOiAwLjkzNzVyZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJlZDtcbiAgICAgIGxlZnQ6IDQ5JTtcbiAgICAgIHRvcDogLTElO1xuICAgICAgei1pbmRleDogNTsgfVxuXG4ucm9vZiB7XG4gIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gIC5yb29mX19pbnRybyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vcGljdHVyZXMvcm9vZi1iZy5wbmdcIik7XG4gICAgbWluLWhlaWdodDogMjEuMjVyZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHBhZGRpbmc6IDFyZW07IH1cbiAgLnJvb2ZfX3RpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICNmZmZmZmY7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIG1heC13aWR0aDogOS42ODc1cmVtOyB9XG4gIC5yb29mX19kZXNjIHtcbiAgICBwYWRkaW5nOiAxLjM3NXJlbSAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZjM7IH1cbiAgICAucm9vZl9fZGVzYyBzcGFuIHtcbiAgICAgIGNvbG9yOiAjYzMyMTI2O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAgIC5yb29mX19kZXNjIHAge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07IH1cbiAgLnJvb2ZfX3NsaWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG4gIC5yb29mX19wYWdlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjQzNzVyZW07IH1cblxuLnNpZ25ib2FyZHMge1xuICBwYWRkaW5nLXRvcDogMC42MjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDEuNzVyZW07IH1cbiAgLnNpZ25ib2FyZHNfX3RpdGxlIHtcbiAgICBjb2xvcjogIzc3N2I4ZTsgfVxuICAuc2lnbmJvYXJkc19faW50cm8ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsgfVxuICAuc2lnbmJvYXJkc19fZGVzYyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWVmMztcbiAgICBwYWRkaW5nOiAwLjgxMjVyZW07IH1cbiAgICAuc2lnbmJvYXJkc19fZGVzYyBwIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gICAgLnNpZ25ib2FyZHNfX2Rlc2Mgc3BhbiB7XG4gICAgICBjb2xvcjogI2MzMjEyNjtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgLnNpZ25ib2FyZHNfX2V4YW1wbGVzLCAuc2lnbmJvYXJkc19fbGlzdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuc2lnbmJvYXJkc19fbGlzdCB7XG4gICAgcGFkZGluZzogMC42MjVyZW0gMHJlbTsgfVxuICAuc2lnbmJvYXJkc19fZXhhbXBsZXM6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAwO1xuICAgIHdpZHRoOiAyMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGxlZnQ6IDQwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2OyB9XG4gIC5zaWduYm9hcmRzX19pdGVtIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjkzNzVyZW07IH1cblxuLmxpZ2h0IHtcbiAgcGFkZGluZzogMC42MjVyZW0gMHJlbTsgfVxuICAubGlnaHRfX3BhbmVscyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC45Mzc1cmVtOyB9XG5cbi5wYW5lbHNfX3RpdGxlIHtcbiAgY29sb3I6ICM3NzdiOGU7IH1cblxuLnBhbmVsc19faW50cm8gc3BhbiB7XG4gIGNvbG9yOiAjYzMyMTI2O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG5cbi5wYW5lbHNfX2ludHJvIHAge1xuICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuXG4ucGFuZWxzX19pbmZvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIG1hcmdpbi1ib3R0b206IDAuMzEyNXJlbTsgfVxuICAucGFuZWxzX19pbmZvOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNDAlO1xuICAgIHRvcDogMzAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7IH1cblxuLnBhbmVsc19faW1nIHtcbiAgei1pbmRleDogNTsgfVxuXG4ucGFuZWxzX19leGFtcGxlcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfVxuXG4ubGV0dGVyc19faW50cm8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG5cbi5sZXR0ZXJzX19zdWJ0aXRsZSB7XG4gIGNvbG9yOiAjNzc3YjhlO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBwYWRkaW5nOiAwcmVtIDAuMzEyNXJlbTtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCByZWQ7IH1cblxuLmxldHRlcnNfX2ltZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBtYXJnaW4tYm90dG9tOiAwLjMxMjVyZW07XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5sZXR0ZXJzX19pbWc6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA4MCU7XG4gICAgdG9wOiAxMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMzsgfVxuXG4ubGV0dGVyc19fYmcge1xuICB6LWluZGV4OiA1OyB9XG5cbi5sZXR0ZXJzX19kZXNjIHNwYW4ge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogI2MzMjEyNjsgfVxuXG4ubmVvbiB7XG4gIG1hcmdpbi1ib3R0b206IDAuOTM3NXJlbTsgfVxuICAubmVvbl9fdGl0bGUge1xuICAgIGNvbG9yOiAjNzc3YjhlOyB9XG4gIC5uZW9uX19jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5uZW9uX19pbnRybyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcbiAgICBwYWRkaW5nOiAwLjkzNzVyZW0gMHJlbTsgfVxuICAgIC5uZW9uX19pbnRybyBzcGFuIHtcbiAgICAgIGNvbG9yOiAjYzMyMTI2O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAubmVvbl9faW1nIHtcbiAgICBtaW4taGVpZ2h0OiAxNi41NjI1cmVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSg4MSwgOTcsIDEyMCwgMC41KSAwJSwgcmdiYSg4MSwgOTcsIDEyMCwgMC41KSAxMDAlKSwgdXJsKFwiLi4vLi4vcGljdHVyZXMvbmVvbi1iZy5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7IH1cblxuLnN0ZWxlIHtcbiAgcGFkZGluZzogMS4yNXJlbSAwcmVtOyB9XG4gIC5zdGVsZV9fdGl0bGUge1xuICAgIGNvbG9yOiAjNzc3YjhlOyB9XG4gIC5zdGVsZV9faW50cm8ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAzLjEyNXJlbTsgfVxuICAuc3RlbGVfX2Rlc2Mgc3BhbiB7XG4gICAgY29sb3I6ICNjMzIxMjY7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4uYXV0byB7XG4gIHBhZGRpbmc6IDAuOTM3NXJlbSAwcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWYzOyB9XG4gIC5hdXRvX190aXRsZSB7XG4gICAgY29sb3I6ICM3NzdiOGU7IH1cbiAgLmF1dG9fX2ludHJvIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjU2MjVyZW07IH1cbiAgICAuYXV0b19faW50cm8gcCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuICAgIC5hdXRvX19pbnRybyBzcGFuIHtcbiAgICAgIGNvbG9yOiAjYzMyMTI2O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4uY29udGFpbmVyX19hdXRvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG5cbi5kZXNpZ24ge1xuICBwYWRkaW5nOiAwLjYyNXJlbSAwcmVtOyB9XG4gIC5kZXNpZ25fX3RpdGxlIHtcbiAgICBjb2xvcjogIzc3N2I4ZTsgfVxuICAuZGVzaWduX19zdWJ0aXRsZSB7XG4gICAgY29sb3I6ICNjNDFmMjU7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsOyB9XG4gIC5kZXNpZ25fX2ltZyB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vLi4vcGljdHVyZXMvZGVzaWduLWJnLnBuZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIG1pbi1oZWlnaHQ6IDE1cmVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gIC5kZXNpZ25fX2ludHJvIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgbWFyZ2luLWJvdHRvbTogMC45Mzc1cmVtOyB9XG4gIC5kZXNpZ25fX3R5cGVzIHtcbiAgICBwYWRkaW5nOiAwcmVtIDAuNjI1cmVtOyB9XG4gIC5kZXNpZ25fX2l0ZW0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjI1cmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIC5kZXNpZ25fX2l0ZW0tLXNlY29uZDpiZWZvcmUge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGhlaWdodDogMXB4O1xuICAgICAgd2lkdGg6IDgzJTtcbiAgICAgIGJvcmRlci10b3A6IDFweCBkYXNoZWQgcmVkO1xuICAgICAgbGVmdDogMTElO1xuICAgICAgdG9wOiAtNSU7IH1cbiAgICAuZGVzaWduX19pdGVtLS10aGlyZDphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgaGVpZ2h0OiAyMDUlO1xuICAgICAgd2lkdGg6IDFweDtcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IGRhc2hlZCByZWQ7XG4gICAgICByaWdodDogMiU7XG4gICAgICB0b3A6IC0xMDAlOyB9XG4gICAgLmRlc2lnbl9faXRlbS0tZm91cnRoOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICB3aWR0aDogOTIlO1xuICAgICAgYm9yZGVyLXRvcDogMXB4IGRhc2hlZCByZWQ7XG4gICAgICByaWdodDogMyU7XG4gICAgICB0b3A6IC01JTsgfVxuICAgIC5kZXNpZ25fX2l0ZW0tLWZvdXJ0aDphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgaGVpZ2h0OiAyMCU7XG4gICAgICB3aWR0aDogMXB4O1xuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBkYXNoZWQgcmVkO1xuICAgICAgbGVmdDogNCU7XG4gICAgICB0b3A6IC00JTsgfVxuICAuZGVzaWduX19pbmZvIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuZGVzaWduX19kZXNjIHtcbiAgICBmbGV4OiAxO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cbiAgLmRlc2lnbl9faWNvbiB7XG4gICAgbWF4LXdpZHRoOiA4LjEyNXJlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNjI1cmVtO1xuICAgIGZsZXg6IDE7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIHBhZGRpbmc6IDAuMzEyNXJlbTsgfVxuICAgIC5kZXNpZ25fX2ljb24tLXJpZ2h0IHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwLjYyNXJlbTsgfVxuICAgIC5kZXNpZ25fX2ljb24tLWZpcnN0OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIjFcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB0b3A6IDglO1xuICAgICAgbGVmdDogMTMlOyB9XG4gICAgLmRlc2lnbl9faWNvbi0tZmlyc3Q6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiAxcHg7XG4gICAgICBoZWlnaHQ6IDIwJTtcbiAgICAgIGJvdHRvbTogLTUlO1xuICAgICAgbGVmdDogNTUlO1xuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBkYXNoZWQgcmVkOyB9XG4gICAgLmRlc2lnbl9faWNvbi0tZm91cnRoOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIjRcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB0b3A6IDglO1xuICAgICAgbGVmdDogMTMlOyB9XG4gICAgLmRlc2lnbl9faWNvbi0tc2Vjb25kOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIjJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB0b3A6IDglO1xuICAgICAgcmlnaHQ6IDE0JTsgfVxuICAgIC5kZXNpZ25fX2ljb24tLXRoaXJkOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIjNcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB0b3A6IDUlO1xuICAgICAgcmlnaHQ6IDE0JTsgfVxuXG4ucHJpbnQge1xuICBwYWRkaW5nOiAwLjYyNXJlbSAwcmVtOyB9XG4gIC5wcmludF9fdGl0bGUge1xuICAgIGNvbG9yOiAjNzc3YjhlO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gIC5wcmludF9fYmcge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uLy4uL3BpY3R1cmVzL3BvbHlncmFwaHktYmcucG5nXCIpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIG1pbi1oZWlnaHQ6IDEyLjVyZW07XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLnByaW50X19pbnRybyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG4gIC5wcmludF9fZGVzYyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMy4xMjVyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG4gICAgLnByaW50X19kZXNjIHAge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07IH1cbiAgLnByaW50X19tYWNoaW5lIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWYzO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAwLjVyZW0gMHJlbTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAucHJpbnRfX21hY2hpbmU6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBoZWlnaHQ6IDAuNjg3NXJlbTtcbiAgICAgIHdpZHRoOiAwLjY4NzVyZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgYm90dG9tOiAtMyU7XG4gICAgICB6LWluZGV4OiA1OyB9XG4gICAgLnByaW50X19tYWNoaW5lOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICB6LWluZGV4OiAwO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBoZWlnaHQ6IDNyZW07XG4gICAgICB3aWR0aDogMXB4O1xuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBkYXNoZWQgcmVkO1xuICAgICAgbGVmdDogNTElO1xuICAgICAgdG9wOiAxMDAlOyB9XG4gIC5wcmludF9fdHlwZXMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAwLjkzNzVyZW0gMHJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2OyB9XG4gICAgLnByaW50X190eXBlczpiZWZvcmUge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGhlaWdodDogMXB4O1xuICAgICAgd2lkdGg6IDAuOTM3NXJlbTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XG4gICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmVkO1xuICAgICAgbGVmdDogNDklO1xuICAgICAgdG9wOiAtMSU7XG4gICAgICB6LWluZGV4OiA1OyB9XG4gICAgLnByaW50X190eXBlcyBwIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEuMjVyZW07IH1cbiAgICAgIC5wcmludF9fdHlwZXMgcDpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAgIC5wcmludF9fdHlwZXMgc3BhbiB7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgY29sb3I6ICNjMzI0MmE7IH1cblxuLnNpbGsge1xuICBwYWRkaW5nOiAwLjYyNXJlbSAwcmVtOyB9XG4gIC5zaWxrX190aXRsZSB7XG4gICAgY29sb3I6ICM3NzdiOGU7IH1cbiAgLnNpbGtfX2ludHJvIHtcbiAgICBtaW4taGVpZ2h0OiAyMC41cmVtOyB9XG4gIC5zaWxrX19pbWFnZXMge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSg4MSwgOTcsIDEyMCwgMC41KSAwJSwgcmdiYSg4MSwgOTcsIDEyMCwgMC41KSAxMDAlKSwgdXJsKFwiLi4vLi4vcGljdHVyZXMvc2lsay5wbmdcIik7XG4gICAgaGVpZ2h0OiA2MCU7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogMTMuNDM3NXJlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLnNpbGtfX2V4YW1wbGVzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IC0zMCU7IH1cbiAgICAuc2lsa19fZXhhbXBsZXMtYmcge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxLjI1cmVtOyB9XG4gICAgICAuc2lsa19fZXhhbXBsZXMtYmc6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAuc2lsa19fZGVzYyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcbiAgICBwYWRkaW5nOiAwLjkzNzVyZW0gMHJlbTsgfVxuICAgIC5zaWxrX19kZXNjIHNwYW4ge1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGNvbG9yOiAjYzMyNDJhOyB9XG4gICAgLnNpbGtfX2Rlc2MgcCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuICAgICAgLnNpbGtfX2Rlc2MgcDpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMHJlbTsgfVxuXG4uZW1ib3NzaW5nIHtcbiAgcGFkZGluZzogMC42MjVyZW0gMHJlbTsgfVxuICAuZW1ib3NzaW5nX190aXRsZSB7XG4gICAgY29sb3I6ICM3NzdiOGU7IH1cbiAgLmVtYm9zc2luZ19faW50cm8ge1xuICAgIG1pbi1oZWlnaHQ6IDIwLjVyZW07IH1cbiAgLmVtYm9zc2luZ19faW1hZ2VzIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoODEsIDk3LCAxMjAsIDAuNSkgMCUsIHJnYmEoODEsIDk3LCAxMjAsIDAuNSkgMTAwJSksIHVybChcIi4uLy4uL3BpY3R1cmVzL2VtYm9zc2luZy1iZy5wbmdcIik7XG4gICAgaGVpZ2h0OiA2MCU7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogMTMuNDM3NXJlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmVtYm9zc2luZ19fZXhhbXBsZXMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogLTMwJTsgfVxuICAgIC5lbWJvc3NpbmdfX2V4YW1wbGVzLWJnIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMS4yNXJlbTsgfVxuICAgICAgLmVtYm9zc2luZ19fZXhhbXBsZXMtYmc6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAuZW1ib3NzaW5nX19kZXNjIHNwYW4ge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgY29sb3I6ICNjMzI0MmE7IH1cbiAgLmVtYm9zc2luZ19fZGVzYyAuZW1ib3NzaW5nX190eXBlIHtcbiAgICBjb2xvcjogIzRlNGU0ZTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDtcbiAgICBmb250LXdlaWdodDogYm9sZDsgfVxuICAuZW1ib3NzaW5nX19kZXNjIHAge1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG4gICAgLmVtYm9zc2luZ19fZGVzYyBwOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMHJlbTsgfVxuICAuZW1ib3NzaW5nX19pdGVtIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuICAgIC5lbWJvc3NpbmdfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwcmVtOyB9XG5cbi5lbWJyb2lkZXJ5IHtcbiAgcGFkZGluZzogMC42MjVyZW0gMHJlbTsgfVxuICAuZW1icm9pZGVyeV9faW50cm8ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OyB9XG4gICAgLmVtYnJvaWRlcnlfX2ludHJvOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDYwJTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XG4gICAgICBsZWZ0OiAwJTtcbiAgICAgIHRvcDogMjAlO1xuICAgICAgei1pbmRleDogMDsgfVxuICAuZW1icm9pZGVyeV9faW1nIHtcbiAgICB6LWluZGV4OiAxMDsgfVxuICAuZW1icm9pZGVyeV9fZGVzYyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsgfVxuICAgIC5lbWJyb2lkZXJ5X19kZXNjIHAge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTsgfVxuICAgICAgLmVtYnJvaWRlcnlfX2Rlc2MgcDpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAgIC5lbWJyb2lkZXJ5X19kZXNjIHNwYW4ge1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGNvbG9yOiAjYzMyNDJhOyB9XG4gIC5lbWJyb2lkZXJ5X190aXRsZSB7XG4gICAgY29sb3I6ICM3NzdiOGU7XG4gICAgcGFkZGluZzogMHJlbSAwLjMxMjVyZW07XG4gICAgZm9udC1zaXplOiAxLjE4NzVyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLmVtYnJvaWRlcnlfX3RpdGxlOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDFweDtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGxlZnQ6IDAlO1xuICAgICAgdG9wOiAwJTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjMzI0MmE7IH1cblxuLmVuZ3JhdmluZyB7XG4gIHBhZGRpbmc6IDAuNjI1cmVtIDByZW07IH1cbiAgLmVuZ3JhdmluZ19fdGl0bGUge1xuICAgIGNvbG9yOiAjRkZGO1xuICAgIHRleHQtc2hhZG93OiAwcmVtIDAuMTI1cmVtIDAuMTI1cmVtIHJnYmEoMCwgMiwgNCwgMC43NSk7IH1cbiAgLmVuZ3JhdmluZ19faW50cm8ge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSg4MSwgOTcsIDEyMCwgMC41KSAwJSwgcmdiYSg4MSwgOTcsIDEyMCwgMC41KSAxMDAlKSwgdXJsKFwiLi4vLi4vcGljdHVyZXMvZW5ncmF2aW5nLWJnLnBuZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogMTQuMzc1cmVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEuMjVyZW07IH1cbiAgLmVuZ3JhdmluZ19fZGVzYyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcbiAgICBwYWRkaW5nOiAwLjkzNzVyZW0gMHJlbTsgfVxuICAgIC5lbmdyYXZpbmdfX2Rlc2Mgc3BhbiB7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgY29sb3I6ICNjMzI0MmE7IH1cbiAgICAuZW5ncmF2aW5nX19kZXNjIHAge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07IH1cbiAgICAgIC5lbmdyYXZpbmdfX2Rlc2MgcDpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMHJlbTsgfVxuXG4udGhlcm1vIHtcbiAgcGFkZGluZzogMC42MjVyZW0gMHJlbTsgfVxuICAudGhlcm1vX190aXRsZSB7XG4gICAgY29sb3I6ICNGRkY7XG4gICAgdGV4dC1zaGFkb3c6IDByZW0gMC4xMjVyZW0gMC4xMjVyZW0gcmdiYSgwLCAyLCA0LCAwLjc1KTsgfVxuICAudGhlcm1vX19pbnRybyB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vLi4vcGljdHVyZXMvdGhlcm1vLWJnLnBuZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogMTQuMzc1cmVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEuMjVyZW07IH1cbiAgLnRoZXJtb19fZGVzYyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcbiAgICBwYWRkaW5nOiAwLjYyNXJlbSAwcmVtOyB9XG4gICAgLnRoZXJtb19fZGVzYyBzcGFuIHtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBjb2xvcjogI2MzMjQyYTsgfVxuICAgIC50aGVybW9fX2Rlc2MgcCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuICAgICAgLnRoZXJtb19fZGVzYyBwOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwcmVtOyB9XG5cbi5zb3V2ZW5pciB7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgLnNvdXZlbmlyX19waWN0dXJlIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDEzLjc1cmVtO1xuICAgIG1hcmdpbi10b3A6IDEuODc1cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDMuMTI1cmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuc291dmVuaXJfX2ltYWdlMSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy9zb3V2X19iZzMucG5nXCIpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciByaWdodDtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBvcGFjaXR5OiAwLjU7IH1cbiAgLnNvdXZlbmlyX19pbWFnZTIge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZWJlZDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuc291dmVuaXJfX2ltYWdlMjo6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvc291dl9fYmcxLnBuZ1wiKTtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiA5LjM3NXJlbTtcbiAgICAgIGhlaWdodDogMTIuNXJlbTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDMwJTtcbiAgICAgIHotaW5kZXg6IDU7IH1cbiAgICAuc291dmVuaXJfX2ltYWdlMjo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuL3BpY3R1cmVzL3NvdXZfX2JnMi5wbmdcIik7XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICAgIHdpZHRoOiA4LjEyNXJlbTtcbiAgICAgIGhlaWdodDogMTAuNjI1cmVtO1xuICAgICAgdG9wOiAyMCU7XG4gICAgICBsZWZ0OiAtMjAlO1xuICAgICAgei1pbmRleDogMTA7IH1cbiAgLnNvdXZlbmlyX19saXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMTA7XG4gICAgdG9wOiA5MCU7XG4gICAgbGVmdDogMTAlOyB9XG4gIC5zb3V2ZW5pcl9faXRlbSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIG1hcmdpbjogMCAwLjkzNzVyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLnNvdXZlbmlyX19pdGVtOjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDMuMTI1cmVtO1xuICAgICAgaGVpZ2h0OiAzLjEyNXJlbTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNjQ0NGE7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IC0wLjEyNXJlbTtcbiAgICAgIGxlZnQ6IC0wLjI1cmVtO1xuICAgICAgei1pbmRleDogLTE7IH1cbiAgLnNvdXZlbmlyX19pY29uIHtcbiAgICB3aWR0aDogMi41cmVtO1xuICAgIGhlaWdodDogMi41cmVtO1xuICAgIGZpbGw6IHRyYW5zcGFyZW50O1xuICAgIHN0cm9rZTogd2hpdGU7XG4gICAgc3Ryb2tlLXdpZHRoOiAwLjE4NzVyZW07IH1cbiAgLnNvdXZlbmlyX19kZXNjIHtcbiAgICBjb2xvcjogIzZhNmE2YTtcbiAgICBmb250LXNpemU6IDAuOTM3NXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU2MjVyZW07IH1cbiAgLnNvdXZlbmlyX190aXRsZSB7XG4gICAgY29sb3I6ICM3NzdiOGU7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgcGFkZGluZzogMS4yNXJlbSAwIDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLnNvdXZlbmlyX190aXRsZTo6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICB3aWR0aDogMC4xMjVyZW07XG4gICAgICBoZWlnaHQ6IDEuMjVyZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWY3MTc1O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICBsZWZ0OiAyNSU7IH1cbiAgLnNvdXZlbmlyX190ZXh0IHtcbiAgICBjb2xvcjogIzRlNGU0ZTtcbiAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtOyB9XG5cbi5zeW1ib2xzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cbiAgLnN5bWJvbHNfX2ltYWdlIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4taGVpZ2h0OiAxNS42MjVyZW07XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDExNiwgMTI4LCAxNDUsIDAuNSkgMCUsIHJnYmEoMTE2LCAxMjgsIDE0NSwgMC41KSAxMDAlKSwgdXJsKFwiLi9waWN0dXJlcy9zeW1ib2xfYmcucG5nXCIpO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAuc3ltYm9sc19fdGl0bGUge1xuICAgIHRleHQtc2hhZG93OiAxcHggMXB4IDFweCByZ2JhKDAsIDEsIDMsIDAuNzUpO1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGZvbnQtc2l6ZTogMS40Mzc1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7IH1cbiAgLnN5bWJvbHNfX2NvbnRhaW5lciB7XG4gICAgbWFyZ2luOiAwLjkzNzVyZW0gMDsgfVxuICAuc3ltYm9sc19fdGV4dCB7XG4gICAgY29sb3I6ICM0ZTRlNGU7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTsgfVxuICAuc3ltYm9sc19fbGlzdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDE0LjM3NXJlbTtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KSAwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpIDEwMCUpOyB9XG4gIC5zeW1ib2xzX19pdGVtIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDE0LjM3NXJlbTtcbiAgICBwYWRkaW5nOiAwLjYyNXJlbSAwOyB9XG4gICAgLnN5bWJvbHNfX2l0ZW06bnRoLWNoaWxkKDFuKSB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLnN5bWJvbHNfX2l0ZW06Zmlyc3QtY2hpbGQge1xuICAgICAgZGlzcGxheTogZmxleDsgfVxuICAuc3ltYm9sc19fcGljIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgICBvYmplY3QtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7IH1cblxuLndhdGNoX190aXRsZSB7XG4gIGNvbG9yOiAjNzc3YjhlO1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHBhZGRpbmc6IDEuMjVyZW0gMCAwLjYyNXJlbTsgfVxuXG4ud2F0Y2hfX3N1YnRpdGxlIHtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBjb2xvcjogI2M1MjIyODtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4ud2F0Y2hfX3RleHQge1xuICBjb2xvcjogIzRlNGU0ZTtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBtYXJnaW4tYm90dG9tOiAwLjkzNzVyZW07XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7IH1cblxuLndhdGNoX19pbWcge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuL3BpY3R1cmVzL3dhdGNoX2JnLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMHJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjsgfVxuXG4ucHJvbW8tZm9ybV9faW1hZ2Uge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuL3BpY3R1cmVzL3Byb21vX2JnLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTMuMTI1cmVtO1xuICBtYXJnaW46IDAuOTM3NXJlbSAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi5wcm9tby1mb3JtX190aXRsZSB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi1yaWdodDogMS4yNXJlbTsgfVxuXG4ucHJvbW8tZm9ybV9fc3VidGl0bGUge1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGNvbG9yOiAjYzUyMjI4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG5cbi5wcm9tby1mb3JtX19zdWJ0aXRsZTIge1xuICBjb2xvcjogIzZhNmE2YTtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW46IDEuMjVyZW0gMCAwLjYyNXJlbTsgfVxuXG4ucHJvbW8tZm9ybV9fdGV4dCB7XG4gIGNvbG9yOiAjNGU0ZTRlO1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtO1xuICB0ZXh0LWFsaWduOiBqdXN0aWZ5OyB9XG5cbi5wcm9tby1mb3JtX19saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNy41cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2OyB9XG5cbi5wcm9tby1mb3JtX19pdGVtIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuICAucHJvbW8tZm9ybV9faXRlbTpudGgtY2hpbGQoMW4pIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5wcm9tby1mb3JtX19pdGVtOmZpcnN0LWNoaWxkIHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG5cbi5wcm9tby1mb3JtX19waWMge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyOyB9XG5cbi5ob3JlY2FfX2ltZyB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSgxMzgsIDE1NywgMTgxLCAwLjUpIDAlLCByZ2JhKDEzOCwgMTU3LCAxODEsIDAuNSkgMTAwJSksIHVybChcIi4vcGljdHVyZXMvaG9yZWNhX2JnLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTYuODc1cmVtO1xuICBtYXJnaW46IDAuOTM3NXJlbSAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi5ob3JlY2FfX3RpdGxlIHtcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IHJnYmEoMCwgMSwgMywgMC43NSk7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi1yaWdodDogMS44NzVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaG9yZWNhX190aXRsZTo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMC4zMTI1cmVtO1xuICAgIGhlaWdodDogMS41NjI1cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNjQ0NGE7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMjAlO1xuICAgIHJpZ2h0OiAtOCU7IH1cblxuLmhvcmVjYV9fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgbWFyZ2luLXJpZ2h0OiAxLjg3NXJlbTsgfVxuXG4uaG9yZWNhX19pdGVtIHtcbiAgY29sb3I6ICNmNmY2ZjY7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5ob3JlY2FfX2l0ZW06OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDAuNjI1cmVtO1xuICAgIGhlaWdodDogMC42MjVyZW07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNjQ0NGE7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMC4zMTI1cmVtO1xuICAgIHJpZ2h0OiAtMC45Mzc1cmVtOyB9XG5cbi5ob3JlY2FfX3N1YnRpdGxlIHtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBjb2xvcjogI2M1MjIyODtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4uaG9yZWNhX190ZXh0IHtcbiAgY29sb3I6ICM0ZTRlNGU7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luLWJvdHRvbTogMC45Mzc1cmVtO1xuICB0ZXh0LWFsaWduOiBqdXN0aWZ5OyB9XG5cbi5wcmVzcy1wcm9kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWVmMzsgfVxuICAucHJlc3MtcHJvZF9faW1nIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuL3BpY3R1cmVzL3ByZXNzX2JnLnBuZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgcmlnaHQ7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxOC43NXJlbTsgfVxuICAucHJlc3MtcHJvZF9fc3VidGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGNvbG9yOiAjYzUyMjI4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgLnByZXNzLXByb2RfX3RleHQge1xuICAgIGNvbG9yOiAjNGU0ZTRlO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIG1hcmdpbi1ib3R0b206IDAuOTM3NXJlbTtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5OyB9XG4gIC5wcmVzcy1wcm9kX19jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDEuMjVyZW0gMDsgfVxuXG4uY2lyY2xlX19pbWcge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuL3BpY3R1cmVzL2NpcmNsZS5wbmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTguNzVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAxLjI1cmVtOyB9XG4gIC5jaXJjbGVfX2ltZzo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDIwcmVtO1xuICAgIGhlaWdodDogMjByZW07XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2VmNzE3NTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogLTAuNjI1cmVtO1xuICAgIGxlZnQ6IDE1JTsgfVxuXG4uY2lyY2xlX19saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG5cbi5jaXJjbGVfX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjb2xvcjogIzZhNmE2YTtcbiAgZm9udC1zaXplOiAxLjE4NzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxldHRlci1zcGFjaW5nOiAtMHJlbTtcbiAgbWFyZ2luOiAwLjkzNzVyZW0gMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5jaXJjbGVfX2l0ZW06OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDAuNjI1cmVtO1xuICAgIGhlaWdodDogMC42MjVyZW07XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2VmNzE3NTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMC4zNzVyZW07XG4gICAgcmlnaHQ6IC0xLjI1cmVtOyB9XG4iLCJAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUFsZWdyZXlhK1NhbnM6MzAwLDQwMCw1MDAsNzAwLDgwMCZkaXNwbGF5PXN3YXAmc3Vic2V0PWN5cmlsbGljJyk7XHJcblxyXG5AaW1wb3J0ICcuL2Jhc2UvbWl4aW5zJywgJy4vYmFzZS92YXJpYWJsZXMnLCAnLi9iYXNlL2xheW91dCc7XHJcbkBpbXBvcnQgJy4vYmFzZS9idG5zLnNjc3MnO1xyXG5AaW1wb3J0ICcuL2Jsb2Nrcy9mb290ZXIuc2Nzcyc7XHJcbkBpbXBvcnQgJy4vYmxvY2tzL3NwbGFzaC5zY3NzJztcclxuQGltcG9ydCAnLi9ibG9ja3MvcG9wdXAuc2Nzcyc7XHJcbkBpbXBvcnQgJy4vYmxvY2tzL2FkdmFudGFnZXMuc2Nzcyc7XHJcbkBpbXBvcnQgJy4vYmxvY2tzL21haW4tbWVudS5zY3NzJztcclxuQGltcG9ydCAnLi9ibG9ja3Mvc29jaWFscy5zY3NzJztcclxuQGltcG9ydCAnLi9ibG9ja3MvaGFtYnVyZ2VyLW1lbnUuc2Nzcyc7XHJcblxyXG5AaW1wb3J0ICcuL2Fib3V0L2Fib3V0LnNjc3MnO1xyXG5AaW1wb3J0ICcuL2Fib3V0L3Byb2Nlc3Muc2Nzcyc7XHJcbkBpbXBvcnQgJy4vYWJvdXQvZ2VvLnNjc3MnO1xyXG5AaW1wb3J0ICcuL2Fib3V0L2NhcmVlci5zY3NzJztcclxuQGltcG9ydCAnLi9hYm91dC92YWNhbmNpZXMuc2Nzcyc7XHJcbkBpbXBvcnQgJy4vcG9zbWEvcG9zbWEuc2Nzcyc7XHJcbkBpbXBvcnQgJy4vc2FsZXMtZGVjb3JhdGlvbi9zYWxlcy1kZWNvcmF0aW9uLnNjc3MnO1xyXG5AaW1wb3J0ICcuL3Byb2R1Y3RzL3Byb2R1Y3RzLnNjc3MnO1xyXG5AaW1wb3J0ICcuL3Byb2R1Y3RzL2NhdGFsb2cuc2Nzcyc7XHJcbkBpbXBvcnQgJy4vcHJvZHVjdHMvb3JnYW5pemVycy5zY3NzJztcclxuXHJcbkBpbXBvcnQgJy4vc3RhbmRzL3Bvcy5zY3NzJztcclxuQGltcG9ydCAnLi9zdGFuZHMvZXhoaWJpdGlvbi5zY3NzJztcclxuQGltcG9ydCAnLi9zdGFuZHMvcmVjZXB0aW9uLnNjc3MnO1xyXG5cclxuQGltcG9ydCAnLi9hZHMvYWRzLnNjc3MnO1xyXG5AaW1wb3J0ICcuL2Fkcy9yb29mLnNjc3MnO1xyXG5AaW1wb3J0ICcuL2Fkcy9zaWduYm9hcmRzLnNjc3MnO1xyXG5AaW1wb3J0ICcuL2Fkcy9saWdodC5zY3NzJztcclxuQGltcG9ydCAnLi9hZHMvbmVvbi5zY3NzJztcclxuQGltcG9ydCAnLi9hZHMvc3RlbGUuc2Nzcyc7XHJcbkBpbXBvcnQgJy4vYWRzL2F1dG8uc2Nzcyc7XHJcblxyXG5AaW1wb3J0ICcuL2Rlc2lnbi9kZXNpZ24uc2Nzcyc7XHJcblxyXG5AaW1wb3J0ICcuL3ByaW50L3ByaW50LnNjc3MnO1xyXG5AaW1wb3J0ICcuL3ByaW50L3NpbGsuc2Nzcyc7XHJcbkBpbXBvcnQgJy4vcHJpbnQvZW1ib3NzaW5nLnNjc3MnO1xyXG5AaW1wb3J0ICcuL3ByaW50L2VtYnJvaWRlcnkuc2Nzcyc7XHJcbkBpbXBvcnQgJy4vcHJpbnQvZW5ncmF2aW5nLnNjc3MnO1xyXG5AaW1wb3J0ICcuL3ByaW50L3RoZXJtby5zY3NzJztcclxuXHJcbkBpbXBvcnQgJy4vc291dmVuaXJzL3NvdXZlbmlycy5zY3NzJztcclxuXHJcbiIsIi8qKiBWQVJJQUJMRVNcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbi8qKiBSRVNFVCBBTkQgTEFZT1VUXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4uYngtd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTogNjBweDtcbiAgcGFkZGluZzogMDtcbiAgKnpvb206IDE7XG4gIC1tcy10b3VjaC1hY3Rpb246IHBhbi15O1xuICB0b3VjaC1hY3Rpb246IHBhbi15O1xufVxuLmJ4LXdyYXBwZXIgaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5ieHNsaWRlciB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgLypmaXggZmxpY2tlcmluZyB3aGVuIHVzZWQgYmFja2dyb3VuZC1pbWFnZSBpbnN0ZWFkIG9mIDxpbWc+IChvbiBDaHJvbWUpKi9cbiAgLXdlYmtpdC1wZXJzcGVjdGl2ZTogMTAwMDtcbn1cbnVsLmJ4c2xpZGVyIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cbi5ieC12aWV3cG9ydCB7XG4gIC8qIGZpeCBvdGhlciBlbGVtZW50cyBvbiB0aGUgcGFnZSBtb3ZpbmcgKGluIENocm9tZSkgKi9cbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG59XG4vKiogVEhFTUVcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbi5ieC13cmFwcGVyIHtcbiAgLW1vei1ib3gtc2hhZG93OiAwIDAgNXB4ICNjY2M7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAwIDVweCAjY2NjO1xuICBib3gtc2hhZG93OiAwIDAgNXB4ICNjY2M7XG4gIGJvcmRlcjogNXB4IHNvbGlkICNmZmY7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG4uYngtd3JhcHBlciAuYngtcGFnZXIsXG4uYngtd3JhcHBlciAuYngtY29udHJvbHMtYXV0byB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtMzBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG4vKiBMT0FERVIgKi9cbi5ieC13cmFwcGVyIC5ieC1sb2FkaW5nIHtcbiAgbWluLWhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZDogdXJsKCdpbWFnZXMvYnhfbG9hZGVyLmdpZicpIGNlbnRlciBjZW50ZXIgbm8tcmVwZWF0ICNmZmZmZmY7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAyMDAwO1xufVxuLyogUEFHRVIgKi9cbi5ieC13cmFwcGVyIC5ieC1wYWdlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAuODVlbTtcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICM2NjY7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xufVxuLmJ4LXdyYXBwZXIgLmJ4LXBhZ2VyLmJ4LWRlZmF1bHQtcGFnZXIgYSB7XG4gIGJhY2tncm91bmQ6ICM2NjY7XG4gIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwcHg7XG4gIGhlaWdodDogMTBweDtcbiAgbWFyZ2luOiAwIDVweDtcbiAgb3V0bGluZTogMDtcbiAgLW1vei1ib3JkZXItcmFkaXVzOiA1cHg7XG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG4uYngtd3JhcHBlciAuYngtcGFnZXIuYngtZGVmYXVsdC1wYWdlciBhOmhvdmVyLFxuLmJ4LXdyYXBwZXIgLmJ4LXBhZ2VyLmJ4LWRlZmF1bHQtcGFnZXIgYS5hY3RpdmUsXG4uYngtd3JhcHBlciAuYngtcGFnZXIuYngtZGVmYXVsdC1wYWdlciBhOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogIzAwMDtcbn1cbi5ieC13cmFwcGVyIC5ieC1wYWdlci1pdGVtLFxuLmJ4LXdyYXBwZXIgLmJ4LWNvbnRyb2xzLWF1dG8gLmJ4LWNvbnRyb2xzLWF1dG8taXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgKnpvb206IDE7XG4gICpkaXNwbGF5OiBpbmxpbmU7XG59XG4uYngtd3JhcHBlciAuYngtcGFnZXItaXRlbSB7XG4gIGZvbnQtc2l6ZTogMDtcbiAgbGluZS1oZWlnaHQ6IDA7XG59XG4vKiBESVJFQ1RJT04gQ09OVFJPTFMgKE5FWFQgLyBQUkVWKSAqL1xuLmJ4LXdyYXBwZXIgLmJ4LXByZXYge1xuICBsZWZ0OiAxMHB4O1xuICBiYWNrZ3JvdW5kOiB1cmwoJ2ltYWdlcy9jb250cm9scy5wbmcnKSBuby1yZXBlYXQgMCAtMzJweDtcbn1cbi5ieC13cmFwcGVyIC5ieC1wcmV2OmhvdmVyLFxuLmJ4LXdyYXBwZXIgLmJ4LXByZXY6Zm9jdXMge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDA7XG59XG4uYngtd3JhcHBlciAuYngtbmV4dCB7XG4gIHJpZ2h0OiAxMHB4O1xuICBiYWNrZ3JvdW5kOiB1cmwoJ2ltYWdlcy9jb250cm9scy5wbmcnKSBuby1yZXBlYXQgLTQzcHggLTMycHg7XG59XG4uYngtd3JhcHBlciAuYngtbmV4dDpob3Zlcixcbi5ieC13cmFwcGVyIC5ieC1uZXh0OmZvY3VzIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQzcHggMDtcbn1cbi5ieC13cmFwcGVyIC5ieC1jb250cm9scy1kaXJlY3Rpb24gYSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIG1hcmdpbi10b3A6IC0xNnB4O1xuICBvdXRsaW5lOiAwO1xuICB3aWR0aDogMzJweDtcbiAgaGVpZ2h0OiAzMnB4O1xuICB0ZXh0LWluZGVudDogLTk5OTlweDtcbiAgei1pbmRleDogOTk5OTtcbn1cbi5ieC13cmFwcGVyIC5ieC1jb250cm9scy1kaXJlY3Rpb24gYS5kaXNhYmxlZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4vKiBBVVRPIENPTlRST0xTIChTVEFSVCAvIFNUT1ApICovXG4uYngtd3JhcHBlciAuYngtY29udHJvbHMtYXV0byB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5ieC13cmFwcGVyIC5ieC1jb250cm9scy1hdXRvIC5ieC1zdGFydCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWluZGVudDogLTk5OTlweDtcbiAgd2lkdGg6IDEwcHg7XG4gIGhlaWdodDogMTFweDtcbiAgb3V0bGluZTogMDtcbiAgYmFja2dyb3VuZDogdXJsKCdpbWFnZXMvY29udHJvbHMucG5nJykgLTg2cHggLTExcHggbm8tcmVwZWF0O1xuICBtYXJnaW46IDAgM3B4O1xufVxuLmJ4LXdyYXBwZXIgLmJ4LWNvbnRyb2xzLWF1dG8gLmJ4LXN0YXJ0OmhvdmVyLFxuLmJ4LXdyYXBwZXIgLmJ4LWNvbnRyb2xzLWF1dG8gLmJ4LXN0YXJ0LmFjdGl2ZSxcbi5ieC13cmFwcGVyIC5ieC1jb250cm9scy1hdXRvIC5ieC1zdGFydDpmb2N1cyB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC04NnB4IDA7XG59XG4uYngtd3JhcHBlciAuYngtY29udHJvbHMtYXV0byAuYngtc3RvcCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWluZGVudDogLTk5OTlweDtcbiAgd2lkdGg6IDlweDtcbiAgaGVpZ2h0OiAxMXB4O1xuICBvdXRsaW5lOiAwO1xuICBiYWNrZ3JvdW5kOiB1cmwoJ2ltYWdlcy9jb250cm9scy5wbmcnKSAtODZweCAtNDRweCBuby1yZXBlYXQ7XG4gIG1hcmdpbjogMCAzcHg7XG59XG4uYngtd3JhcHBlciAuYngtY29udHJvbHMtYXV0byAuYngtc3RvcDpob3Zlcixcbi5ieC13cmFwcGVyIC5ieC1jb250cm9scy1hdXRvIC5ieC1zdG9wLmFjdGl2ZSxcbi5ieC13cmFwcGVyIC5ieC1jb250cm9scy1hdXRvIC5ieC1zdG9wOmZvY3VzIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTg2cHggLTMzcHg7XG59XG4vKiBQQUdFUiBXSVRIIEFVVE8tQ09OVFJPTFMgSFlCUklEIExBWU9VVCAqL1xuLmJ4LXdyYXBwZXIgLmJ4LWNvbnRyb2xzLmJ4LWhhcy1jb250cm9scy1hdXRvLmJ4LWhhcy1wYWdlciAuYngtcGFnZXIge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB3aWR0aDogODAlO1xufVxuLmJ4LXdyYXBwZXIgLmJ4LWNvbnRyb2xzLmJ4LWhhcy1jb250cm9scy1hdXRvLmJ4LWhhcy1wYWdlciAuYngtY29udHJvbHMtYXV0byB7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogMzVweDtcbn1cbi8qIElNQUdFIENBUFRJT05TICovXG4uYngtd3JhcHBlciAuYngtY2FwdGlvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kOiAjNjY2O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDgwLCA4MCwgODAsIDAuNzUpO1xuICB3aWR0aDogMTAwJTtcbn1cbi5ieC13cmFwcGVyIC5ieC1jYXB0aW9uIHNwYW4ge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAuODVlbTtcbiAgcGFkZGluZzogMTBweDtcbn1cbiIsIi8qQGZ1bmN0aW9uIHJlbSgkcHgpIHtcclxuICAgIEByZXR1cm4gJHB4IC8gMTZweCArIDByZW07IFxyXG59XHJcbiovXHJcblxyXG5cclxuQG1peGluIHRhYmxldHMge1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHRhYmxldHMpIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbkBtaXhpbiBwaG9uZXMge1xyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHBob25lcykge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59IiwiaHRtbCB7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG5cclxuICBAaW5jbHVkZSB0YWJsZXRzIHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICB9XHJcblxyXG4gIEBpbmNsdWRlIHBob25lcyB7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgfVxyXG59XHJcblxyXG5odG1sLFxyXG5ib2R5IHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8gQ29uZGVuc2VkJywgc2Fucy1zZXJpZjtcclxuICBsaW5lLWhlaWdodDogMS40MjtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi53cmFwcGVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgLyptYXgtd2lkdGg6IDk0MHB4ICsgMjBweDsgKi9cclxuICAvL21pbi1oZWlnaHQ6IDEwMCU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5tYWluY29udGVudCB7XHJcbiAgZmxleDogMTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAvL3RyYW5zZm9ybTogdHJhbnNsYXRlWSgpO1xyXG5cclxufVxyXG5cclxuXHJcbioge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbnVsLFxyXG5waWN0dXJlLFxyXG5wIHtcclxuICBwYWRkaW5nOiAwO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxudWwgbGkge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuYSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiBpbmhlcml0O1xyXG5cclxufVxyXG5cclxuaDEsXHJcbmgyLFxyXG5oMyxcclxuaDQsXHJcbmg1LFxyXG5oNiB7XHJcbiAgbWFyZ2luLXRvcDogMDtcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBib3JkZXItc3BhY2luZzogMDtcclxufVxyXG5cclxuLnRpdGxlIHtcclxuICBmb250LXNpemU6IDQ4cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgY29sb3I6IGluaGVyaXQ7XHJcbn1cclxuXHJcbi5zZWN0aW9uIHtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gIG1pbi1oZWlnaHQ6IDI1MHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbiAgQGluY2x1ZGUgcGhvbmVzIHtcclxuICAgIG1pbi1oZWlnaHQ6IGluaXRpYWw7XHJcbiAgfVxyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuICAvKiAgbWF4LXdpZHRoOiA5NDBweDsgKi9cclxuICB3aWR0aDogOTUlO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICBAaW5jbHVkZSBwaG9uZXMge1xyXG4gICAgaGVpZ2h0OiBpbml0aWFsO1xyXG4gIH1cclxuXHJcblxyXG59XHJcblxyXG4qIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5cclxuLnRpdGxlIHtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgY29sb3I6IGluaGVyaXQ7XHJcbn1cclxuXHJcbi5zdWJ0aXRsZSB7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGNvbG9yOiAjNzc3YjhlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG5wIHtcclxuICBjb2xvcjogaW5oZXJpdDtcclxufSIsIi52YWNhbmN5LWJ0biB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZWNlZWYzO1xyXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWluLWhlaWdodDogNjVweDtcclxuXHJcbiAgJi0tYWN0aXZlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZjM7XHJcbiAgICBib3JkZXItdG9wOiA0cHggc29saWQgI2QxNDU0ZDtcclxuICAgIGNvbG9yOiAjZDE0NTRkO1xyXG4gIH1cclxufVxyXG5cclxuLmFycm93LWJ0biB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBwYWRkaW5nOiA1cHggNXB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogI2QxNDU0ZDtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgd2lkdGg6IDUwcHg7XHJcblxyXG4gICZfX2ljb24ge1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDY0cHg7XHJcbiAgICBmaWxsOiB0cmFuc3BhcmVudDtcclxuICAgIHN0cm9rZTogcmVkO1xyXG4gICAgZmlsbC1ydWxlOiBub256ZXJvO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi5idG4ge1xyXG4gIHBhZGRpbmc6IDIwcHggNDBweDtcclxuICBib3gtc2hhZG93OiAxcHggMnB4IDVweCAxcHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGxldHRlci1zcGFjaW5nOiAwLjEycHg7XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcblxyXG59IiwiZm9vdGVyIHtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIG1pbi1oZWlnaHQ6IDY1MHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcclxuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcclxuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIC13ZWJraXQtYm94LWFsaWduOiBzcGFjZS1iZXR3ZWVuO1xyXG4gIC1tcy1mbGV4LWFsaWduOiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGFsaWduLWl0ZW1zOiBzcGFjZS1iZXR3ZWVuO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBjb2xvcjogI2ZmZjtcclxuICBmb250LXNpemU6IDEycHg7XHJcblxyXG4gIEBpbmNsdWRlIHBob25lcyB7XHJcbiAgICBtaW4taGVpZ2h0OiBpbml0aWFsO1xyXG4gIH1cclxuXHJcblxyXG4gICZfX2NvbnRhaW5lciB7XHJcbiAgICBwYWRkaW5nOiAxNXB4IDI1cHg7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG59XHJcblxyXG5mb290ZXIgYSB7XHJcbiAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbmZvb3RlciBhOmFjdGl2ZSB7XHJcbiAgY29sb3I6ICNkMTQ1NGQ7XHJcbn1cclxuXHJcbmZvb3Rlcjo6YmVmb3JlIHtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoNzQsIDk1LCAxMjIsIDAuNyk7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB6LWluZGV4OiAtNTtcclxufVxyXG5cclxuZm9vdGVyOjphZnRlciB7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi9waWN0dXJlcy9mb290ZXItYmcucG5nXCIpO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wIGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIG9wYWNpdHk6IDE7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB6LWluZGV4OiAtMTA7XHJcbn1cclxuXHJcbi5lbnRyZXByZW5ldXIge1xyXG4gIC13ZWJraXQtYm94LWZsZXg6IDE7XHJcbiAgLW1zLWZsZXg6IDE7XHJcbiAgZmxleDogMTtcclxufVxyXG5cclxuLmNvbnRhY3RzIHtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5jb250YWN0c19fYWRkcmVzcyxcclxuLmNvbnRhY3RzX19waG9uZSxcclxuLmNvbnRhY3RzX19lbWFpbCxcclxuLmNvbnRhY3RzX19zY2hlZHVsZSB7XHJcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG59XHJcblxyXG4uY29udGFjdHNfX2NvbnRlbnQge1xyXG4gIC13ZWJraXQtYm94LWZsZXg6IDM7XHJcbiAgLW1zLWZsZXg6IDM7XHJcbiAgZmxleDogMztcclxuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbn1cclxuXHJcbi5jb250YWN0c19fc29jaWFscyB7XHJcbiAgLXdlYmtpdC1ib3gtZmxleDogMTtcclxuICAtbXMtZmxleDogMTtcclxuICBmbGV4OiAxO1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcclxuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcclxuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG5cclxuLnBob25lX19pbWcsXHJcbi5lbWFpbF9faW1nIHtcclxuICBoZWlnaHQ6IDI1cHg7XHJcbiAgd2lkdGg6IDI1cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4uYWRkcmVzc19faW1nIHtcclxuICBoZWlnaHQ6IDI1cHg7XHJcbiAgd2lkdGg6IDMwcHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4uc2NoZWR1bGVfX2ltZyB7XHJcbiAgaGVpZ2h0OiAyNXB4O1xyXG4gIHdpZHRoOiAzMHB4O1xyXG4gIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLnNjaGVkdWxlX19jb250ZW50IHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnNjaGVkdWxlX19saXN0IHtcclxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XHJcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XHJcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnNjaGVkdWxlX19pdGVtIHtcclxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uc2NoZWR1bGVfX2RheSB7XHJcbiAgd2lkdGg6IDI1JTtcclxufVxyXG5cclxuLmVudHJlcHJlbmV1ciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uZW50cmVwcmVuZXVyX19pbWcge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTFweDtcclxufVxyXG5cclxuLmVudHJlcHJlbmV1cl9fZGVzYyB7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIG1heC13aWR0aDogMzAwcHg7XHJcbn1cclxuXHJcbi5lbnRyZXByZW5ldXJfX2Rlc2Mgc3BhbiB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5lbnRyZXByZW5ldXJfX2lkLFxyXG4uZW50cmVwcmVuZXVyX19kZXNjLFxyXG4uZW50cmVwcmVuZXVyX19hZGRyZXNzLFxyXG4uZW50cmVwcmVuZXVyX19waG9uZSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLmlkX19saXN0LFxyXG4uZGV0YWlsc19fbGlzdCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5zb2NpYWxzX19saXN0IHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5lbnRyZXByZW5ldXJfX2ltZyB7XHJcbiAgaGVpZ2h0OiAzNnB4O1xyXG4gIHdpZHRoOiAzNnB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi8vIC5lbnRyZXByZW5ldXI6OmJlZm9yZSB7XHJcbi8vICAgY29udGVudDogXCJcIjtcclxuLy8gICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbi8vICAgd2lkdGg6IDQ1JTtcclxuLy8gICBoZWlnaHQ6IDE1cHg7XHJcbi8vICAgYm9yZGVyLXRvcDogMXB4IHdoaXRlIGRhc2hlZDtcclxuLy8gICBib3JkZXItcmlnaHQ6IDFweCB3aGl0ZSBkYXNoZWQ7XHJcbi8vICAgdG9wOiA5JTtcclxuLy8gICBsZWZ0OiAyNSU7XHJcbi8vIH1cclxuXHJcbi8vIC5lbnRyZXByZW5ldXI6OmFmdGVyIHtcclxuLy8gICBjb250ZW50OiBcIlwiO1xyXG4vLyAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuLy8gICB3aWR0aDogNDUlO1xyXG4vLyAgIGhlaWdodDogMTVweDtcclxuLy8gICBib3JkZXItdG9wOiAxcHggd2hpdGUgZGFzaGVkO1xyXG4vLyAgIGJvcmRlci1sZWZ0OiAxcHggd2hpdGUgZGFzaGVkO1xyXG4vLyAgIGJvdHRvbTogODclO1xyXG4vLyAgIHJpZ2h0OiAyNSU7XHJcbi8vIH0iLCJAaW5jbHVkZSBwaG9uZXMge1xyXG5cclxuICAuY29udGFpbmVyX19zcGxhc2gge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmOWZiO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuXHJcbiAgLmNvbnRhaW5lcl9fc3BsYXNoOjphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuL3BpY3R1cmVzL2JhbGwyLnBuZycpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDgwcHg7XHJcbiAgICBoZWlnaHQ6IDgwcHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDE1JTtcclxuICAgIGxlZnQ6IDAlO1xyXG4gIH1cclxuXHJcbiAgLnNwbGFzaF9faGVhZGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICB9XHJcblxyXG4gIC5zcGxhc2hfX2Rlc2Mge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuXHJcbiAgLnNwbGFzaF9fZGVzYzo6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi9waWN0dXJlcy9iYWxsMS5wbmcnKTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogLTEwJTtcclxuICAgIHJpZ2h0OiAtMTAlO1xyXG4gIH1cclxuXHJcbiAgLnNwbGFzaF9fY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIC5zcGxhc2hfX2h1Z2Uge1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICAvL2ZvbnQtZmFtaWx5OiBcIkludHJvIC0gQmxhY2tcIjtcclxuICAgIGZvbnQtc2l6ZTogNzlweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIH1cclxuXHJcbiAgLnNwbGFzaF9fYmlnIHtcclxuICAgIHRleHQtc2hhZG93OiAwIDAgMzJweCByZ2JhKDExOSwgMTIzLCAxNDIsIDAuMTYpO1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICBmb250LXNpemU6IDI1cHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG5cclxuICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gIH1cclxuXHJcbiAgLmxvZ29fX2ltZyB7XHJcbiAgICB3aWR0aDogMTA5cHg7XHJcbiAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgfVxyXG5cclxuICAuc3BsYXNoX19sb2dvIHtcclxuICAgIG1hcmdpbjogMTlweCAwIDE2cHg7XHJcbiAgfVxyXG5cclxuICAubG9nb19fcGljIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAuc3BsYXNoX19uYW1lIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIC5zcGxhc2hfX3RleHQge1xyXG4gICAgY29sb3I6ICNhM2E1YWY7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gIH1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbn1cclxuIiwiLnBvcHVwIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGJhY2tncm91bmQ6IHVybCgnLi9waWN0dXJlcy9iZzEucG5nJykgbm8tcmVwZWF0IGNlbnRlcjtcclxuICBvYmplY3QtZml0OiBjb3ZlcjtcclxuXHJcbn1cclxuXHJcbi5tZW51X19saXN0IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ubWVudV9faXRlbSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogMTJweCAwO1xyXG4gIGJvcmRlci1yaWdodDogNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIHRyYW5zaXRpb246IC4zcztcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzcxODA5NDtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjZmE0NTRiO1xyXG4gICAgYm9yZGVyLXJpZ2h0OiA1cHggc29saWQgI2ZhNDU0YjtcclxuICAgIH1cclxuICBcclxufVxyXG5cclxuLm1lbnVfX2ltZyB7XHJcbiAgd2lkdGg6IDQ2cHg7XHJcbiAgaGVpZ2h0OiA0NHB4O1xyXG4gIG1hcmdpbjogMTVweCA4MHB4O1xyXG59XHJcblxyXG4ubWVudV9fcGljIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5tZW51X190aXRsZSB7XHJcbiAgbWFyZ2luOiAxNXB4IDA7XHJcbn1cclxuXHJcbi5tZW51X19saW5rIHtcclxuICBmb250LXNpemU6IDEzcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6IGluaGVyaXQ7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuIiwiLmFkdmFudGFnZXMge1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4uYWR2YW50YWdlc19fbGlzdCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBwYWRkaW5nOiAyNXB4IDA7XHJcbn1cclxuXHJcbi5hZHZhbnRhZ2VfX2l0ZW0ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uYWR2YW50YWdlX19pbWcge1xyXG4gIHdpZHRoOiAyMnB4O1xyXG4gIGhlaWdodDogMjJweDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gIG1hcmdpbjogMjBweCAwO1xyXG5cclxuICAmOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIGhlaWdodDogMzBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmNmY2ZjY7XHJcbiAgICB0cmFuc2Zvcm06IHNrZXcoNDVkZWcsIC00NWRlZyk7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAtMjAlO1xyXG4gICAgdG9wOiAtMjAlO1xyXG4gIH1cclxuXHJcblxyXG59XHJcblxyXG4uYWR2YW50YWdlX19waWMge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmFkdmFudGFnZV9fdGl0bGUge1xyXG4gIGNvbG9yOiAjYzUyMjI4O1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBtYXJnaW46IDEwcHggMCAyMHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgXHJcbiAgJjo6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDFweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAzOCU7XHJcbiAgICBib3R0b206IC03MCU7XHJcbiAgfVxyXG59XHJcblxyXG4uYWR2YW50YWdlX190ZXh0IHtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgY29sb3I6ICM5OTk5OTk7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1heC13aWR0aDogMjEwcHg7XHJcblxyXG59IiwiLm1haW4tbWVudSB7XHJcbiAgYmFja2dyb3VuZDogIzU3Njg3ZjtcclxufVxyXG5cclxuLm1haW4tbWVudUxlZnQge1xyXG4gIHdpZHRoOiA2MCU7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWYzO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgcGFkZGluZzogMjBweCAwO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgJjo6YWZ0ZXJ7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogNDBweDtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIGJhY2tncm91bmQ6IHVybCguL3BpY3R1cmVzL2Nyb3NzLnBuZykgbm8tcmVwZWF0O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IC0zOXB4O1xyXG4gICAgdG9wOiA1JTtcclxuICB9XHJcbn1cclxuXHJcbi5tYWluLW1lbnVfX2xpc3Qge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuLm1haW4tbWVudV9faXRlbSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBtYXJnaW46IDQwcHggMHB4O1xyXG4gIGJvcmRlci1yaWdodDogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cclxuICAmOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkYWRlZTY7XHJcbiAgICBib3JkZXItcmlnaHQ6IDRweCBzb2xpZCByZWQ7XHJcbiAgfVxyXG59XHJcblxyXG4ubWFpbi1tZW51X19pbWcge1xyXG4gIG1hcmdpbjogMCAyMHB4O1xyXG59XHJcblxyXG4ubWFpbi1tZW51X190ZXh0IHtcclxuICBjb2xvcjogIzc3N2I4ZTtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcblxyXG4ubWFpbi1tZW51X19waWMge1xyXG4gIHdpZHRoOiAzMHB4O1xyXG4gIGhlaWdodDogMzBweDtcclxuICBmaWxsOiB0cmFuc3BhcmVudDtcclxuICBzdHJva2U6IHJlZDtcclxuICBmaWxsLXJ1bGU6IG5vbnplcm87XHJcbiAgdHJhbnNpdGlvbjogMC4zcztcclxuXHJcbiAgJjpob3ZlciB7XHJcbiAgICAgIHN0cm9rZTogcmVkOyBcclxuICB9XHJcbn0iLCIvKi5zb2NpYWxzIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuKi9cclxuXHJcbi5zb2NpYWxzX190aXRsZSB7XHJcbiAgICBmb250LWZhbWlseTogJ2dvdGhhbXBybycsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGxpbmUtaGVpZ2h0OiA1NHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLTEwcHg7XHJcblxyXG59XHJcblxyXG4uc29jaWFsc19fbGlzdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbn1cclxuXHJcbi5zb2NpYWxzX19pdGVtIHtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgIHdpZHRoOiAyM3B4IDtcclxuICAgIGhlaWdodDogMjNweDsgICBcclxuXHJcbiAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgIH1cclxufVxyXG5cclxuICBcclxuLnNvY2lhbHNfX3BpYyB7XHJcbiAgICB3aWR0aDogMjVweDtcclxuICAgIGhlaWdodDogMjVweDtcclxuICAgIGZpbGw6IHRyYW5zcGFyZW50O1xyXG4gICAgc3Ryb2tlOiAjM2U0ODU4O1xyXG4gICAgZmlsbC1ydWxlOiBub256ZXJvO1xyXG4gICAgdHJhbnNpdGlvbjogMXM7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgc3Ryb2tlOiByZWQ7ICAgIH1cclxufVxyXG4iLCIuaGFtYnVyZ2VyLW1lbnUtbGluayB7XHJcblx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0aGVpZ2h0OiAyMnB4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0ZGlzcGxheTogbm9uZTtcclxuXHJcblx0QGluY2x1ZGUgdGFibGV0cyB7XHJcblx0XHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuXHR9XHJcbn1cclxuXHJcbi5oYW1idXJnZXItbWVudS1saW5rX19iYXJzIHtcclxuXHQmLCAmOmJlZm9yZSwgJjphZnRlciB7XHJcblx0XHRiYWNrZ3JvdW5kOiByZWQ7XHJcblx0XHR3aWR0aDogMzBweDtcclxuXHRcdGhlaWdodDogNXB4O1xyXG5cdFx0Ym9yZGVyLXJhZGl1czogM3B4O1xyXG5cdH1cclxuXHJcblx0JjpiZWZvcmUsICY6YWZ0ZXIge1xyXG5cdFx0Y29udGVudDogXCJcIjtcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdH1cclxuXHJcblx0JjpiZWZvcmUge1xyXG5cdFx0dG9wOiAwO1xyXG5cdH1cclxuXHJcblx0JjphZnRlciB7XHJcblx0XHRib3R0b206IDA7XHJcblx0fVxyXG59XHJcblxyXG4iLCIuYWJvdXQge1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBjb2xvcjogIzZhNmE2YTtcclxuXHJcbiAgJl9fY29udGFpbmVyIHtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAxOHB4IDBweDtcclxuICB9XHJcblxyXG4gICZfX21vbWVudHMge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuXHJcbiAgJl9fbmF2aWdhdGlvbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XHJcbiAgICBtYXgtd2lkdGg6IDEzLjVyZW07XHJcbiAgfVxyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxufVxyXG5cclxuLmJyZWFkY3J1bWJzIHtcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbiAgJl9fbGlzdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICZfX2l0ZW0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgfVxyXG5cclxuICAmX19kaXZpZGVyIHtcclxuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICB9XHJcblxyXG4gICZfX2xpbmsge1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGNvbG9yOiAjOTk5OTk5O1xyXG4gIH1cclxufVxyXG5cclxuLmJyZWFkY3J1bWJzX19saW5rLS1hY3RpdmUsXHJcbi5icmVhZGNydW1ic19fbGluazphY3RpdmUge1xyXG4gIGNvbG9yOiAjZTc0YzNjO1xyXG59XHJcblxyXG4ubW9tZW50cyB7XHJcbiAgJl9faXRlbSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiAgfVxyXG5cclxuICAmX19kZXNjIHtcclxuICAgIGZsZXg6IDQ7XHJcblxyXG4gICAgc3BhbiB7XHJcbiAgICAgIGNvbG9yOiAjZTc0YzNjO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fZGF0ZSB7XHJcbiAgICBmbGV4OiAxO1xyXG4gICAgY29sb3I6ICNlNzRjM2M7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBib3JkZXI6IDFweCBkYXNoZWQgI2U3NGMzYztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1pbi13aWR0aDogOTVweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XHJcbiAgfVxyXG59XHJcblxyXG4uYWJvdXRfX21vbWVudHM6YmVmb3JlIHtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHotaW5kZXg6IDA7XHJcbiAgd2lkdGg6IDFweDtcclxuICBoZWlnaHQ6IDg1JTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiA3JTtcclxuICBsZWZ0OiAxMSU7XHJcbiAgYm9yZGVyLWxlZnQ6IDFweCBkYXNoZWQgI2U3NGMzYztcclxufSIsIi5wcm9jZXNzIHtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzUyNWE2YTtcclxuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi9waWN0dXJlcy9wcm9jZXNzLWJnLnBuZ1wiKTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICBjb2xvcjogI2ZmZjtcclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcblxyXG4gICZfX2NvbnRhaW5lciB7XHJcbiAgICBwYWRkaW5nOiAxOHB4IDBweDtcclxuICB9XHJcblxyXG59XHJcblxyXG4ucGxhbiB7XHJcbiAgJl9fbGlzdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcblxyXG4gICZfX3JvdyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcblxyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2l0ZW0ge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDEyMHB4O1xyXG4gIH1cclxuXHJcbiAgJl9faW1nIHtcclxuICAgIHdpZHRoOiA3NXB4O1xyXG4gICAgaGVpZ2h0OiA3NXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi5wbGFuX19pbWctcGljIHtcclxuICB3aWR0aDogNzVweDtcclxuICBoZWlnaHQ6IDc1cHg7XHJcbiAgZmlsbDogdHJhbnNwYXJlbnQ7XHJcbiAgc3Ryb2tlOiByZWQ7XHJcbiAgZmlsbC1ydWxlOiBub256ZXJvO1xyXG4gIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMCU7XHJcbn0iLCIuZ2VvIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzYyMjI4O1xyXG4gIGNvbG9yOiAjZmZmO1xyXG5cclxuICAmX19jb250YWluZXIge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICZfX21hcCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTI1YTZhO1xyXG4gICAgZmxleDogMTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWluLWhlaWdodDogMTcwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJl9fZmFjdHMge1xyXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgICBtaW4taGVpZ2h0OiAxNTBweDtcclxuICAgIGZsZXg6IDE7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjNjIyMjg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcblxyXG4gICAgJi0tYm90dG9tIHtcclxuICAgICAgcGFkZGluZy10b3A6IDBweDtcclxuICAgICAgcGFkZGluZy1ib3R0b206IDEuNjI1cmVtO1xyXG4gICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19pdGVtIHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtLS1ib3R0b20ge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuXHJcbiAgICAuZ2VvX19ib3R0b20taW1nIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzUyNWE2YTtcclxuICAgICAgd2lkdGg6IDcwcHg7XHJcbiAgICAgIGhlaWdodDogNzBweDtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGJvdHRvbTogODAlO1xyXG4gICAgfVxyXG5cclxuICAgIC5nZW9fX2Rlc2Mge1xyXG4gICAgICBtYXJnaW4tdG9wOiAtMTVweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX251bWJlciB7XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB3aWR0aDogMjAlO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgLjUpO1xyXG4gICAgICBsZWZ0OiA0MCU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19kZXNjIHtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IC0xNXB4O1xyXG4gIH1cclxuXHJcbiAgJl9faW1nIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1MjVhNmE7XHJcbiAgICB3aWR0aDogNzBweDtcclxuICAgIGhlaWdodDogNzBweDtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogODAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICZfX2JvcmRlciB7XHJcbiAgICB3aWR0aDogODUlO1xyXG4gICAgaGVpZ2h0OiA4NSU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxufVxyXG5cclxuLmdlb19faWNvbi1waWMge1xyXG4gIHdpZHRoOiA3NXB4O1xyXG4gIGhlaWdodDogNzVweDtcclxuICBmaWxsOiB0cmFuc3BhcmVudDtcclxuICBzdHJva2U6IHdoaXRlO1xyXG4gIGZpbGwtcnVsZTogbm9uemVybztcclxuICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XHJcbiAgbWFyZ2luLWxlZnQ6IC0zJTtcclxufSIsIi5jYXJlZXIge1xyXG4gIHBhZGRpbmc6IDEwcHggMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICZfX2luZm8ge1xyXG4gICAgcCB7XHJcbiAgICAgIGNvbG9yOiAjNmM2YzZjO1xyXG4gICAgfVxyXG5cclxuICAgIGEge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIGNvbG9yOiAjZDE0NTRkO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogOXB4O1xyXG4gIH1cclxufSIsIi52YWNhbmNpZXMge1xyXG4gIHBhZGRpbmc6IDEwcHggMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuXHJcbiAgJl9fY29udGFpbmVyIHtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAmX19zbGlkZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBmbGV4OiAxO1xyXG4gIH1cclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgY29sb3I6ICM3NzdiOGU7XHJcbiAgICB3aWR0aDogMzAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuXHJcbiAgICAmOmJlZm9yZSB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHotaW5kZXg6IDA7XHJcbiAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgdG9wOiA1MCU7XHJcbiAgICAgIGxlZnQ6IC0xMDAlO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG4gICAgfVxyXG5cclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB6LWluZGV4OiAwO1xyXG4gICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIHRvcDogNTAlO1xyXG4gICAgICBsZWZ0OiAxMDAlO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9faXRlbSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWYzO1xyXG4gICAgcGFkZGluZzogMjBweCAzMHB4O1xyXG4gIH1cclxuXHJcbiAgJl9fYnRucyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblxyXG4gICAgLnZhY2FuY3ktYnRuIHtcclxuICAgICAgZmxleDogMTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2R1dGllcyxcclxuICAmX19yZXF1aXJlLFxyXG4gICZfX2NvbmRpdGlvbnMsXHJcbiAgJl9fYWRkcmVzcyB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG59XHJcblxyXG4uc2xpZGVyX19idG5zIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICBtaW4taGVpZ2h0OiAzMHB4O1xyXG59XHJcblxyXG4ubGFiZWwge1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgY29sb3I6ICNkMTQ1NGQ7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMTUzLCAxNTMsIDE1MywgLjcpO1xyXG4gIHBhZGRpbmc6IDVweCAwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxufSIsIlxyXG4ucG9zLW1hdGVyaWFscywgLmNvbnRhaW5lciB7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbn1cclxuXHJcblxyXG4ucG9zIHtcclxuICAmX19pbWcge1xyXG4gIGJhY2tncm91bmQ6IHVybChcIi4vcGljdHVyZXMvcG9zbWEuanBnXCIpO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIG1pbi1oZWlnaHQ6IDMyMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcblxyXG4gIH1cclxuXHJcbiAgJl9fbGlzdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICB9XHJcblxyXG4gICZfX2l0ZW0ge1xyXG4gICAgd2lkdGg6IDQ1JTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICZfX2l0ZW0tLXBpYyB7XHJcbiAgICB3aWR0aDogNzVweDtcclxuICAgIGhlaWdodDogNzVweDtcclxuICAgIGZpbGw6IHRyYW5zcGFyZW50O1xyXG4gICAgc3Ryb2tlOiAjZTU1MzU4O1xyXG4gICAgc3Ryb2tlLXdpZHRoOiAycHg7XHJcbiAgICB0cmFuc2l0aW9uOiAxcztcclxuXHJcbiAgfVxyXG5cclxuICAmX19pdGVtLS10ZXh0IHtcclxuICAgIGNvbG9yOiAjNmE2YTZhO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxNS42N3B4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi50aXRsZV9fcG9zIHtcclxuICBjb2xvcjogIzc3N2I4ZTtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIG1hcmdpbjogMjBweCAwO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgJjo6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogNXB4O1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2NDQ0YTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogNXB4O1xyXG4gICAgcmlnaHQ6IC0xNXB4O1xyXG5cclxuICB9XHJcbn1cclxuXHJcbi5zdWJ0aXRsZV9fcG9zIHtcclxuICBjb2xvcjogI2M5NGQzZjtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBsaW5lLWhlaWdodDogMjlweDtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnBvc19fdGV4dCB7XHJcbiAgY29sb3I6ICM2YTZhNmE7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XHJcbn1cclxuXHJcblxyXG4uaHVnZS1wb3MsIC5wbGV4aWdsYXNzLXByb2QsIC5zYWxlLXBvaW50IHtcclxuXHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNWY5O1xyXG5cclxuICAmX19pbWcge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDE2MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzk4OTg5ODtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U1NTM1ODtcclxuICAgIH1cclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHdpZHRoOiAxMTBweDtcclxuICAgICAgaGVpZ2h0OiAxMTBweDtcclxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuL3BpY3R1cmVzL3Bvc21hX2JnMi5wbmcnKTtcclxuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICBib3JkZXI6IDEwcHggc29saWQgI2Y0ZjVmOTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgYm90dG9tOiAtNjBweDtcclxuICAgICAgbGVmdDogMzUlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fY29udGFpbmVyIHtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XHJcbiAgICBtYXJnaW46IDgwcHggMDtcclxuICB9XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDIuMTJweDtcclxuICAgIG1hcmdpbi10b3A6IDI1cHg7XHJcbiAgICBtYXgtd2lkdGg6IDU1JTtcclxuICB9XHJcblxyXG4gICZfX2xpc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuICB9XHJcblxyXG4gICZfX2l0ZW0ge1xyXG4gICAgY29sb3I6ICM5ODk4OTg7XHJcbiAgICAvL2ZvbnQtZmFtaWx5OiBcIk15cmlhZCBQcm9cIjtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBsaW5lLWhlaWdodDogMjtcclxuICB9XHJcblxyXG4gICZfX2J0biB7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMTdweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM5ODk4OTg7XHJcbiAgICBwYWRkaW5nOiAxNXB4IDM1cHg7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlNTUzNTg7XHJcbiAgICB9XHJcblxyXG4gICAvLyBtYXJnaW4tdG9wOiA3MHB4O1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi5odWdlLXBvcyB7XHJcbiAgJl9faW1nIHsgXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi9waWN0dXJlcy9wb3NtYV9iZzIucG5nJyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uc2FsZS1wb2ludCB7XHJcbiAgJl9faW1nIHsgXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi9waWN0dXJlcy9wb3NtYV9iZzMucG5nJyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ucGxleGlnbGFzcy1wcm9kIHtcclxuICAmX19pbWcgeyBcclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuL3BpY3R1cmVzL3Bvc21hX2JnNC5wbmcnKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbiIsIlxyXG4uc2FsZXMtZGVjb3JhdGlvbiwgLnBvbHlzdGFuZHMsIC5jb250YWluZXIge1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG59XHJcblxyXG4uc2FsZXMtZGVjb3JhdGlvbiB7XHJcblxyXG4gICZfX2ltZyB7XHJcbiAgYmFja2dyb3VuZDogdXJsKFwiLi9waWN0dXJlcy9zYWxlc2RlY29yLnBuZ1wiKTtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICBtaW4taGVpZ2h0OiAxNjdweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG5cclxuICB9XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIG1hcmdpbjogMTVweCAwO1xyXG4gIH1cclxuXHJcbiAgJl9fdGV4dCB7XHJcbiAgICBjb2xvcjogIzRlNGU0ZTtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBsaW5lLWhlaWdodDogMTUuNjdweDtcclxuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi50cy1tZXRhbGwsIC50cy1tZGYsIC50cy1kaXNwbGF5LCAudHMtb3RoZXIge1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICZfX2Rlc2Mge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gIH1cclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgY29sb3I6ICM0ZTRlNGU7XHJcbiAgICBmb250LXNpemU6IDE5cHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICB9XHJcblxyXG5cclxuICAmX19pbWFnZSB7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICAgIG1pbi1oZWlnaHQ6IDEyMHB4O1xyXG4gICAgd2lkdGg6IDEyMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q0ZDdkYTtcclxuICB9XHJcblxyXG4gICZfX2xpc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICB9XHJcblxyXG4gICZfX2l0ZW0ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDM1MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcclxuICAgIHBhZGRpbmc6IDMwcHggMjVweDtcclxuXHJcbiAgICAmOmxhc3QtY2hpbGQsICY6bnRoLWNoaWxkKDJuKSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgXHJcbiAgfVxyXG5cclxuICAmX19waWMge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbiAgfVxyXG5cclxuICAmX19jb250YWluZXIge1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcblxyXG4gICZfX3N1YnRpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIHBhZGRpbmc6IDIwcHggMjBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIHdpZHRoOiA1cHg7XHJcbiAgICAgIGhlaWdodDogMzVweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2NDQ0YTtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IDE1cHg7XHJcbiAgICAgIGxlZnQ6IDA7XHJcblxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fdGV4dCB7XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gICAgY29sb3I6ICM0ZTRlNGU7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi50cy1tZXRhbGwge1xyXG4gICZfX2Rlc2Mge1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICB9XHJcblxyXG4gICZfX2ltYWdlIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvdHMxLnBuZ1wiKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4udHMtbWRmIHsgIFxyXG4gICZfX2ltYWdlIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvdHMyLnBuZ1wiKTtcclxuICB9XHJcbn1cclxuXHJcbi50cy1kaXNwbGF5IHtcclxuICAmX19pbWFnZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuL3BpY3R1cmVzL3RzMy5wbmdcIik7XHJcbiAgfVxyXG59XHJcblxyXG4udHMtb3RoZXIge1xyXG4gICZfX2ltYWdlIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvdHM0LnBuZ1wiKTtcclxuICB9XHJcbn1cclxuXHJcbi5wb2x5c3RhbmRzIHtcclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgY29sb3I6ICM3NzdiOGU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgcGFkZGluZzogMjBweCAwIDEwcHg7XHJcbiAgfVxyXG5cclxuICAmX190ZXh0IHtcclxuICAgIGNvbG9yOiAjNGU0ZTRlO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gIH1cclxuXHJcbiAgJl9fbGlzdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gIH1cclxuXHJcbiAgJl9faXRlbSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMzMwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xyXG4gICAgcGFkZGluZzogMzBweCAyNXB4O1xyXG5cclxuICAgICY6bnRoLWNoaWxkKDFuKSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiAgXHJcbiAgXHJcbi5kaXNwZW5zZXIge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICZfX2NvbnRhaW5lciB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgfVxyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBwYWRkaW5nOiAyMHB4IDAgMDtcclxuICB9XHJcblxyXG4gICZfX3RleHQge1xyXG4gICAgY29sb3I6ICM0ZTRlNGU7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTtcclxuICB9XHJcblxyXG4gICZfX3N1YnRpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICZfX2ltYWdlIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvZGlzcGVuc2VyLnBuZ1wiKTtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIG1pbi1oZWlnaHQ6IDIxN3B4O1xyXG4gICAgd2lkdGg6IDIyN3B4O1xyXG4gICAgbWFyZ2luOiAyNXB4O1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIFxyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB3aWR0aDogMjgwcHg7XHJcbiAgICAgIGhlaWdodDogMjgwcHg7XHJcbiAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNmZDNiM2U7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgdG9wOiAtMjAlO1xyXG4gICAgICBsZWZ0OiAtMTAlO1xyXG4gIFxyXG4gICAgfVxyXG4gIFxyXG4gIH1cclxuXHJcbiAgJl9fZGVzYyB7XHJcbiAgICB3aWR0aDogODUlO1xyXG4gIH1cclxuXHJcbiAgJl9fbGlzdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgfVxyXG5cclxuICAmX19pdGVtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJl9faW1nIHtcclxuICAgIG1hcmdpbjogMTVweDtcclxuICB9XHJcblxyXG4gICZfX3BpYyB7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIGhlaWdodDogMzBweDtcclxuICAgIGZpbGw6IHRyYW5zcGFyZW50O1xyXG4gICAgc3Ryb2tlOiAjZTU1MzU4O1xyXG4gICAgc3Ryb2tlLXdpZHRoOiAzcHg7XHJcbiAgICB0cmFuc2l0aW9uOiAxcztcclxuXHJcbiAgfVxyXG59XHJcblxyXG4uZGl2aWRlcnMge1xyXG5cclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBtYXJnaW46IDEwcHggMDtcclxuICB9XHJcblxyXG4gICZfX3RleHQge1xyXG4gICAgY29sb3I6ICM0ZTRlNGU7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XHJcbiAgfVxyXG5cclxuICAmX19pbWcge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy9kaXZpZGVyczEucG5nXCIpO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgbWluLWhlaWdodDogMTYwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogMjVweDtcclxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy9kaXZpZGVyczIucG5nXCIpO1xyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgICAgIHdpZHRoOiAyMjBweDtcclxuICAgICAgaGVpZ2h0OiAyMjBweDtcclxuICAgICAgdG9wOiAtMTAlO1xyXG4gICAgICBsZWZ0OiAtMyU7XHJcblxyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59XHJcblxyXG4ucHJpY2Vob2xkZXJzIHtcclxuXHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcclxuXHJcblxyXG4gICZfX2NvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuXHJcbiAgJl9faW1hZ2Uge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy9wcmljZV9ob2xkMS5wbmdcIik7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgfVxyXG5cclxuICAmX19pdGVtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIH1cclxuXHJcbiAgJl9faW1nIHtcclxuICAgIHdpZHRoOiAxNTBweDtcclxuICAgIGhlaWdodDogMTUwcHg7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjYzMyNDJhO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB9XHJcblxyXG4gICZfX3BpYyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIG1hcmdpbjogMTBweCAwO1xyXG4gIH1cclxuXHJcbiAgJl9fc3VidGl0bGUge1xyXG4gICAgY29sb3I6ICM0ZTRlNGU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICB9XHJcblxyXG59XHJcblxyXG4ud29iYmxlIHtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZjM7XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgY29sb3I6ICM3NzdiOGU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgcGFkZGluZzogMTBweCAwIDA7XHJcbiAgfVxyXG5cclxuICAmX190aXRsZS13cmFwIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuICAmX190ZXh0IHtcclxuICAgIGNvbG9yOiAjNGU0ZTRlO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi5tb2JpbGUge1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBcclxuICAmX190aXRsZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIHBhZGRpbmc6IDEwcHggMDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIHdpZHRoOiA1cHg7XHJcbiAgICAgIGhlaWdodDogMjBweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2NDQ0YTtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDhweDtcclxuICAgICAgcmlnaHQ6IC0xMHB4O1xyXG5cclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX3N1YnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBjb2xvcjogI2M1MmEzMDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgfVxyXG5cclxuICAmX19pbWFnZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuL3BpY3R1cmVzL21vYmlsZS5wbmdcIik7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICAgIGhlaWdodDogMzQwcHg7XHJcbiAgICB3aWR0aDogMjMwcHg7XHJcblxyXG4gIH1cclxuICBcclxuICAmX190ZXh0IHtcclxuICAgIGNvbG9yOiAjNGU0ZTRlO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gIH1cclxufVxyXG5cclxuLmRyaXZlcyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgfVxyXG5cclxuICAmX19waWMge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICAmX19saXN0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICB9XHJcblxyXG4gICZfX2l0ZW0ge1xyXG4gICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjMzI0MmE7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxuICBcclxuICAmX190ZXh0IHtcclxuICAgIGNvbG9yOiAjNGU0ZTRlO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbiIsIi5wcm9kdWN0cyB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBwYWRkaW5nOiAxMHB4IDBweDtcclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgY29sb3I6ICM3NzdiOGU7XHJcbiAgfVxyXG5cclxuICAmX19pbnRybyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG5cclxuICAmX19hYm91dCB7XHJcblxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG5cclxuICAgIHNwYW4ge1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2NvYXN0ZXJzIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxufVxyXG5cclxuLmNvYXN0ZXJzIHtcclxuICAmX19pbmZvIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcblxyXG4gICAgc3BhbiB7XHJcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG5cclxuICAgICYtaXRlbSB7XHJcbiAgICAgIGxpc3Qtc3R5bGU6IGRpc2M7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19ibG9jayB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDEwcHggMzBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG5cclxuICAmX19pbWcge1xyXG4gICAgd2lkdGg6IDI1NXB4O1xyXG4gICAgaGVpZ2h0OiAyNTVweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICB9XHJcblxyXG4gICZfX3BpYyB7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgaGVpZ2h0OiA4MCU7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuXHJcbiAgICAmLWltZyB7XHJcbiAgICAgIHdpZHRoOiAzNXB4O1xyXG4gICAgICBoZWlnaHQ6IDM1cHg7XHJcbiAgICAgIG1pbi13aWR0aDogMzVweDtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xyXG5cclxuICAgICAgJi0tYmlnIHtcclxuICAgICAgICB3aWR0aDogNDBweDtcclxuICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5jb2FzdGVyc19faW1nOmJlZm9yZSB7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiAxMXB4O1xyXG4gIHdpZHRoOiAxMXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBib3R0b206IC0zJTtcclxuICB6LWluZGV4OiA1O1xyXG59XHJcblxyXG4uY29hc3RlcnNfX2ltZzphZnRlciB7XHJcbiAgY29udGVudDogXCJcIjtcclxuICB6LWluZGV4OiAwO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgd2lkdGg6IDFweDtcclxuICBib3JkZXItbGVmdDogMXB4IGRhc2hlZCByZWQ7XHJcbiAgYm90dG9tOiAtMTIlO1xyXG59XHJcblxyXG4uY29hc3RlcnNfX2l0ZW0taWNvbiB7XHJcbiAgd2lkdGg6IDM1cHg7XHJcbiAgaGVpZ2h0OiAzNXB4O1xyXG4gIGZpbGw6IHRyYW5zcGFyZW50O1xyXG4gIHN0cm9rZTogcmVkO1xyXG4gIGZpbGwtcnVsZTogbm9uemVybztcclxuICB0cmFuc2l0aW9uOiAwLjNzO1xyXG5cclxuICAmLS1iaWcge1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgfVxyXG59IiwiLmNhdGFsb2cge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZjM7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBwYWRkaW5nOiAxMHB4IDBweDtcclxuXHJcbiAgJl9fbGlzdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcblxyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fcGFnZSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIH1cclxuXHJcbiAgJl9fZGVzYyB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgfVxyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICB9XHJcblxyXG4gICZfX2J0bnMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICZfX2ltZyB7XHJcbiAgICB3aWR0aDogMTIwcHg7XHJcbiAgICBoZWlnaHQ6IDEyMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcblxyXG4gICAgJi1iZyB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLm9yZ2FuaXplcnMge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZjM7XHJcbiAgcGFkZGluZzogMTBweCAwcHg7XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gIH1cclxuXHJcbiAgJl9fbGlzdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtIHtcclxuICAgIHBhZGRpbmc6IDMwcHggMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDlweCAxMXB4IDBweCByZ2JhKDExOSwgMTIzLCAxNDIsIC4yKTtcclxuICB9XHJcblxyXG4gICZfX2ltZyB7XHJcbiAgICB3aWR0aDogMjYwcHg7XHJcbiAgICBtaW4td2lkdGg6IDI2MHB4O1xyXG4gICAgaGVpZ2h0OiAyNTBweDtcclxuICB9XHJcblxyXG4gICZfX2JnIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgJl9fZ3JvdXAge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6ICM3NzdiOGU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gIH1cclxuXHJcbiAgJl9fbmFtZSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgfVxyXG59IiwiLnBvcyB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcclxuICBwYWRkaW5nOiAwLjYyNXJlbSAwcmVtO1xyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICB9XHJcblxyXG4gICZfX3N1YnRpdGxlIHtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBwYWRkaW5nOiAwcHggNXB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCByZWQ7XHJcbiAgfVxyXG5cclxuICAmX19pbnRybyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICZfX3Byb21vc3RhbmRzIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XHJcbiAgICBwYWRkaW5nLXRvcDogMTVweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJl9fc2hvcC1pbi1zaG9wIHtcclxuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gIH1cclxuXHJcbiAgJl9fb2ZmaWNlcyB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG4gIH1cclxufVxyXG5cclxuLnByb21vc3RhbmRzIHtcclxuICAmX19kZXNjIHtcclxuXHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG5cclxuICAgIHNwYW4ge1xyXG4gICAgICBjb2xvcjogI2MzMjEyNjtcclxuICAgIH1cclxuXHJcbiAgICBwLFxyXG4gICAgLnByb21vc3RhbmRzX19saXN0IHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcblxyXG4uc2hvcC1pbi1zaG9wIHtcclxuXHJcbiAgJl9fZGVzYyB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG5cclxuICAgIHNwYW4ge1xyXG4gICAgICBjb2xvcjogI2MzMjEyNjtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxuXHJcbiAgICBwIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2ltZyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJl9fbWFpbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICB9XHJcblxyXG4gICZfX2V4dHJhIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgIG1hcmdpbi10b3A6IC0xMHB4O1xyXG5cclxuICAgICYtaW1nIHtcclxuICAgICAgbWF4LXdpZHRoOiAxMDBweDtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2JnIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxufVxyXG5cclxuLm9mZmljZXMge1xyXG5cclxuXHJcbiAgJl9faW50cm8ge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vcGljdHVyZXMvb2ZmaWNlLWJnLnBuZ1wiKTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgIG1pbi1oZWlnaHQ6IDI0NXB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG5cclxuICAmX190eXBlIHtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgdGV4dC1zaGFkb3c6IDJweCAycHggMnB4IHJnYmEoMCwgMSwgMywgMC43NSk7XHJcblxyXG4gICAgJi0tbmFycm93IHtcclxuICAgICAgbWF4LXdpZHRoOiA3NXB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fc2xpZGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJl9fcGFnZSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJl9fbGlzdCxcclxuICAmX19pdGVtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICZfX2l0ZW0ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICY6YmVmb3JlIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB6LWluZGV4OiAwO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiA1MCU7XHJcbiAgICAgIHRvcDogMjUlO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fYmcge1xyXG4gICAgei1pbmRleDogNTtcclxuICB9XHJcbn0iLCIuZXhoaWJpdGlvbiB7XHJcbiAgcGFkZGluZzogMC42MjVyZW0gMHJlbTtcclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgY29sb3I6ICM3NzdiOGU7XHJcbiAgfVxyXG5cclxuICAmX19kZXNjIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XHJcbiAgICBwYWRkaW5nOiAxN3B4IDBweDtcclxuXHJcbiAgICBzcGFuIHtcclxuICAgICAgY29sb3I6ICNjMzIxMjY7XHJcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19pbWcge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWVmMztcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDBweDtcclxuICB9XHJcbn0iLCIucmVjZXB0aW9uIHtcclxuICBtYXJnaW4tYm90dG9tOiAxLjI1cmVtO1xyXG4gIHBhZGRpbmc6IDAuNjI1cmVtIDByZW07XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gIH1cclxuXHJcbiAgJl9faW50cm8ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuXHJcbiAgJl9faW1nIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWluLWhlaWdodDogMTc1cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoODEsIDk3LCAxMjAsIDAuNSkgMCUsIHJnYmEoODEsIDk3LCAxMjAsIDAuNSkgMTAwJSksIHVybChcIi4uLy4uL3BpY3R1cmVzL3JlY2VwdGlvbi1iZy5wbmdcIik7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAmX19kZXNjIHtcclxuICAgIHNwYW4ge1xyXG4gICAgICBjb2xvcjogI2MzMjEyNjtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxuXHJcbiAgICBwLFxyXG4gICAgLnJlY2VwdGlvbl9fbGlzdCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSIsIi5hZHZlcnQge1xyXG4gIHBhZGRpbmc6IDEwcHggMHB4O1xyXG5cclxuICAmX19pbnRybyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcblxyXG4gIH1cclxuXHJcbiAgJl9fbGlzdCB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogIzZhNmE2YTtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjY7XHJcbiAgfVxyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICB9XHJcblxyXG4gICZfX2Rlc2Mge1xyXG4gICAgcCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19pbWcge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNjBweDtcclxuXHJcbiAgICAmOmJlZm9yZSB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgaGVpZ2h0OiAxMXB4O1xyXG4gICAgICB3aWR0aDogMTFweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgYm90dG9tOiAtMyU7XHJcbiAgICAgIHotaW5kZXg6IDU7XHJcbiAgICB9XHJcblxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHotaW5kZXg6IDA7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIGhlaWdodDogNTVweDtcclxuICAgICAgd2lkdGg6IDFweDtcclxuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBkYXNoZWQgcmVkO1xyXG4gICAgICBsZWZ0OiA1MSU7XHJcbiAgICAgIHRvcDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX25hdiB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDBweCAxOHB4IDBweDtcclxuXHJcbiAgICAmOmJlZm9yZSB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgIHdpZHRoOiAxNXB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xyXG4gICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmVkO1xyXG4gICAgICBsZWZ0OiA0OSU7XHJcbiAgICAgIHRvcDogLTElO1xyXG4gICAgICB6LWluZGV4OiA1O1xyXG4gICAgfVxyXG4gIH1cclxufSIsIi5yb29mIHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG5cclxuICAmX19pbnRybyB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9waWN0dXJlcy9yb29mLWJnLnBuZ1wiKTtcclxuICAgIG1pbi1oZWlnaHQ6IDM0MHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAxcmVtO1xyXG4gIH1cclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgbWF4LXdpZHRoOiAxNTVweDtcclxuICB9XHJcblxyXG4gICZfX2Rlc2Mge1xyXG4gICAgcGFkZGluZzogMjJweCAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcclxuXHJcbiAgICBzcGFuIHtcclxuICAgICAgY29sb3I6ICNjMzIxMjY7XHJcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19zbGlkZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gIH1cclxuXHJcbiAgJl9fcGFnZSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XHJcbiAgfVxyXG59IiwiLnNpZ25ib2FyZHMge1xyXG4gIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDI4cHg7XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gIH1cclxuXHJcbiAgJl9faW50cm8ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gIH1cclxuXHJcbiAgJl9fZGVzYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRlZWYzO1xyXG4gICAgcGFkZGluZzogMTNweDtcclxuXHJcbiAgICBwIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICBzcGFuIHtcclxuICAgICAgY29sb3I6ICNjMzIxMjY7XHJcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19leGFtcGxlcyxcclxuICAmX19saXN0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB9XHJcblxyXG4gICZfX2xpc3Qge1xyXG4gICAgcGFkZGluZzogMTBweCAwcHg7XHJcbiAgfVxyXG5cclxuICAmX19leGFtcGxlcyB7XHJcblxyXG5cclxuICAgICY6YmVmb3JlIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB6LWluZGV4OiAwO1xyXG4gICAgICB3aWR0aDogMjAlO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIGxlZnQ6IDQwJTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuICAmX19pdGVtIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgfVxyXG59IiwiLmxpZ2h0IHtcclxuICBwYWRkaW5nOiAxMHB4IDBweDtcclxuXHJcbiAgJl9fcGFuZWxzIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgfVxyXG59XHJcblxyXG4ucGFuZWxzIHtcclxuICAmX190aXRsZSB7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICB9XHJcblxyXG4gICZfX2ludHJvIHtcclxuICAgIHNwYW4ge1xyXG4gICAgICBjb2xvcjogI2MzMjEyNjtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxuXHJcbiAgICBwIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2luZm8ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG5cclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHotaW5kZXg6IDA7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDQwJTtcclxuICAgICAgdG9wOiAzMCU7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19pbWcge1xyXG4gICAgei1pbmRleDogNTtcclxuICB9XHJcblxyXG4gICZfX2V4YW1wbGVzIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gIH1cclxufVxyXG5cclxuLmxldHRlcnMge1xyXG4gICZfX2ludHJvIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG5cclxuICAmX19zdWJ0aXRsZSB7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBwYWRkaW5nOiAwcHggNXB4O1xyXG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCByZWQ7XHJcbiAgfVxyXG5cclxuICAmX19pbWcge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgei1pbmRleDogMDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogODAlO1xyXG4gICAgICB0b3A6IDEwJTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2JnIHtcclxuICAgIHotaW5kZXg6IDU7XHJcbiAgfVxyXG5cclxuICAmX19kZXNjIHtcclxuICAgIHNwYW4ge1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICBjb2xvcjogI2MzMjEyNjtcclxuICAgIH1cclxuICB9XHJcbn0iLCIubmVvbiB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgY29sb3I6ICM3NzdiOGU7XHJcbiAgfVxyXG5cclxuICAmX19jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAmX19pbnRybyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWYzO1xyXG4gICAgcGFkZGluZzogMTVweCAwcHg7XHJcblxyXG4gICAgc3BhbiB7XHJcbiAgICAgIGNvbG9yOiAjYzMyMTI2O1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9faW1nIHtcclxuICAgIG1pbi1oZWlnaHQ6IDI2NXB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoODEsIDk3LCAxMjAsIDAuNSkgMCUsIHJnYmEoODEsIDk3LCAxMjAsIDAuNSkgMTAwJSksIHVybChcIi4uLy4uL3BpY3R1cmVzL25lb24tYmcucG5nXCIpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gIH1cclxufSIsIi5zdGVsZSB7XHJcbiAgcGFkZGluZzogMjBweCAwcHg7XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gIH1cclxuXHJcbiAgJl9faW50cm8ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuICB9XHJcblxyXG4gICZfX2Rlc2Mge1xyXG4gICAgc3BhbiB7XHJcbiAgICAgIGNvbG9yOiAjYzMyMTI2O1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIi5hdXRvIHtcclxuICBwYWRkaW5nOiAxNXB4IDBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWYzO1xyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICB9XHJcblxyXG4gICZfX2ludHJvIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XHJcblxyXG4gICAgcCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgc3BhbiB7XHJcbiAgICAgIGNvbG9yOiAjYzMyMTI2O1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmNvbnRhaW5lcl9fYXV0byB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG59IiwiLmRlc2lnbiB7XHJcbiAgcGFkZGluZzogMTBweCAwcHg7XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gIH1cclxuXHJcbiAgJl9fc3VidGl0bGUge1xyXG4gICAgY29sb3I6ICNjNDFmMjU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICB9XHJcblxyXG4gICZfX2ltZyB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi9waWN0dXJlcy9kZXNpZ24tYmcucG5nXCIpO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBtaW4taGVpZ2h0OiAyNDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcblxyXG4gICZfX2ludHJvIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgfVxyXG5cclxuICAmX190eXBlcyB7XHJcbiAgICBwYWRkaW5nOiAwcHggMTBweDtcclxuICB9XHJcblxyXG4gICZfX2l0ZW0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAmLS1zZWNvbmQ6YmVmb3JlIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgd2lkdGg6IDgzJTtcclxuICAgICAgYm9yZGVyLXRvcDogMXB4IGRhc2hlZCByZWQ7XHJcbiAgICAgIGxlZnQ6IDExJTtcclxuICAgICAgdG9wOiAtNSU7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tdGhpcmQ6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGhlaWdodDogMjA1JTtcclxuICAgICAgd2lkdGg6IDFweDtcclxuICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggZGFzaGVkIHJlZDtcclxuICAgICAgcmlnaHQ6IDIlO1xyXG4gICAgICB0b3A6IC0xMDAlO1xyXG4gICAgfVxyXG5cclxuICAgICYtLWZvdXJ0aDpiZWZvcmUge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICB3aWR0aDogOTIlO1xyXG4gICAgICBib3JkZXItdG9wOiAxcHggZGFzaGVkIHJlZDtcclxuICAgICAgcmlnaHQ6IDMlO1xyXG4gICAgICB0b3A6IC01JTtcclxuICAgIH1cclxuXHJcbiAgICAmLS1mb3VydGg6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGhlaWdodDogMjAlO1xyXG4gICAgICB3aWR0aDogMXB4O1xyXG4gICAgICBib3JkZXItbGVmdDogMXB4IGRhc2hlZCByZWQ7XHJcbiAgICAgIGxlZnQ6IDQlO1xyXG4gICAgICB0b3A6IC00JTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2luZm8ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuICAmX19kZXNjIHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuXHJcblxyXG4gIH1cclxuXHJcbiAgJl9faWNvbiB7XHJcbiAgICBtYXgtd2lkdGg6IDEzMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgZmxleDogMTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICB6LWluZGV4OiAxMDtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuXHJcbiAgICAmLS1yaWdodCB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tZmlyc3Qge1xyXG4gICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogXCIxXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHRvcDogOCU7XHJcbiAgICAgICAgbGVmdDogMTMlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB3aWR0aDogMXB4O1xyXG4gICAgICAgIGhlaWdodDogMjAlO1xyXG4gICAgICAgIGJvdHRvbTogLTUlO1xyXG4gICAgICAgIGxlZnQ6IDU1JTtcclxuICAgICAgICBib3JkZXItbGVmdDogMXB4IGRhc2hlZCByZWQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS1mb3VydGgge1xyXG4gICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogXCI0XCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHRvcDogOCU7XHJcbiAgICAgICAgbGVmdDogMTMlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi0tc2Vjb25kIHtcclxuICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiMlwiO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICB0b3A6IDglO1xyXG4gICAgICAgIHJpZ2h0OiAxNCU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS10aGlyZCB7XHJcbiAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiBcIjNcIjtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgdG9wOiA1JTtcclxuICAgICAgICByaWdodDogMTQlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgfVxyXG5cclxufSIsIi5wcmludCB7XHJcbiAgcGFkZGluZzogMTBweCAwcHg7XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcblxyXG4gICZfX2JnIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uLy4uL3BpY3R1cmVzL3BvbHlncmFwaHktYmcucG5nXCIpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgbWluLWhlaWdodDogMjAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gICZfX2ludHJvIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgfVxyXG5cclxuICAmX19kZXNjIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcblxyXG4gICAgcCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19tYWNoaW5lIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZjM7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiA4cHggMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICY6YmVmb3JlIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBoZWlnaHQ6IDAuNjg3NXJlbTtcclxuICAgICAgd2lkdGg6IDAuNjg3NXJlbTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgYm90dG9tOiAtMyU7XHJcbiAgICAgIHotaW5kZXg6IDU7XHJcbiAgICB9XHJcblxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHotaW5kZXg6IDA7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIGhlaWdodDogNDhweDtcclxuICAgICAgd2lkdGg6IDFweDtcclxuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBkYXNoZWQgcmVkO1xyXG4gICAgICBsZWZ0OiA1MSU7XHJcbiAgICAgIHRvcDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX3R5cGVzIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHBhZGRpbmc6IDE1cHggMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcclxuXHJcbiAgICAmOmJlZm9yZSB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgIHdpZHRoOiAwLjkzNzVyZW07XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XHJcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCByZWQ7XHJcbiAgICAgIGxlZnQ6IDQ5JTtcclxuICAgICAgdG9wOiAtMSU7XHJcbiAgICAgIHotaW5kZXg6IDU7XHJcbiAgICB9XHJcblxyXG4gICAgcCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcblxyXG4gICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzcGFuIHtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgY29sb3I6ICNjMzI0MmE7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLnNpbGsge1xyXG4gIHBhZGRpbmc6IDEwcHggMHB4O1xyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICB9XHJcblxyXG4gICZfX2ludHJvIHtcclxuICAgIG1pbi1oZWlnaHQ6IDIwLjVyZW07XHJcbiAgfVxyXG5cclxuICAmX19pbWFnZXMge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDgxLCA5NywgMTIwLCAwLjUpIDAlLCByZ2JhKDgxLCA5NywgMTIwLCAwLjUpIDEwMCUpLFxyXG51cmwoXCIuLi8uLi9waWN0dXJlcy9zaWxrLnBuZ1wiKTtcclxuICAgIGhlaWdodDogNjAlO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgbWluLWhlaWdodDogMjE1cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICZfX2V4YW1wbGVzIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBib3R0b206IC0zMCU7XHJcblxyXG4gICYtYmcge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG5cclxuICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbiAgJl9fZGVzYyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWVmMztcclxuICBwYWRkaW5nOiAxNXB4IDBweDtcclxuXHJcbiAgc3BhbiB7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBjb2xvcjogI2MzMjQyYTtcclxufVxyXG5cclxucCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuXHJcbiAgJjpsYXN0LWNoaWxkIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDBweDtcclxuICB9XHJcbn1cclxufVxyXG59IiwiLmVtYm9zc2luZyB7XHJcbiAgcGFkZGluZzogMTBweCAwcHg7XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gIH1cclxuXHJcbiAgJl9faW50cm8ge1xyXG4gICAgbWluLWhlaWdodDogMjAuNXJlbTtcclxuICB9XHJcblxyXG4gICZfX2ltYWdlcyB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoODEsIDk3LCAxMjAsIDAuNSkgMCUsIHJnYmEoODEsIDk3LCAxMjAsIDAuNSkgMTAwJSksIHVybChcIi4uLy4uL3BpY3R1cmVzL2VtYm9zc2luZy1iZy5wbmdcIik7XHJcbiAgICBoZWlnaHQ6IDYwJTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgIG1pbi1oZWlnaHQ6IDIxNXB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAmX19leGFtcGxlcyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAtMzAlO1xyXG5cclxuICAgICYtYmcge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcblxyXG4gICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fZGVzYyB7XHJcblxyXG4gICAgc3BhbiB7XHJcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgIGNvbG9yOiAjYzMyNDJhO1xyXG4gICAgfVxyXG5cclxuICAgIC5lbWJvc3NpbmdfX3R5cGUge1xyXG4gICAgICBjb2xvcjogIzRlNGU0ZTtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IGluaXRpYWw7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG5cclxuICAgIHAge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG5cclxuICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2l0ZW0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuXHJcbiAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSIsIi5lbWJyb2lkZXJ5IHtcclxuICBwYWRkaW5nOiAxMHB4IDBweDtcclxuXHJcbiAgJl9faW50cm8ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcblxyXG4gICAgJjpiZWZvcmUge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDYwJTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcclxuICAgICAgbGVmdDogMCU7XHJcbiAgICAgIHRvcDogMjAlO1xyXG4gICAgICB6LWluZGV4OiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9faW1nIHtcclxuICAgIHotaW5kZXg6IDEwO1xyXG4gIH1cclxuXHJcbiAgJl9fZGVzYyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG5cclxuICAgIHAge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG5cclxuICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3BhbiB7XHJcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgIGNvbG9yOiAjYzMyNDJhO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgY29sb3I6ICM3NzdiOGU7XHJcbiAgICBwYWRkaW5nOiAwcHggNXB4O1xyXG4gICAgZm9udC1zaXplOiAxOXB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICY6YmVmb3JlIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB3aWR0aDogMXB4O1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIGxlZnQ6IDAlO1xyXG4gICAgICB0b3A6IDAlO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzMyNDJhO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIi5lbmdyYXZpbmcge1xyXG4gIHBhZGRpbmc6IDEwcHggMHB4O1xyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBjb2xvcjogI0ZGRjtcclxuICAgIHRleHQtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDIsIDQsIDAuNzUpO1xyXG4gIH1cclxuXHJcbiAgJl9faW50cm8ge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDgxLCA5NywgMTIwLCAwLjUpIDAlLCByZ2JhKDgxLCA5NywgMTIwLCAwLjUpIDEwMCUpLCB1cmwoXCIuLi8uLi9waWN0dXJlcy9lbmdyYXZpbmctYmcucG5nXCIpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1pbi1oZWlnaHQ6IDIzMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gIH1cclxuXHJcbiAgJl9fZGVzYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlZWYzO1xyXG4gICAgcGFkZGluZzogMTVweCAwcHg7XHJcblxyXG4gICAgc3BhbiB7XHJcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgIGNvbG9yOiAjYzMyNDJhO1xyXG4gICAgfVxyXG5cclxuICAgIHAge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG5cclxuICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn0iLCIudGhlcm1vIHtcclxuICBwYWRkaW5nOiAxMHB4IDBweDtcclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgY29sb3I6ICNGRkY7XHJcbiAgICB0ZXh0LXNoYWRvdzogMHB4IDJweCAycHggcmdiYSgwLCAyLCA0LCAwLjc1KTtcclxuICB9XHJcblxyXG4gICZfX2ludHJvIHtcclxuICAgIGJhY2tncm91bmQ6IHVybChcIi4uLy4uL3BpY3R1cmVzL3RoZXJtby1iZy5wbmdcIik7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgbWluLWhlaWdodDogMjMwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgfVxyXG5cclxuICAmX19kZXNjIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZjM7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDBweDtcclxuXHJcbiAgICBzcGFuIHtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgY29sb3I6ICNjMzI0MmE7XHJcbiAgICB9XHJcblxyXG4gICAgcCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcblxyXG4gICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufSIsIi5zb3V2ZW5pciB7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgJl9fcGljdHVyZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiAyMjBweDtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIFxyXG4gIH1cclxuICBcclxuICAmX19pbWFnZTEge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy9zb3V2X19iZzMucG5nXCIpO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHJpZ2h0O1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgb3BhY2l0eTogMC41O1xyXG5cclxuICB9XHJcblxyXG4gICZfX2ltYWdlMiB7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZWJlZDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvc291dl9fYmcxLnBuZ1wiKTtcclxuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHdpZHRoOiAxNTBweDtcclxuICAgICAgaGVpZ2h0OiAyMDBweDtcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICBsZWZ0OiAzMCU7XHJcbiAgICAgIHotaW5kZXg6IDU7XHJcbiAgXHJcbiAgICB9XHJcblxyXG4gICAgJjo6YmVmb3JlIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi9waWN0dXJlcy9zb3V2X19iZzIucG5nXCIpO1xyXG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICAgICAgd2lkdGg6IDEzMHB4O1xyXG4gICAgICBoZWlnaHQ6IDE3MHB4O1xyXG4gICAgICB0b3A6IDIwJTtcclxuICAgICAgbGVmdDogLTIwJTtcclxuICAgICAgei1pbmRleDogMTA7XHJcbiAgXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19saXN0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7ICBcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHotaW5kZXg6IDEwO1xyXG4gICAgdG9wOiA5MCU7XHJcbiAgICBsZWZ0OiAxMCU7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IDAgMTVweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBcclxuICAgICY6OmJlZm9yZSB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB3aWR0aDogNTBweDtcclxuICAgICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNjQ0NGE7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAtMnB4O1xyXG4gICAgICBsZWZ0OiAtNHB4O1xyXG4gICAgICB6LWluZGV4OiAtMTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuICAmX19pY29uIHtcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgZmlsbDogdHJhbnNwYXJlbnQ7XHJcbiAgICBzdHJva2U6IHdoaXRlO1xyXG4gICAgc3Ryb2tlLXdpZHRoOiAzcHg7XHJcbiAgfSBcclxuXHJcbiAgJl9fZGVzYyB7XHJcbiAgICBjb2xvcjogIzZhNmE2YTtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBsaW5lLWhlaWdodDogMjVweDtcclxuXHJcbiAgfVxyXG4gIFxyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjNzc3YjhlO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIHBhZGRpbmc6IDIwcHggMCAwO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgd2lkdGg6IDJweDtcclxuICAgICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWY3MTc1O1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogNTAlO1xyXG4gICAgICBsZWZ0OiAyNSU7XHJcblxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgXHJcbiAgJl9fdGV4dCB7XHJcbiAgICBjb2xvcjogIzRlNGU0ZTtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcblxyXG4gIFxyXG59XHJcblxyXG4uc3ltYm9scyB7XHJcblxyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG5cclxuICAmX19pbWFnZSB7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1pbi1oZWlnaHQ6IDI1MHB4O1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDExNiwgMTI4LCAxNDUsIDAuNSkgMCUsIHJnYmEoMTE2LCAxMjgsIDE0NSwgMC41KSAxMDAlKSwgdXJsKCcuL3BpY3R1cmVzL3N5bWJvbF9iZy5wbmcnKTsgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgdGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IHJnYmEoMCwgMSwgMywgMC43NSk7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGZvbnQtc2l6ZTogMjNweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgfVxyXG5cclxuICAmX19jb250YWluZXIge1xyXG4gICAgbWFyZ2luOiAxNXB4IDA7XHJcbiAgfVxyXG5cclxuICAgIFxyXG4gICZfX3RleHQge1xyXG4gICAgY29sb3I6ICM0ZTRlNGU7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG5cclxuICAmX19saXN0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMjMwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KSAwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpIDEwMCUpO1xyXG4gIH1cclxuXHJcbiAgJl9faXRlbSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMjMwcHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDA7XHJcblxyXG4gICAgJjpudGgtY2hpbGQoMW4pIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX3BpYyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgb2JqZWN0LWZpdDogY29udGFpbjtcclxuICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICB9XHJcblxyXG5cclxufVxyXG5cclxuLndhdGNoIHtcclxuICAmX190aXRsZSB7XHJcbiAgICBjb2xvcjogIzc3N2I4ZTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBwYWRkaW5nOiAyMHB4IDAgMTBweDtcclxuICB9XHJcblxyXG4gICZfX3N1YnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBjb2xvcjogI2M1MjIyODtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgfVxyXG5cclxuICAmX190ZXh0IHtcclxuICAgIGNvbG9yOiAjNGU0ZTRlO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gIH1cclxuXHJcbiAgJl9faW1nIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvd2F0Y2hfYmcucG5nXCIpO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTYwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiNmNmY2ZjY7XHJcbiAgfVxyXG59XHJcblxyXG4ucHJvbW8tZm9ybSB7XHJcblxyXG4gICZfX2ltYWdlIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vcGljdHVyZXMvcHJvbW9fYmcucG5nXCIpO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDIxMHB4O1xyXG4gICAgbWFyZ2luOiAxNXB4IDA7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG4gIH1cclxuXHJcbiAgJl9fc3VidGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGNvbG9yOiAjYzUyMjI4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICB9XHJcblxyXG4gICZfX3N1YnRpdGxlMiB7XHJcbiAgICBjb2xvcjogIzZhNmE2YTtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgbWFyZ2luOiAyMHB4IDAgMTBweDtcclxuICB9XHJcblxyXG4gICZfX3RleHQge1xyXG4gICAgY29sb3I6ICM0ZTRlNGU7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XHJcbiAgfVxyXG5cclxuICAmX19saXN0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xyXG4gIH1cclxuXHJcbiAgJl9faXRlbSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgICY6bnRoLWNoaWxkKDFuKSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19waWMge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbiAgICBvYmplY3QtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuLmhvcmVjYSB7XHJcblxyXG4gICZfX2ltZyB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoMTM4LCAxNTcsIDE4MSwgMC41KSAwJSwgcmdiYSgxMzgsIDE1NywgMTgxLCAwLjUpIDEwMCUpLCB1cmwoXCIuL3BpY3R1cmVzL2hvcmVjYV9iZy5wbmdcIik7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMjcwcHg7XHJcblxyXG4gICAgbWFyZ2luOiAxNXB4IDA7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICB9XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIHRleHQtc2hhZG93OiAxcHggMXB4IDFweCByZ2JhKDAsIDEsIDMsIDAuNzUpO1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIG1hcmdpbi1yaWdodDogMzBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIFxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICB3aWR0aDogNXB4O1xyXG4gICAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNjQ0NGE7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgYm90dG9tOiAyMCU7XHJcbiAgICAgIHJpZ2h0OiAtOCU7XHJcblxyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG4gICZfX2xpc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtIHtcclxuICAgIGNvbG9yOiAjZjZmNmY2O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICB3aWR0aDogMTBweDtcclxuICAgICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNjQ0NGE7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgYm90dG9tOiA1cHg7XHJcbiAgICAgIHJpZ2h0OiAtMTVweDtcclxuXHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbiAgJl9fc3VidGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGNvbG9yOiAjYzUyMjI4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICB9XHJcblxyXG4gICZfX3RleHQge1xyXG4gICAgY29sb3I6ICM0ZTRlNGU7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuLnByZXNzLXByb2Qge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlZGVlZjM7XHJcblxyXG4gICZfX2ltZyB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuL3BpY3R1cmVzL3ByZXNzX2JnLnBuZ1wiKTtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciByaWdodDtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG87XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMzAwcHg7XHJcbiAgfVxyXG5cclxuICAmX19zdWJ0aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgY29sb3I6ICNjNTIyMjg7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIH1cclxuXHJcbiAgJl9fdGV4dCB7XHJcbiAgICBjb2xvcjogIzRlNGU0ZTtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTtcclxuICB9XHJcblxyXG4gICZfX2NvbnRhaW5lciB7XHJcbiAgICBwYWRkaW5nOiAyMHB4IDA7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuLmNpcmNsZSB7XHJcblxyXG4gICZfX2ltZyB7XHJcblxyXG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi9waWN0dXJlcy9jaXJjbGUucG5nXCIpO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMzAwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXJnaW46IDIwcHg7XHJcblxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgd2lkdGg6IDMyMHB4O1xyXG4gICAgICBoZWlnaHQ6IDMyMHB4O1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWY3MTc1O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAtMTBweDtcclxuICAgICAgbGVmdDogMTUlO1xyXG5cclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2xpc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcblxyXG4gIH1cclxuXHJcbiAgJl9faXRlbSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGNvbG9yOiAjNmE2YTZhO1xyXG4gICAgZm9udC1zaXplOiAxOXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGxldHRlci1zcGFjaW5nOiAtMC41cHg7XHJcbiAgICBtYXJnaW46IDE1cHggMDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgICB3aWR0aDogMTBweDtcclxuICAgICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWY3MTc1O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiA2cHg7XHJcbiAgICAgIHJpZ2h0OiAtMjBweDtcclxuXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBcclxuXHJcblxyXG59XHJcblxyXG4iXX0= */
=======position: relative;
}

>>>>>>>99cfa65dca6d12e29bf2abafd264badabb70681b .map__image {
  background-image: linear-gradient(90deg, rgba(81, 97, 120, 0.3) 0%, rgba(81, 97, 120, 0.3) 100%), url("./pictures/map-footer.png");
  background-size: cover;
  width: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  min-height: 15rem;
}

.map__title {
  color: #777b8e;
}

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>>4c5a02a5e537ce8b9694ddbbb882bf63c7688038>>>>>>>99cfa65dca6d12e29bf2abafd264badabb70681b